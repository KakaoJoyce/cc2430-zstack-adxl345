################################################################################
#                                                                              #
#      IAR Universal Linker V4.60K/386                                         #
#                                                                              #
<<<<<<< HEAD
#           Link time     =  10/Mar/2013  13:20:08                             #
=======
#           Link time     =  10/Mar/2013  13:26:56                             #
>>>>>>> develop
#           Target CPU    =  x51                                               #
#           List file     =  "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\List\AXD.map"                           #
#           Output file 1 =  "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Exe\AXD.d51"                            #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -C                                                #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\.. #
#                            \..\..\Libraries\TI2430DB\bin\EndDevice.lib"      #
#                            -C                                                #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\.. #
#                            \..\..\Libraries\TI2430DB\bin\Security.lib"       #
#                            -C                                                #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\.. #
#                            \..\..\Libraries\TIMAC\bin\TIMAC-CC2430.lib"      #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.0 Evaluation version\8051\CONFIG\"            #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\AF.r51"                             #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\AXD.r51"                            #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\AccessCodeSpace.r51"                #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\DebugTrace.r51"                     #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\FlashErasePage.r51"                 #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\MTEL.r51"                           #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\MT_AF.r51"                          #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\MT_NWK.r51"                         #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\MT_ZDO.r51"                         #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\OSAL.r51"                           #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\OSAL_AXD.r51"                       #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\OSAL_Memory.r51"                    #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\OSAL_Nv.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\OSAL_PwrMgr.r51"                    #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\OSAL_Tasks.r51"                     #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\OSAL_Timers.r51"                    #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\OnBoard.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\ReadAXD.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\SPIMgr.r51"                         #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\ZDApp.r51"                          #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\ZDConfig.r51"                       #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\ZDObject.r51"                       #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\ZDProfile.r51"                      #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\ZDSecMgr.r51"                       #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\ZGlobals.r51"                       #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\ZMain.r51"                          #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\adxl345.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\chipcon_banked_code_support.r51"    #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\chipcon_cexit.r51"                  #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\chipcon_cstartup.r51"               #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\flashDmaTrigger.r51"                #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_adc.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_assert.r51"                     #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_dma.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_drivers.r51"                    #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_key.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_lcd.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_led.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_sleep.r51"                      #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_target.r51"                     #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_timer.r51"                      #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\hal_uart.r51"                       #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_backoff_timer.r51"              #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_cfg.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_csp_tx.r51"                     #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_low_level.r51"                  #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_mcu.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_mem.r51"                        #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_radio.r51"                      #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_radio_defs.r51"                 #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_random.r51"                     #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_rx.r51"                         #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_rx_onoff.r51"                   #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_sleep.r51"                      #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\mac_tx.r51"                         #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\nwk_globals.r51"                    #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\saddr.r51"                          #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\zmac.r51"                           #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Obj\zmac_cb.r51"                        #
#                            -o                                                #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\Exe\AXD.d51"                            #
#                            -l                                                #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\En #
#                            dDeviceEB\List\AXD.map"                           #
#                            -xmsn                                             #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.0 Evaluation version\8051\LIB\"               #
#                            -f                                                #
#                            "C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects #
#                            \zstack\Samples\cc2430-zstack-adxl345\CC2430DB\.. #
#                            \..\..\Tools\CC2430DB\f8w2430.xcl"                #
#                            (-D_IDATA_END=0xFF -D_PDATA_START=0xEF00          #
#                            -D_PDATA_END=0xEFFF -D_IXDATA_START=E000          #
#                            -D_IXDATA_END=FEFF -D_XDATA_START=_IXDATA_START   #
#                            -D_XDATA_END=_IXDATA_END                          #
#                            -D_PM0_XDATA_START=E000 -D_PM0_XDATA_END=EFFF     #
#                            -D_NEAR_CODE_END=0x7FFF -D_TINY_CODE_END=0x7FF    #
#                            -D_CODE_START=0x0000 -D_CODE_END=0x4000           #
#                            -D_BANK1A=(10000+_CODE_END+1)                     #
#                            -D_ZIGNV_START=0x3E000 -D_ZIGNV_SIZE=0x1000       #
#                            -D_ZIGNV_END=(_ZIGNV_START+_ZIGNV_SIZE-1)         #
#                            -D?REGISTER_BANK=0 -D_REGISTER_BANK_START=0       #
#                            -D_FIRST_BANK_ADDR=0x10000 -D_NR_OF_BANKS=0x03    #
#                            -D?PBANK_NUMBER=EF -D?PBANK=93                    #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END                         #
#                            -Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F         #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)RCODE=_CODE_START-_CODE_END               #
#                            -Z(CODE)TINY_CODE=_CODE_START-_TINY_CODE_END      #
#                            -Z(CODE)NEAR_CODE=_CODE_START-_NEAR_CODE_END      #
#                            -Z(CODE)DIFUNCT=_CODE_START-_CODE_END             #
#                            -Z(CODE)FAR_CODE=_CODE_START-_CODE_END            #
#                            -Z(CODE)BANK_RELAYS=_CODE_START-_CODE_END         #
#                            -P(CODE)BANKED_CODE=_BANK1_START-_BANK1_END,_BANK #
#                            2_START-_BANK2_END,_BANK3_START-_BANK3_END,_BANK3 #
#                            b_START-_BANK3b_END                               #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -Z(CODE)CODE_C=_CODE_START-_CODE_END              #
#                            -Z(CODE)FAR_CODE_C=_FAR_CODE_START-_FAR_CODE_END  #
#                            -Z(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CHECKSUM#_CODE_END                        #
#                            -Z(XDATA)PM0_XDATA=_PM0_XDATA_START-_PM0_XDATA_EN #
#                            D                                                 #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START-_EXTENDED_STACK_END                  #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_N,PDATA_Z,PDATA_I=_PDATA_START-_PD #
#                            ATA_END                                           #
#                            -Z(XDATA)IXDATA_N,IXDATA_Z,IXDATA_I=_IXDATA_START #
#                            -_IXDATA_END                                      #
#                            -Z(XDATA)XDATA_N,XDATA_Z,XDATA_I=_XDATA_START-_XD #
#                            ATA_END                                           #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(CONST)XDATA_ROM_C=_XDATA_START-_XDATA_END      #
#                            -Z(SPLIT-XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_E #
#                            ND]/10000                                         #
#                            -Z(SPLIT-XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA #
#                            _START-_FAR_DATA_END]/10000                       #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*E+10000                                         #
#                            -Z(XDATA)HUGE_N,HUGE_Z,HUGE_I=_FAR_DATA_START-_FA #
#                            R_DATA_END                                        #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -cx51 -D_BANK1_START=_BANK1A                      #
#                            -D_BANK1_END=0x1FFFF -D_BANK2_START=0x28000       #
#                            -D_BANK2_END=0x2FFFF -D_BANK3_START=0x38000       #
#                            -D_BANK3_END=0x3DFFF                              #
#                            -D_BANK3b_START=(_ZIGNV_END+1)                    #
#                            -D_BANK3b_END=0x3FFF7                             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)ZIGNV=_ZIGNV_START-_ZIGNV_END             #
#                            -P(CODE)BANK3b=_BANK3b_START-_BANK3b_END          #
#                            -D_IEEE_ADDR_START=0x3FFF8                        #
#                            -D_IEEE_ADDR_END=0x3FFFF                          #
#                            -Z(CODE)IEEE_ADDRESS_SPACE=_IEEE_ADDR_START-_IEEE #
#                            _ADDR_END)                                        #
#                            -D_NR_OF_VIRTUAL_REGISTERS=8 -D?DPL1=0x84         #
#                            -D?DPH1=0x85 -D?CBANK=0xC7                        #
#                            -D_CODEBANK_START=0x2900 -D_CODEBANK_END=0xFFFF   #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read -we24=i -rt -s     #
#                            __program_start                                   #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.0 Evaluation version\8051\LIB\CLIB\cl-pli-blxd- #
#                            1e16x01.r51"                                      #
#                            -D_IDATA_STACK_SIZE=0xC0                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_END=0x00                        #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0x300                         #
#                            -D_XDATA_HEAP_SIZE=0x00 -D_FAR_HEAP_SIZE=0x000    #
#                            -D_HUGE_HEAP_SIZE=0x000                           #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      000000D2  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __calling_convention     = xdata_reentrant
  __code_model             = banked
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _HUGE_HEAP_SIZE         00000000 
           _FAR_HEAP_SIZE          00000000 
           _XDATA_HEAP_SIZE        00000000 
           _XDATA_STACK_SIZE       00000300 
           _PDATA_STACK_SIZE       00000080 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_END     00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       000000C0 
           _CODEBANK_END           0000FFFF 
           _CODEBANK_START         00002900 
           ?CBANK                  000000C7        Segment part 0 (?BANKED_CODE_SUPPORT)
           ?DPH1                   00000085 
           ?DPL1                   00000084 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           _IEEE_ADDR_END          0003FFFF 
           _IEEE_ADDR_START        0003FFF8 
           _BANK3b_END             0003FFF7 
           _BANK3b_START           0003F000 
           _BANK3_END              0003DFFF 
           _BANK3_START            00038000 
           _BANK2_END              0002FFFF 
           _BANK2_START            00028000 
           _BANK1_END              0001FFFF 
           _BANK1_START            00014001 
           _FAR_CODE_END           00004000 
           _FAR_CODE_START         00000000 
           _FAR_DATA_END           00FFFFFF 
           _FAR_DATA_START         00010001 
           _FAR_DATA_NR_OF_BANKS   0000000E 
           ?VB                     00000020        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   macRadioSetPanCoordinator (mac_radio)
           _BREG_START             00000000 
           ?PBANK                  00000093 
           ?PBANK_NUMBER           000000EF 
           _NR_OF_BANKS            00000003 
           _FIRST_BANK_ADDR        00010000 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _ZIGNV_END              0003EFFF 
           _ZIGNV_SIZE             00001000 
           _ZIGNV_START            0003E000 
           _BANK1A                 00014001 
           _CODE_END               00004000 
           _CODE_START             00000000 
           _TINY_CODE_END          000007FF 
           _NEAR_CODE_END          00007FFF 
           _PM0_XDATA_END          0000EFFF 
           _PM0_XDATA_START        0000E000 
           _XDATA_END              0000FEFF 
           _XDATA_START            0000E000 
           _IXDATA_END             0000FEFF 
           _IXDATA_START           0000E000 
           _PDATA_END              0000EFFF 
           _PDATA_START            0000EF00 
           _IDATA_END              000000FF 
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Libraries\TI2430DB\bin\EndDevice.lib
  LIBRARY MODULE, NAME : APS

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E300 - 0000E300 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   APS_CmdInd
                                                   APS_Init
                                                   APS_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_TaskID              0000E300        APSDE_DataIndication (APSMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E301 - 0000E302 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   APS_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AIB_MaxBindingTime      0000E301 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E303 - 0000E303 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   APS_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Counter             0000E303        APSDE_FrameHdrSet (APSMEDE)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E304 - 0000E305 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_UnBind             0000E304        APSME_UnBindRequest (APSMEDE)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E306 - 0000E307 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_GetBind            0000E306 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E308 - 0000E309 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_DataConfirmReflect
                                   0000E308        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30A - 0000E30B (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pAPS_DataIndReflect     0000E30A        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30C - 0000E30D (0x2 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfSendFragmented      0000E30C        AF_DataRequest (AF)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E30E - 0000E30F (0x2 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfProcessAck          0000E30E        apsProcessAck (aps_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E310 - 0000E311 (0x2 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsfSendOsalMsg         0000E310        APSDE_DataIndication (APSMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE08 - 0000EE08 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_ReflectorType       0000EE08 
=======
  Relative segment, address: XDATA 0000EDA3 - 0000EDA3 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_ReflectorType       0000EDA3 
>>>>>>> develop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DCAF - 0001DCE5 (0x37 bytes), align: 0
  Segment part 19.            Intra module refs:   APS_ReflectorInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_ReflectorInit       0001DCAF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DCE6 - 0001DCEA (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   APS_ReflectMonitor
                                                   APS_ReflectorInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DCEB - 0001DD09 (0x1f bytes), align: 0
  Segment part 22.            Intra module refs:   APS_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Init                0001DCEB 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DD0A - 0001DD94 (0x8b bytes), align: 0
  Segment part 24.            Intra module refs:   APS_event_loop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_event_loop          0001DD0A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DD95 - 0001DD97 (0x3 bytes), align: 0
  Segment part 26.            Intra module refs:   APS_ReReflect
                                                   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DD98 - 0001DD9C (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   APS_GetBind
                                                   APS_Reflect
                                                   Segment part 26
                                                   Segment part 40
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DD9D - 0001DE7D (0xe1 bytes), align: 0
  Segment part 30.            Intra module refs:   APS_CmdInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_CmdInd              0001DD9D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE7E - 0001DE85 (0x8 bytes), align: 0
  Segment part 32.            Intra module refs:   APS_CmdInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE86 - 0001DE90 (0xb bytes), align: 0
  Segment part 33.            Intra module refs:   APS_CmdInd
                                                   APS_DataIndReflect
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DE91 - 0001DEDA (0x4a bytes), align: 0
  Segment part 34.            Intra module refs:   APS_UnBind::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_UnBind              0001DE91 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000001 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEDB - 0001DEDF (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   APS_CmdInd
                                                   APS_UnBind
                                                   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DEE0 - 0001E056 (0x177 bytes), align: 0
  Segment part 37.            Intra module refs:   APS_GetBind::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_GetBind             0001DEE0 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001B )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E057 - 0001E060 (0xa bytes), align: 0
  Segment part 39.            Intra module refs:   APS_DataIndReflect
                                                   APS_GetBind
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E061 - 0001E06B (0xb bytes), align: 0
  Segment part 40.            Intra module refs:   APS_GetBind
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E06C - 0001E075 (0xa bytes), align: 0
  Segment part 41.            Intra module refs:   APS_CmdInd
                                                   APS_DataIndReflect
                                                   APS_GetBind
                                                   APS_Init
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E076 - 0001E07F (0xa bytes), align: 0
  Segment part 42.            Intra module refs:   APS_GetBind
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E080 - 0001E0BB (0x3c bytes), align: 0
  Segment part 43.            Intra module refs:   APS_DataConfirmReflect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_DataConfirmReflect
                                   0001E080 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0BC - 0001E0C2 (0x7 bytes), align: 0
  Segment part 45.            Intra module refs:   APS_DataConfirmReflect
                                                   APS_Init
                                                   reflectTrack_RemoveEntryNotify
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E0C3 - 0001E3A8 (0x2e6 bytes), align: 0
  Segment part 46.            Intra module refs:   APS_DataIndReflect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_DataIndReflect      0001E0C3 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000006 ( 00000026 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3A9 - 0001E3AF (0x7 bytes), align: 0
  Segment part 48.            Intra module refs:   APS_CmdInd
                                                   APS_DataIndReflect
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3B0 - 0001E3B6 (0x7 bytes), align: 0
  Segment part 49.            Intra module refs:   APS_DataIndReflect
                                                   APS_ReReflect
                                                   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3B7 - 0001E3C3 (0xd bytes), align: 0
  Segment part 50.            Intra module refs:   APS_CmdInd
                                                   APS_DataIndReflect
                                                   APS_GetBind
                                                   APS_ReReflect
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3C4 - 0001E3C7 (0x4 bytes), align: 0
  Segment part 51.            Intra module refs:   APS_CmdInd
                                                   APS_DataIndReflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3C8 - 0001E3CB (0x4 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   Segment part 68
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3CC - 0001E3D4 (0x9 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 52
                                                   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3D5 - 0001E3E5 (0x11 bytes), align: 0
  Segment part 54.            Intra module refs:   APS_DataIndReflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3E6 - 0001E3E9 (0x4 bytes), align: 0
  Segment part 55.            Intra module refs:   APS_DataIndReflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3EA - 0001E3EF (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 55
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E3F0 - 0001E403 (0x14 bytes), align: 0
  Segment part 57.            Intra module refs:   APS_DataIndReflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E404 - 0001E40B (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   APS_DataIndReflect
                                                   APS_GetBind
                                                   APS_ReflectMonitor
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E40C - 0001E413 (0x8 bytes), align: 0
  Segment part 59.            Intra module refs:   APS_DataIndReflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E414 - 0001E41C (0x9 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 48
                                                   Segment part 49
                                                   Segment part 59
                                                   Segment part 69
                                                   Segment part 82
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E41D - 0001E635 (0x219 bytes), align: 0
  Segment part 61.            Intra module refs:   APS_Reflect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Reflect             0001E41D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000023 ( 0000001E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E636 - 0001E63F (0xa bytes), align: 0
  Segment part 63.            Intra module refs:   APS_GetBind
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E640 - 0001E643 (0x4 bytes), align: 0
  Segment part 64.            Intra module refs:   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E644 - 0001E64E (0xb bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E64F - 0001E653 (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   APS_CmdInd
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E654 - 0001E65E (0xb bytes), align: 0
  Segment part 67.            Intra module refs:   APS_DataIndReflect
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E65F - 0001E665 (0x7 bytes), align: 0
  Segment part 68.            Intra module refs:   APS_DataIndReflect
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E666 - 0001E674 (0xf bytes), align: 0
  Segment part 69.            Intra module refs:   APS_CmdInd
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E675 - 0001E67F (0xb bytes), align: 0
  Segment part 70.            Intra module refs:   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E680 - 0001E684 (0x5 bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 32
                                                   Segment part 54
                                                   Segment part 56
                                                   Segment part 70
                                                   Segment part 76
                                                   Segment part 79
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E685 - 0001E68E (0xa bytes), align: 0
  Segment part 72.            Intra module refs:   APS_DataIndReflect
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E68F - 0001E697 (0x9 bytes), align: 0
  Segment part 73.            Intra module refs:   APS_DataIndReflect
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E698 - 0001E759 (0xc2 bytes), align: 0
  Segment part 74.            Intra module refs:   APS_ReReflect::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_ReReflect           0001E698 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000023 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E75A - 0001E765 (0xc bytes), align: 0
  Segment part 76.            Intra module refs:   APS_ReReflect
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E766 - 0001E76F (0xa bytes), align: 0
  Segment part 77.            Intra module refs:   APS_CmdInd
                                                   APS_ReReflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E770 - 0001E77C (0xd bytes), align: 0
  Segment part 78.            Intra module refs:   APS_CmdInd
                                                   APS_DataIndReflect
                                                   APS_ReReflect
                                                   APS_Reflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E77D - 0001E78A (0xe bytes), align: 0
  Segment part 79.            Intra module refs:   APS_ReReflect
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E78B - 0001E836 (0xac bytes), align: 0
  Segment part 80.            Intra module refs:   APS_ReflectMonitor::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_ReflectMonitor      0001E78B 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001B ( 0000000F )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E837 - 0001E83E (0x8 bytes), align: 0
  Segment part 82.            Intra module refs:   APS_DataIndReflect
                                                   APS_Reflect
                                                   APS_ReflectMonitor
                                                   APS_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E83F - 0001E847 (0x9 bytes), align: 0
  Segment part 83.            Intra module refs:   APS_ReflectMonitor
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E848 - 0001E853 (0xc bytes), align: 0
  Segment part 84.            Intra module refs:   reflectTrack_RemoveEntryNotify::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_RemoveEntryNotify
                                   0001E848 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 00002345 - 00002345 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   APS_ReflectorType
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001481 - 00001486 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000218E - 0000218E (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   APS_ReflectorType
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013C6 - 000013CB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_ReflectorInit::?relay
<<<<<<< HEAD
                                   00001481        ZDODeviceSetup (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001487 - 0000148C (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Init::?relay        00001487        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000148D - 00001492 (0x6 bytes), align: 0
=======
                                   000013C6        ZDODeviceSetup (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013CC - 000013D1 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_Init::?relay        000013CC        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013D2 - 000013D7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_event_loop::?relay
<<<<<<< HEAD
                                   0000148D        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001493 - 00001498 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_CmdInd::?relay      00001493        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001499 - 0000149E (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_UnBind::?relay      00001499 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000149F - 000014A4 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_GetBind::?relay     0000149F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014A5 - 000014AA (0x6 bytes), align: 0
=======
                                   000013D2        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013D8 - 000013DD (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_CmdInd::?relay      000013D8        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013DE - 000013E3 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_UnBind::?relay      000013DE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013E4 - 000013E9 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_GetBind::?relay     000013E4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013EA - 000013EF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_DataConfirmReflect::?relay
<<<<<<< HEAD
                                   000014A5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014AB - 000014B0 (0x6 bytes), align: 0
=======
                                   000013EA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013F0 - 000013F5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 47.            Intra module refs:   APS_ReflectorInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_DataIndReflect::?relay
<<<<<<< HEAD
                                   000014AB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014B1 - 000014B6 (0x6 bytes), align: 0
=======
                                   000013F0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013F6 - 000013FB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 62.            Intra module refs:   APS_DataIndReflect
                                                   APS_ReReflect
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           APS_Reflect::?relay     000014B1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014B7 - 000014BC (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   APS_DataConfirmReflect
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_ReReflect::?relay   000014B7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014BD - 000014C2 (0x6 bytes), align: 0
=======
           APS_Reflect::?relay     000013F6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000013FC - 00001401 (0x6 bytes), align: 0
  Segment part 75.            Intra module refs:   APS_DataConfirmReflect
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_ReReflect::?relay   000013FC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001402 - 00001407 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 81.            Intra module refs:   APS_Reflect
                                                   reflectTrack_RemoveEntryNotify
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APS_ReflectMonitor::?relay
<<<<<<< HEAD
                                   000014BD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014C3 - 000014C8 (0x6 bytes), align: 0
=======
                                   00001402 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001408 - 0000140D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_RemoveEntryNotify::?relay
<<<<<<< HEAD
                                   000014C3        reflectTrack_RemoveEntry (reflecttrack)
=======
                                   00001408        reflectTrack_RemoveEntry (reflecttrack)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : APSMEDE

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E312 - 0000E313 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   APSME_FrameSecInit
                                                   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecSetupHook
                                   0000E312 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E314 - 0000E315 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   APSDE_FrameSend
                                                   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyHook
                                   0000E314 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E316 - 0000E317 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyExtHook
                                   0000E316 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E318 - 0000E319 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   APSME_FrameSecNM
                                                   APSME_FrameSecurityRemove
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecRemoveHook
                                   0000E318 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E31A - 0000E31B (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   APSME_CmdPkt
                                                   Segment part 295
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPktHook        0000E31A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D103 - 0001D376 (0x274 bytes), align: 0
  Segment part 16.            Intra module refs:   APSDE_DataReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReq           0001D103 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000019 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D377 - 0001D384 (0xe bytes), align: 0
  Segment part 18.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D385 - 0001D38A (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D38B - 0001D390 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 237
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D391 - 0001D39A (0xa bytes), align: 0
  Segment part 21.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D39B - 0001D3A3 (0x9 bytes), align: 0
  Segment part 22.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D3A4 - 0001D3AE (0xb bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 19
                                                   Segment part 195
                                                   Segment part 21
                                                   Segment part 22
                                                   Segment part 48
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D3AF - 0001D3BF (0x11 bytes), align: 0
  Segment part 24.            Intra module refs:   APSDE_DataReqMTU::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReqMTU        0001D3AF 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D3C0 - 0001D415 (0x56 bytes), align: 0
  Segment part 26.            Intra module refs:   APSME_BindRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_BindRequest       0001D3C0 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000001 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D416 - 0001D447 (0x32 bytes), align: 0
  Segment part 28.            Intra module refs:   APSME_UnBindRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_UnBindRequest     0001D416 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000001 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D448 - 0001D457 (0x10 bytes), align: 0
  Segment part 32.            Intra module refs:   APSDE_FrameBlkInit
                                                   APSDE_FrameHdrInit
                                                   APSDE_FrameSend
                                                   APSME_FrameSecInit
                                                   APSME_UnBindRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D458 - 0001D4B8 (0x61 bytes), align: 0
  Segment part 38.            Intra module refs:   APSME_LookupNwkAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_LookupNwkAddr     0001D458 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000016 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4B9 - 0001D4C0 (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   APSME_LookupNwkAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4C1 - 0001D4C8 (0x8 bytes), align: 0
  Segment part 41.            Intra module refs:   APSME_LookupNwkAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4C9 - 0001D4D4 (0xc bytes), align: 0
  Segment part 42.            Intra module refs:   APSME_LookupNwkAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D4D5 - 0001D54C (0x78 bytes), align: 0
  Segment part 43.            Intra module refs:   NLDE_FrameDataLoad::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_FrameDataLoad      0001D4D5 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D54D - 0001D550 (0x4 bytes), align: 0
  Segment part 45.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D551 - 0001D55E (0xe bytes), align: 0
  Segment part 46.            Intra module refs:   Segment part 45
                                                   Segment part 47
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D55F - 0001D564 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D565 - 0001D571 (0xd bytes), align: 0
  Segment part 48.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D572 - 0001D576 (0x5 bytes), align: 0
  Segment part 57.            Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D577 - 0001D57D (0x7 bytes), align: 0
  Segment part 63.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D57E - 0001D587 (0xa bytes), align: 0
  Segment part 72.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D588 - 0001D58E (0x7 bytes), align: 0
  Segment part 81.            Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D58F - 0001D594 (0x6 bytes), align: 0
  Segment part 87.            Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D595 - 0001D599 (0x5 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 185
                                                   Segment part 282
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D59A - 0001D5A1 (0x8 bytes), align: 0
  Segment part 91.            Intra module refs:   APSME_FrameSecSetupNM::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecSetupNM   0001D59A 
               is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5A2, align: 0
  Segment part 95.            Intra module refs:   APSME_FrameSecRemoveNM::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecRemoveNM
                                   0001D5A2 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5A2 - 0001D5A6 (0x5 bytes), align: 0
  Segment part 97.            Intra module refs:   APSME_FrameSecApplyExtNM
                                                   APSME_FrameSecRemoveNM
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5A7 - 0001D5B5 (0xf bytes), align: 0
  Segment part 106.           Intra module refs:   APSDE_FrameHdrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5B6 - 0001D5BC (0x7 bytes), align: 0
  Segment part 107.           Intra module refs:   Segment part 106
                                                   Segment part 139
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5BD - 0001D5C8 (0xc bytes), align: 0
  Segment part 109.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5C9 - 0001D5D1 (0x9 bytes), align: 0
  Segment part 110.           Intra module refs:   APSME_FrameSecApplyNM::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyNM   0001D5C9 
               is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5D2 - 0001D5D4 (0x3 bytes), align: 0
  Segment part 114.           Intra module refs:   APSME_FrameSecApplyExtNM::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyExtNM
                                   0001D5D2 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D5D5 - 0001D602 (0x2e bytes), align: 0
  Segment part 118.           Intra module refs:   APSME_FrameSecNM::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecNM        0001D5D5 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D603 - 0001D65B (0x59 bytes), align: 0
  Segment part 120.           Intra module refs:   APSME_FrameSecInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecInit      0001D603 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D65C - 0001D65F (0x4 bytes), align: 0
  Segment part 122.           Intra module refs:   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D660 - 0001D664 (0x5 bytes), align: 0
  Segment part 123.           Intra module refs:   Segment part 122
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D665 - 0001D66C (0x8 bytes), align: 0
  Segment part 124.           Intra module refs:   Segment part 123
                                                   Segment part 146
                                                   Segment part 194
                                                   Segment part 255
                                                   Segment part 269
                                                   Segment part 48
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D66D - 0001D7A5 (0x139 bytes), align: 0
  Segment part 125.           Intra module refs:   APSDE_FrameHdrSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameHdrSet       0001D66D 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7A6 - 0001D7AD (0x8 bytes), align: 0
  Segment part 127.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7AE - 0001D7B3 (0x6 bytes), align: 0
  Segment part 128.           Intra module refs:   Segment part 127
                                                   Segment part 131
                                                   Segment part 133
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7B4 - 0001D7BC (0x9 bytes), align: 0
  Segment part 129.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7BD - 0001D7C4 (0x8 bytes), align: 0
  Segment part 130.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7C5 - 0001D7CC (0x8 bytes), align: 0
  Segment part 131.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7CD - 0001D7D8 (0xc bytes), align: 0
  Segment part 132.           Intra module refs:   APSDE_FrameHdrSet
                                                   Segment part 131
                                                   Segment part 133
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7D9 - 0001D7E8 (0x10 bytes), align: 0
  Segment part 133.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7E9 - 0001D7EF (0x7 bytes), align: 0
  Segment part 134.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7F0 - 0001D7FA (0xb bytes), align: 0
  Segment part 135.           Intra module refs:   APSDE_FrameAlloc
                                                   Segment part 129
                                                   Segment part 130
                                                   Segment part 134
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D7FB - 0001D805 (0xb bytes), align: 0
  Segment part 136.           Intra module refs:   Segment part 130
                                                   Segment part 131
                                                   Segment part 134
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D806 - 0001D8BB (0xb6 bytes), align: 0
  Segment part 137.           Intra module refs:   APSDE_FrameHdrInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameHdrInit      0001D806 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D8BC - 0001D8C3 (0x8 bytes), align: 0
  Segment part 139.           Intra module refs:   APSDE_FrameHdrInit
                                                   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D8C4 - 0001D8E9 (0x26 bytes), align: 0
  Segment part 140.           Intra module refs:   APSDE_FrameBlkFree::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameBlkFree      0001D8C4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000011 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D8EA - 0001D8FE (0x15 bytes), align: 0
  Segment part 142.           Intra module refs:   APSDE_DataReqMTU
                                                   APSDE_FrameBlkFree
                                                   APSME_FrameSecApplyNM
                                                   APSME_FrameSecNM
                                                   APSME_FrameSecSetupNM
                                                   APSME_SecurityNM
                                                   Segment part 226
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D8FF - 0001D905 (0x7 bytes), align: 0
  Segment part 143.           Intra module refs:   APSDE_FrameBlkFree
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D906 - 0001D935 (0x30 bytes), align: 0
  Segment part 144.           Intra module refs:   APSDE_FrameBlkInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameBlkInit      0001D906 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000011 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D936 - 0001D93D (0x8 bytes), align: 0
  Segment part 146.           Intra module refs:   APSDE_FrameBlkInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D93E - 0001D94D (0x10 bytes), align: 0
  Segment part 149.           Intra module refs:   Segment part 278
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D94E - 0001D954 (0x7 bytes), align: 0
  Segment part 150.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D955 - 0001D95C (0x8 bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 150
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D95D - 0001D962 (0x6 bytes), align: 0
  Segment part 152.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D963 - 0001D969 (0x7 bytes), align: 0
  Segment part 153.           Intra module refs:   Segment part 152
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D96A - 0001D972 (0x9 bytes), align: 0
  Segment part 160.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   APSDE_FrameBlkInit
                                                   APSDE_FrameHdrSet
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D973 - 0001D973 (0x1 bytes), align: 0
  Segment part 161.           Intra module refs:   Segment part 160
                                                   Segment part 194
                                                   Segment part 42
                                                   Segment part 48
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D974 - 0001D978 (0x5 bytes), align: 0
  Segment part 162.           Intra module refs:   Segment part 161
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D979 - 0001D97F (0x7 bytes), align: 0
  Segment part 165.           Intra module refs:   Segment part 182
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D980 - 0001D986 (0x7 bytes), align: 0
  Segment part 182.           Intra module refs:   APSME_LookupNwkAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D987 - 0001D98A (0x4 bytes), align: 0
  Segment part 183.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D98B - 0001D992 (0x8 bytes), align: 0
  Segment part 185.           Intra module refs:   Segment part 146
                                                   Segment part 183
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D993 - 0001D9AC (0x1a bytes), align: 0
  Segment part 187.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameSend
                                                   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9AD - 0001D9B3 (0x7 bytes), align: 0
  Segment part 193.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9B4 - 0001D9BF (0xc bytes), align: 0
  Segment part 194.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9C0 - 0001D9CA (0xb bytes), align: 0
  Segment part 195.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
                                                   APSDE_FrameHdrSet
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9CB - 0001D9D9 (0xf bytes), align: 0
  Segment part 199.           Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9DA - 0001D9DF (0x6 bytes), align: 0
  Segment part 200.           Intra module refs:   Segment part 199
                                                   Segment part 247
                                                   Segment part 57
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9E0 - 0001D9E6 (0x7 bytes), align: 0
  Segment part 205.           Intra module refs:   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9E7 - 0001D9E9 (0x3 bytes), align: 0
  Segment part 222.           Intra module refs:   APSME_CmdPktNM::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPktNM          0001D9E7 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9EA - 0001D9F0 (0x7 bytes), align: 0
  Segment part 224.           Intra module refs:   APSME_CmdPkt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPkt            0001D9EA 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9F1 - 0001D9F9 (0x9 bytes), align: 0
  Segment part 226.           Intra module refs:   APSME_CmdPkt
                                                   APSME_FrameSecurityRemove
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9FA - 0001D9FE (0x5 bytes), align: 0
  Segment part 227.           Intra module refs:   APSDE_FrameSend
                                                   APSME_BindRequest
                                                   APSME_FrameSecInit
                                                   APSME_UnBindRequest
                                                   Segment part 226
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D9FF - 0001DA07 (0x9 bytes), align: 0
  Segment part 228.           Intra module refs:   Segment part 107
                                                   Segment part 123
                                                   Segment part 227
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DA08 - 0001DB7A (0x173 bytes), align: 0
  Segment part 229.           Intra module refs:   APSDE_FrameAlloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameAlloc        0001DA08 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000019 ( 00000011 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB7B - 0001DB7E (0x4 bytes), align: 0
  Segment part 231.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB7F - 0001DB85 (0x7 bytes), align: 0
  Segment part 232.           Intra module refs:   Segment part 231
                                                   Segment part 233
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB86 - 0001DB8A (0x5 bytes), align: 0
  Segment part 233.           Intra module refs:   APSDE_DataReq
                                                   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB8B - 0001DB96 (0xc bytes), align: 0
  Segment part 234.           Intra module refs:   APSDE_FrameAlloc
                                                   APSME_BindRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB97 - 0001DB9B (0x5 bytes), align: 0
  Segment part 235.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DB9C - 0001DBA1 (0x6 bytes), align: 0
  Segment part 236.           Intra module refs:   Segment part 235
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBA2 - 0001DBB6 (0x15 bytes), align: 0
  Segment part 237.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DBB7 - 0001DC17 (0x61 bytes), align: 0
  Segment part 238.           Intra module refs:   APSDE_FrameSend::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameSend         0001DBB7 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000019 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC18 - 0001DC21 (0xa bytes), align: 0
  Segment part 240.           Intra module refs:   APSME_FrameSecurityRemove::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecurityRemove
                                   0001DC18 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC22 - 0001DC2B (0xa bytes), align: 0
  Segment part 247.           Intra module refs:   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC2C - 0001DC33 (0x8 bytes), align: 0
  Segment part 255.           Intra module refs:   Segment part 236
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC34 - 0001DC39 (0x6 bytes), align: 0
  Segment part 259.           Intra module refs:   APSDE_FrameHdrInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC3A - 0001DC3E (0x5 bytes), align: 0
  Segment part 261.           Intra module refs:   Segment part 277
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC3F - 0001DC48 (0xa bytes), align: 0
  Segment part 265.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameHdrSet
                                                   APSME_BindRequest
                                                   NLDE_FrameDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC49 - 0001DC54 (0xc bytes), align: 0
  Segment part 268.           Intra module refs:   Segment part 278
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC55 - 0001DC5C (0x8 bytes), align: 0
  Segment part 269.           Intra module refs:   APSDE_FrameAlloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC5D - 0001DC61 (0x5 bytes), align: 0
  Segment part 270.           Intra module refs:   APSDE_DataReq
                                                   Segment part 32
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC62 - 0001DC6B (0xa bytes), align: 0
  Segment part 272.           Intra module refs:   Segment part 152
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC6C - 0001DC74 (0x9 bytes), align: 0
  Segment part 273.           Intra module refs:   Segment part 272
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC75 - 0001DC79 (0x5 bytes), align: 0
  Segment part 276.           Intra module refs:   APSME_FrameSecInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC7A - 0001DC7D (0x4 bytes), align: 0
  Segment part 277.           Intra module refs:   Segment part 160
                                                   Segment part 232
                                                   Segment part 276
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC7E - 0001DC86 (0x9 bytes), align: 0
  Segment part 278.           Intra module refs:   APSDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC87 - 0001DC8B (0x5 bytes), align: 0
  Segment part 282.           Intra module refs:   APSDE_FrameHdrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC8C - 0001DC97 (0xc bytes), align: 0
  Segment part 287.           Intra module refs:   Segment part 143
                                                   Segment part 187
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DC98 - 0001DCA7 (0x10 bytes), align: 0
  Segment part 289.           Intra module refs:   APSME_SecurityNM::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_SecurityNM        0001DC98 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001DCA8 - 0001DCAE (0x7 bytes), align: 0
  Segment part 295.           Intra module refs:   APSME_SecurityNM
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000014C9 - 000014CE (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReq::?relay   000014C9        AF_DataRequest (AF)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014CF - 000014D4 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000140E - 00001413 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReq::?relay   0000140E        AF_DataRequest (AF)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001414 - 00001419 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataReqMTU::?relay
<<<<<<< HEAD
                                   000014CF        afDataReqMTU (AF)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014D5 - 000014DA (0x6 bytes), align: 0
=======
                                   00001414        afDataReqMTU (AF)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000141A - 0000141F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_BindRequest::?relay
<<<<<<< HEAD
                                   000014D5        ZDO_ProcessBindUnbindReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014DB - 000014E0 (0x6 bytes), align: 0
=======
                                   0000141A        ZDO_ProcessBindUnbindReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001420 - 00001425 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_UnBindRequest::?relay
<<<<<<< HEAD
                                   000014DB        ZDO_ProcessBindUnbindReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014E1 - 000014E6 (0x6 bytes), align: 0
=======
                                   00001420        ZDO_ProcessBindUnbindReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001426 - 0000142B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.            Intra module refs:   APSDE_DataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_LookupNwkAddr::?relay
<<<<<<< HEAD
                                   000014E1        ZDO_ProcessBindUnbindReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014E7 - 000014EC (0x6 bytes), align: 0
=======
                                   00001426        ZDO_ProcessBindUnbindReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000142C - 00001431 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_FrameDataLoad::?relay
<<<<<<< HEAD
                                   000014E7        nwkDB_UserDataLoad (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014ED - 000014F2 (0x6 bytes), align: 0
=======
                                   0000142C        nwkDB_UserDataLoad (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001432 - 00001437 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 92.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecSetupNM::?relay
<<<<<<< HEAD
                                   000014ED 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014F3 - 000014F8 (0x6 bytes), align: 0
=======
                                   00001432 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001438 - 0000143D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 96.            Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecRemoveNM::?relay
<<<<<<< HEAD
                                   000014F3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014F9 - 000014FE (0x6 bytes), align: 0
=======
                                   00001438 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000143E - 00001443 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 111.           Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyNM::?relay
<<<<<<< HEAD
                                   000014F9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014FF - 00001504 (0x6 bytes), align: 0
=======
                                   0000143E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001444 - 00001449 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 115.           Intra module refs:   APSME_FrameSecNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecApplyExtNM::?relay
<<<<<<< HEAD
                                   000014FF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001505 - 0000150A (0x6 bytes), align: 0
=======
                                   00001444 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000144A - 0000144F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 119.           Intra module refs:   Segment part 295
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecNM::?relay
<<<<<<< HEAD
                                   00001505 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000150B - 00001510 (0x6 bytes), align: 0
=======
                                   0000144A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001450 - 00001455 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 121.           Intra module refs:   APSDE_FrameBlkInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecInit::?relay
<<<<<<< HEAD
                                   0000150B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001511 - 00001516 (0x6 bytes), align: 0
=======
                                   00001450 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001456 - 0000145B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 126.           Intra module refs:   APSDE_FrameSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameHdrSet::?relay
<<<<<<< HEAD
                                   00001511 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001517 - 0000151C (0x6 bytes), align: 0
=======
                                   00001456 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000145C - 00001461 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 138.           Intra module refs:   APSDE_FrameBlkInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameHdrInit::?relay
<<<<<<< HEAD
                                   00001517 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000151D - 00001522 (0x6 bytes), align: 0
=======
                                   0000145C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001462 - 00001467 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 141.           Intra module refs:   APSDE_FrameAlloc
                                                   APSDE_FrameSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameBlkFree::?relay
<<<<<<< HEAD
                                   0000151D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001523 - 00001528 (0x6 bytes), align: 0
=======
                                   00001462 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001468 - 0000146D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 145.           Intra module refs:   APSDE_FrameAlloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameBlkInit::?relay
<<<<<<< HEAD
                                   00001523 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001529 - 0000152E (0x6 bytes), align: 0
=======
                                   00001468 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000146E - 00001473 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 223.           Intra module refs:   APSME_SecurityNM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPktNM::?relay
<<<<<<< HEAD
                                   00001529 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000152F - 00001534 (0x6 bytes), align: 0
  Segment part 225.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPkt::?relay    0000152F        APS_event_loop (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001535 - 0000153A (0x6 bytes), align: 0
=======
                                   0000146E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001474 - 00001479 (0x6 bytes), align: 0
  Segment part 225.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_CmdPkt::?relay    00001474        APS_event_loop (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000147A - 0000147F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 230.           Intra module refs:   Segment part 149
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameAlloc::?relay
<<<<<<< HEAD
                                   00001535        APS_Reflect (APS)
                                                   apsGenerateAck (aps_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000153B - 00001540 (0x6 bytes), align: 0
=======
                                   0000147A        APS_Reflect (APS)
                                                   apsGenerateAck (aps_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001480 - 00001485 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 239.           Intra module refs:   APSDE_DataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_FrameSend::?relay
<<<<<<< HEAD
                                   0000153B        APS_Reflect (APS)
                                                   apsGenerateAck (aps_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001541 - 00001546 (0x6 bytes), align: 0
=======
                                   00001480        APS_Reflect (APS)
                                                   apsGenerateAck (aps_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001486 - 0000148B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 241.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_FrameSecurityRemove::?relay
<<<<<<< HEAD
                                   00001541        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001547 - 0000154C (0x6 bytes), align: 0
=======
                                   00001486        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000148C - 00001491 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 290.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSME_SecurityNM::?relay
<<<<<<< HEAD
                                   00001547        ZDSecMgrConfig (ZDSecMgr)
=======
                                   0000148C        ZDSecMgrConfig (ZDSecMgr)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : APSMEDE_CB

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FDB5 - 0002FDEB (0x37 bytes), align: 0
  Segment part 6.             Intra module refs:   APSDE_DataConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataConfirm       0002FDB5 
=======
  Relative segment, address: CODE 0002FC86 - 0002FCBC (0x37 bytes), align: 0
  Segment part 6.             Intra module refs:   APSDE_DataConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataConfirm       0002FC86 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FDEC - 0002FDF2 (0x7 bytes), align: 0
=======
  Relative segment, address: CODE 0002FCBD - 0002FCC3 (0x7 bytes), align: 0
>>>>>>> develop
  Segment part 8.             Intra module refs:   APSDE_DataCnf
                                                   APSDE_DataConfirm
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FDF3 - 0002FE1D (0x2b bytes), align: 0
  Segment part 9.             Intra module refs:   APSDE_DataCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataCnf           0002FDF3 
=======
  Relative segment, address: CODE 0002FCC4 - 0002FCEE (0x2b bytes), align: 0
  Segment part 9.             Intra module refs:   APSDE_DataCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataCnf           0002FCC4 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FE1E - 0002FF75 (0x158 bytes), align: 0
  Segment part 11.            Intra module refs:   APSDE_DataIndication::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataIndication    0002FE1E 
=======
  Relative segment, address: CODE 0002FCEF - 0002FE46 (0x158 bytes), align: 0
  Segment part 11.            Intra module refs:   APSDE_DataIndication::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataIndication    0002FCEF 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000005 ( 00000018 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FF76 - 0002FF7E (0x9 bytes), align: 0
  Segment part 13.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF7F - 0002FF8A (0xc bytes), align: 0
=======
  Relative segment, address: CODE 0002FE47 - 0002FE4F (0x9 bytes), align: 0
  Segment part 13.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE50 - 0002FE5B (0xc bytes), align: 0
>>>>>>> develop
  Segment part 14.            Intra module refs:   APSDE_DataConfirm
                                                   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FF8B - 0002FF9F (0x15 bytes), align: 0
  Segment part 15.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFA0 - 0002FFAD (0xe bytes), align: 0
  Segment part 20.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFAE - 0002FFB0 (0x3 bytes), align: 0
  Segment part 23.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFB1 - 0002FFB8 (0x8 bytes), align: 0
=======
  Relative segment, address: CODE 0002FE5C - 0002FE70 (0x15 bytes), align: 0
  Segment part 15.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE71 - 0002FE7E (0xe bytes), align: 0
  Segment part 20.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE7F - 0002FE81 (0x3 bytes), align: 0
  Segment part 23.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE82 - 0002FE89 (0x8 bytes), align: 0
>>>>>>> develop
  Segment part 24.            Intra module refs:   APSDE_DataIndication
                                                   Segment part 23
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FFB9 - 0002FFBE (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFBF - 0002FFCA (0xc bytes), align: 0
  Segment part 46.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFCB - 0002FFDC (0x12 bytes), align: 0
  Segment part 47.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000154D - 00001552 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0002FE8A - 0002FE8F (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE90 - 0002FE9B (0xc bytes), align: 0
  Segment part 46.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FE9C - 0002FEAD (0x12 bytes), align: 0
  Segment part 47.            Intra module refs:   APSDE_DataIndication
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001492 - 00001497 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataConfirm::?relay
<<<<<<< HEAD
                                   0000154D        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001553 - 00001558 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataCnf::?relay   00001553        APS_DataIndReflect (APS)
                                                   APS_ReflectMonitor (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001559 - 0000155E (0x6 bytes), align: 0
=======
                                   00001492        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001498 - 0000149D (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataCnf::?relay   00001498        APS_DataIndReflect (APS)
                                                   APS_ReflectMonitor (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000149E - 000014A3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_DataIndication::?relay
<<<<<<< HEAD
                                   00001559        APS_DataIndReflect (APS)
=======
                                   0000149E        APS_DataIndReflect (APS)
>>>>>>> develop
                                                   NLDE_DataIndication (NLMEDE_CB)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : AddrMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E31C - 0000E31D (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryValidate
                                                   AddrMgrInit
                                                   Segment part 45
                                                   Segment part 69
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryTotal       0000E31C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E31E - 0000E31F (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   AddrMgrEntryLookupNwk
                                                   AddrMgrEntrySet
                                                   AddrMgrInit
                                                   Segment part 27
                                                   Segment part 41
                                                   Segment part 63
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryData        0000E31E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029156 - 0002915D (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   AddrMgrExtAddrValid
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002915E - 0002916F (0x12 bytes), align: 0
  Segment part 17.            Intra module refs:   AddrMgrEntryDataSave::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryDataSave    0002915E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029170 - 000291A0 (0x31 bytes), align: 0
  Segment part 19.            Intra module refs:   AddrMgrEntryValidate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryValidate    00029170 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 00000000 )
               stack 4 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000291A1 - 00029207 (0x67 bytes), align: 0
  Segment part 21.            Intra module refs:   AddrMgrEntrySet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntrySet         000291A1 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029208 - 00029211 (0xa bytes), align: 0
  Segment part 23.            Intra module refs:   AddrMgrEntrySet
                                                   AddrMgrEntryValidate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029212 - 00029284 (0x73 bytes), align: 0
  Segment part 24.            Intra module refs:   AddrMgrEntryAdd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryAdd         00029212 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029285 - 00029289 (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002928A - 000292AD (0x24 bytes), align: 0
  Segment part 27.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryValidate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000292AE - 0002935B (0xae bytes), align: 0
  Segment part 28.            Intra module refs:   AddrMgrEntryUpdateEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryUpdateEx    000292AE 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002A ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002935C - 00029362 (0x7 bytes), align: 0
  Segment part 30.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029363 - 000293B1 (0x4f bytes), align: 0
  Segment part 31.            Intra module refs:   AddrMgrInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrInit             00029363 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000293B2 - 000293BD (0xc bytes), align: 0
  Segment part 35.            Intra module refs:   AddrMgrEntrySet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000293BE - 000293C7 (0xa bytes), align: 0
  Segment part 38.            Intra module refs:   AddrMgrEntrySet
                                                   AddrMgrInit
                                                   AddrMgrNwkAddrLookup
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000293C8 - 000293E0 (0x19 bytes), align: 0
  Segment part 41.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000293E1 - 000293E9 (0x9 bytes), align: 0
  Segment part 44.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000293EA - 000293F5 (0xc bytes), align: 0
  Segment part 45.            Intra module refs:   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000293F6 - 0002940D (0x18 bytes), align: 0
  Segment part 46.            Intra module refs:   AddrMgrExtAddrSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrExtAddrSet       000293F6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000028 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002940E - 00029414 (0x7 bytes), align: 0
  Segment part 48.            Intra module refs:   AddrMgrEntryDataSave
                                                   AddrMgrEntryValidate
                                                   AddrMgrExtAddrSet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029415 - 0002943F (0x2b bytes), align: 0
  Segment part 49.            Intra module refs:   AddrMgrExtAddrValid::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrExtAddrValid     00029415 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000016 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029440 - 00029483 (0x44 bytes), align: 0
  Segment part 55.            Intra module refs:   AddrMgrNwkAddrLookup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrNwkAddrLookup    00029440 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000016 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029484 - 00029488 (0x5 bytes), align: 0
  Segment part 59.            Intra module refs:   AddrMgrEntryAddRef
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029489 - 000294B4 (0x2c bytes), align: 0
  Segment part 60.            Intra module refs:   AddrMgrEntryAddRef::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryAddRef      00029489 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000028 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000294B5 - 000294BF (0xb bytes), align: 0
  Segment part 62.            Intra module refs:   AddrMgrEntryAddRef
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000294C0 - 000294E4 (0x25 bytes), align: 0
  Segment part 63.            Intra module refs:   AddrMgrEntryAddRef
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000294E5 - 00029591 (0xad bytes), align: 0
  Segment part 64.            Intra module refs:   AddrMgrEntryLookupNwk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryLookupNwk   000294E5 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000028 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029592 - 00029599 (0x8 bytes), align: 0
  Segment part 66.            Intra module refs:   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntrySet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002959A - 000295A5 (0xc bytes), align: 0
  Segment part 67.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295A6 - 000295AF (0xa bytes), align: 0
  Segment part 68.            Intra module refs:   AddrMgrEntryLookupExt
                                                   Segment part 67
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295B0 - 000295BD (0xe bytes), align: 0
  Segment part 69.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupNwk
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295BE - 000295CE (0x11 bytes), align: 0
  Segment part 70.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295CF - 000295D9 (0xb bytes), align: 0
  Segment part 71.            Intra module refs:   AddrMgrEntryUpdateEx
                                                   AddrMgrExtAddrValid
                                                   Segment part 23
                                                   Segment part 63
                                                   Segment part 70
                                                   Segment part 77
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000295DA - 00029660 (0x87 bytes), align: 0
  Segment part 72.            Intra module refs:   AddrMgrEntryLookupExt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryLookupExt   000295DA 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000028 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029661 - 00029665 (0x5 bytes), align: 0
  Segment part 74.            Intra module refs:   AddrMgrEntryLookupExt
                                                   AddrMgrEntryUpdate
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029666 - 00029670 (0xb bytes), align: 0
  Segment part 75.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029671 - 00029675 (0x5 bytes), align: 0
  Segment part 76.            Intra module refs:   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029676 - 00029681 (0xc bytes), align: 0
  Segment part 77.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
                                                   AddrMgrNwkAddrLookup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029682 - 000296DC (0x5b bytes), align: 0
  Segment part 78.            Intra module refs:   AddrMgrEntryGet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryGet         00029682 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000296DD - 000296E3 (0x7 bytes), align: 0
  Segment part 80.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000296E4 - 000296F2 (0xf bytes), align: 0
  Segment part 81.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupNwk
                                                   AddrMgrEntrySet
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000296F3 - 00029702 (0x10 bytes), align: 0
  Segment part 82.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryUpdateEx
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029703 - 0002970C (0xa bytes), align: 0
  Segment part 83.            Intra module refs:   Segment part 76
                                                   Segment part 82
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002970D - 000297CF (0xc3 bytes), align: 0
  Segment part 84.            Intra module refs:   AddrMgrEntryUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryUpdate      0002970D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000002A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000297D0 - 000297E4 (0x15 bytes), align: 0
  Segment part 86.            Intra module refs:   AddrMgrEntryUpdate
                                                   AddrMgrNwkAddrLookup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000297E5 - 000297EB (0x7 bytes), align: 0
  Segment part 87.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryGet
                                                   AddrMgrEntryLookupExt
                                                   AddrMgrEntryUpdate
                                                   AddrMgrEntryUpdateEx
                                                   AddrMgrNwkAddrLookup
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000297EC - 000297F1 (0x6 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 45
                                                   Segment part 63
                                                   Segment part 77
                                                   Segment part 87
                                                   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000297F2 - 000297FA (0x9 bytes), align: 0
  Segment part 89.            Intra module refs:   AddrMgrEntryGet
                                                   AddrMgrEntryUpdate
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000155F - 00001564 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000014A4 - 000014A9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 18.            Intra module refs:   AddrMgrEntryAdd
                                                   AddrMgrEntryAddRef
                                                   AddrMgrEntrySet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryDataSave::?relay
<<<<<<< HEAD
                                   0000155F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001565 - 0000156A (0x6 bytes), align: 0
=======
                                   000014A4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014AA - 000014AF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 20.            Intra module refs:   AddrMgrEntryGet
                                                   Segment part 62
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryValidate::?relay
<<<<<<< HEAD
                                   00001565 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000156B - 00001570 (0x6 bytes), align: 0
=======
                                   000014AA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014B0 - 000014B5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.            Intra module refs:   AddrMgrEntryUpdateEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntrySet::?relay
<<<<<<< HEAD
                                   0000156B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001571 - 00001576 (0x6 bytes), align: 0
=======
                                   000014B0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014B6 - 000014BB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 25.            Intra module refs:   AddrMgrEntryUpdateEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryAdd::?relay
<<<<<<< HEAD
                                   00001571 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001577 - 0000157C (0x6 bytes), align: 0
=======
                                   000014B6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014BC - 000014C1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 29.            Intra module refs:   AddrMgrEntryUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryUpdateEx::?relay
<<<<<<< HEAD
                                   00001577 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000157D - 00001582 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrInit::?relay     0000157D        nwk_globals_init (nwk_globals)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001583 - 00001588 (0x6 bytes), align: 0
=======
                                   000014BC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014C2 - 000014C7 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrInit::?relay     000014C2        nwk_globals_init (nwk_globals)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014C8 - 000014CD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 47.            Intra module refs:   Segment part 81
                                                   Segment part 86
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrExtAddrSet::?relay
<<<<<<< HEAD
                                   00001583        Segment part 106 (BindingTable)
                                                   ZDO_UpdateAddrManager (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001589 - 0000158E (0x6 bytes), align: 0
=======
                                   000014C8        Segment part 106 (BindingTable)
                                                   ZDO_UpdateAddrManager (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014CE - 000014D3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 50.            Intra module refs:   AddrMgrEntrySet
                                                   Segment part 83
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrExtAddrValid::?relay
<<<<<<< HEAD
                                   00001589 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000158F - 00001594 (0x6 bytes), align: 0
=======
                                   000014CE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014D4 - 000014D9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrNwkAddrLookup::?relay
<<<<<<< HEAD
                                   0000158F        APSME_LookupNwkAddr (APSMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001595 - 0000159A (0x6 bytes), align: 0
=======
                                   000014D4        APSME_LookupNwkAddr (APSMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014DA - 000014DF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 61.            Intra module refs:   AddrMgrEntryUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryAddRef::?relay
<<<<<<< HEAD
                                   00001595 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000159B - 000015A0 (0x6 bytes), align: 0
=======
                                   000014DA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014E0 - 000014E5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 65.            Intra module refs:   AddrMgrEntryUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryLookupNwk::?relay
<<<<<<< HEAD
                                   0000159B        Segment part 108 (BindingTable)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015A1 - 000015A6 (0x6 bytes), align: 0
=======
                                   000014E0        Segment part 108 (BindingTable)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014E6 - 000014EB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 73.            Intra module refs:   Segment part 86
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryLookupExt::?relay
<<<<<<< HEAD
                                   000015A1        Segment part 105 (BindingTable)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015A7 - 000015AC (0x6 bytes), align: 0
=======
                                   000014E6        Segment part 105 (BindingTable)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014EC - 000014F1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryGet::?relay
<<<<<<< HEAD
                                   000015A7        Segment part 96 (BindingTable)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015AD - 000015B2 (0x6 bytes), align: 0
=======
                                   000014EC        Segment part 96 (BindingTable)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014F2 - 000014F7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrEntryUpdate::?relay
<<<<<<< HEAD
                                   000015AD        ZDO_UpdateAddrManager (ZDObject)
=======
                                   000014F2        ZDO_UpdateAddrManager (ZDObject)
>>>>>>> develop
                                                   bindAddrIndexGet (BindingTable)
                                                   bindAddrMgrLocalLoad (BindingTable)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : BindingTable

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E320 - 0000E320 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   InitBindingTable
                                                   bindAddrMgrLocalLoad
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindAddrMgrLocalLoaded
                                   0000E320 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E321 - 0000E322 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pbindAddEntry           0000E321        APSME_BindRequest (APSMEDE)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E323 - 0000E324 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pbindNumOfEntries       0000E323 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E325 - 0000E326 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pbindRemoveDev          0000E325 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E327 - 0000E328 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pBindInitNV             0000E327 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E329 - 0000E32A (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pBindSetDefaultNV       0000E329 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E32B - 0000E32C (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pBindRestoreFromNV      0000E32B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E32D - 0000E32E (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pBindWriteNV            0000E32D 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C4EE - 0001C565 (0x78 bytes), align: 0
  Segment part 14.            Intra module refs:   InitBindingTable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBindingTable        0001C4EE 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C566 - 0001C56D (0x8 bytes), align: 0
  Segment part 16.            Intra module refs:   BindInitNV
                                                   BindSetDefaultNV
                                                   InitBindingTable
                                                   bindAddrMgrLocalLoad
                                                   bindNumOfEntries
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C56E - 0001C5A7 (0x3a bytes), align: 0
  Segment part 17.            Intra module refs:   bindFindEmpty::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindFindEmpty           0001C56E 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000013 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5A8 - 0001C5F6 (0x4f bytes), align: 0
  Segment part 19.            Intra module refs:   bindNumOfEntries::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindNumOfEntries        0001C5A8 
               is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5F7 - 0001C5FE (0x8 bytes), align: 0
  Segment part 23.            Intra module refs:   BindRestoreFromNV
                                                   GetBindingTableEntry
                                                   bindFindEmpty
                                                   bindFindExisting
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C5FF - 0001C604 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   BindWriteNV
                                                   bindNumOfEntries
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C605 - 0001C7B7 (0x1b3 bytes), align: 0
  Segment part 25.            Intra module refs:   bindAddEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindAddEntry            0001C605 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000029 ( 00000016 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7B8 - 0001C7BC (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   bindAddEntry
                                                   bindFind
                                                   bindNumReflections
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7BD - 0001C7D0 (0x14 bytes), align: 0
  Segment part 28.            Intra module refs:   bindAddEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7D1 - 0001C7E8 (0x18 bytes), align: 0
  Segment part 29.            Intra module refs:   bindRemoveEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindRemoveEntry         0001C7D1 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C7E9 - 0001C83E (0x56 bytes), align: 0
  Segment part 31.            Intra module refs:   bindIsClusterIDinList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindIsClusterIDinList   0001C7E9 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000013 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C83F - 0001C843 (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   bindAddClusterIdToList
                                                   bindIsClusterIDinList
                                                   bindingAddrMgsHelperConvert
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C844 - 0001C8C9 (0x86 bytes), align: 0
  Segment part 34.            Intra module refs:   bindRemoveClusterIdFromList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindRemoveClusterIdFromList
                                   0001C844 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8CA - 0001C8CE (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   BindWriteNV
                                                   bindRemoveClusterIdFromList
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8CF - 0001C8D3 (0x5 bytes), align: 0
  Segment part 37.            Intra module refs:   bindRemoveClusterIdFromList
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C8D4 - 0001C921 (0x4e bytes), align: 0
  Segment part 38.            Intra module refs:   bindAddClusterIdToList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindAddClusterIdToList
                                   0001C8D4 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000013 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C922 - 0001C930 (0xf bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 37
                                                   bindAddClusterIdToList
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C931 - 0001CA1B (0xeb bytes), align: 0
  Segment part 41.            Intra module refs:   bindFindExisting::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindFindExisting        0001C931 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA1C - 0001CA23 (0x8 bytes), align: 0
  Segment part 43.            Intra module refs:   bindFindExisting
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA24 - 0001CA29 (0x6 bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 43
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA2A - 0001CA38 (0xf bytes), align: 0
  Segment part 45.            Intra module refs:   bindFindExisting
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA39 - 0001CA41 (0x9 bytes), align: 0
  Segment part 46.            Intra module refs:   bindFindExisting
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA42 - 0001CA49 (0x8 bytes), align: 0
  Segment part 47.            Intra module refs:   bindFindExisting
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CA4A - 0001CAE7 (0x9e bytes), align: 0
  Segment part 48.            Intra module refs:   bindRemoveDev::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindRemoveDev           0001CA4A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAE8 - 0001CAF5 (0xe bytes), align: 0
  Segment part 50.            Intra module refs:   bindAddEntry
                                                   bindRemoveDev
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CAF6 - 0001CB00 (0xb bytes), align: 0
  Segment part 51.            Intra module refs:   bindAddEntry
                                                   bindRemoveDev
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB01 - 0001CB08 (0x8 bytes), align: 0
  Segment part 52.            Intra module refs:   BindWriteNV
                                                   bindAddEntry
                                                   bindRemoveDev
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB09 - 0001CB0C (0x4 bytes), align: 0
  Segment part 55.            Intra module refs:   bindFindExisting
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB0D - 0001CB1A (0xe bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 24
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB1B - 0001CB25 (0xb bytes), align: 0
  Segment part 57.            Intra module refs:   GetBindingTableEntry
                                                   bindFindEmpty
                                                   bindFindExisting
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB26 - 0001CB2D (0x8 bytes), align: 0
  Segment part 60.            Intra module refs:   bindNumOfEntries
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB2E - 0001CB39 (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 112
                                                   Segment part 47
                                                   Segment part 60
                                                   Segment part 67
                                                   bindAddEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB3A - 0001CB80 (0x47 bytes), align: 0
  Segment part 62.            Intra module refs:   bindNumReflections::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindNumReflections      0001CB3A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB81 - 0001CB90 (0x10 bytes), align: 0
  Segment part 64.            Intra module refs:   bindAddEntry
                                                   bindNumReflections
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB91 - 0001CB9D (0xd bytes), align: 0
  Segment part 65.            Intra module refs:   bindNumReflections
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CB9E - 0001CBA6 (0x9 bytes), align: 0
  Segment part 66.            Intra module refs:   BindRestoreFromNV
                                                   bindFind
                                                   bindNumReflections
                                                   bindRemoveDev
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CBA7 - 0001CBAE (0x8 bytes), align: 0
  Segment part 67.            Intra module refs:   BindWriteNV
                                                   bindFind
                                                   bindNumReflections
                                                   bindRemoveDev
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CBAF - 0001CC11 (0x63 bytes), align: 0
  Segment part 68.            Intra module refs:   bindFind::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindFind                0001CBAF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CC12 - 0001CC4E (0x3d bytes), align: 0
  Segment part 70.            Intra module refs:   BindInitNV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindInitNV              0001CC12 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CC4F - 0001CC60 (0x12 bytes), align: 0
  Segment part 72.            Intra module refs:   BindInitNV
                                                   InitBindingTable
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CC61 - 0001CCA1 (0x41 bytes), align: 0
  Segment part 73.            Intra module refs:   BindSetDefaultNV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindSetDefaultNV        0001CC61 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CCA2 - 0001CCA9 (0x8 bytes), align: 0
  Segment part 75.            Intra module refs:   BindSetDefaultNV
                                                   bindAddEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CCAA - 0001CD81 (0xd8 bytes), align: 0
  Segment part 76.            Intra module refs:   BindRestoreFromNV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindRestoreFromNV       0001CCAA 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000002B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD82 - 0001CD87 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   BindRestoreFromNV
                                                   Segment part 95
                                                   bindAddEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD88 - 0001CD94 (0xd bytes), align: 0
  Segment part 79.            Intra module refs:   BindRestoreFromNV
                                                   GetBindingTableEntry
                                                   bindFindEmpty
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CD95 - 0001CE5D (0xc9 bytes), align: 0
  Segment part 80.            Intra module refs:   BindWriteNV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindWriteNV             0001CD95 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000021 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE5E - 0001CE71 (0x14 bytes), align: 0
  Segment part 82.            Intra module refs:   BindRestoreFromNV
                                                   BindWriteNV
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE72 - 0001CE8C (0x1b bytes), align: 0
  Segment part 83.            Intra module refs:   BindInitNV
                                                   Segment part 82
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CE8D - 0001CEB7 (0x2b bytes), align: 0
  Segment part 88.            Intra module refs:   bindingAddrMgsHelperFind::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindingAddrMgsHelperFind
                                   0001CE8D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000015 ( 0000000D )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CEB8 - 0001CF02 (0x4b bytes), align: 0
  Segment part 90.            Intra module refs:   bindingAddrMgsHelperConvert::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindingAddrMgsHelperConvert
                                   0001CEB8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000027 ( 00000016 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF03 - 0001CF20 (0x1e bytes), align: 0
  Segment part 92.            Intra module refs:   bindingAddrMgsHelperConvertShort::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindingAddrMgsHelperConvertShort
                                   0001CF03 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000D )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF21 - 0001CF32 (0x12 bytes), align: 0
  Segment part 94.            Intra module refs:   bindAddrIndexGet
                                                   bindRemoveEntry
                                                   bindingAddrMgsHelperConvertShort
                                                   bindingAddrMgsHelperFind
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF33 - 0001CF38 (0x6 bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 94
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF39 - 0001CF43 (0xb bytes), align: 0
  Segment part 96.            Intra module refs:   bindingAddrMgsHelperConvert
                                                   bindingAddrMgsHelperConvertShort
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF44 - 0001CF44 (0x1 bytes), align: 0
  Segment part 97.            Intra module refs:   Segment part 108
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF45 - 0001CF4F (0xb bytes), align: 0
  Segment part 98.            Intra module refs:   Segment part 106
                                                   Segment part 97
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CF50 - 0001CFD9 (0x8a bytes), align: 0
  Segment part 99.            Intra module refs:   bindAddrMgrLocalLoad::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindAddrMgrLocalLoad    0001CF50 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000013 ( 00000017 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CFDA - 0001CFDF (0x6 bytes), align: 0
  Segment part 101.           Intra module refs:   bindAddrIndexGet
                                                   bindAddrMgrLocalLoad
                                                   bindingAddrMgsHelperFind
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CFE0 - 0001CFE5 (0x6 bytes), align: 0
  Segment part 102.           Intra module refs:   BindRestoreFromNV
                                                   Segment part 101
                                                   bindAddEntry
                                                   bindAddrIndexGet
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001CFE6 - 0001D062 (0x7d bytes), align: 0
  Segment part 103.           Intra module refs:   bindAddrIndexGet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindAddrIndexGet        0001CFE6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000013 ( 0000000D )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D063 - 0001D069 (0x7 bytes), align: 0
  Segment part 105.           Intra module refs:   bindAddrIndexGet
                                                   bindingAddrMgsHelperFind
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D06A - 0001D073 (0xa bytes), align: 0
  Segment part 106.           Intra module refs:   Segment part 105
                                                   bindAddrMgrLocalLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D074 - 0001D08C (0x19 bytes), align: 0
  Segment part 107.           Intra module refs:   bindAddrIndexGet
                                                   bindingAddrMgsHelperFind
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D08D - 0001D097 (0xb bytes), align: 0
  Segment part 108.           Intra module refs:   bindAddrIndexGet
                                                   bindingAddrMgsHelperFind
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D098 - 0001D0E8 (0x51 bytes), align: 0
  Segment part 109.           Intra module refs:   GetBindingTableEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetBindingTableEntry    0001D098 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D0E9 - 0001D0F8 (0x10 bytes), align: 0
  Segment part 111.           Intra module refs:   GetBindingTableEntry
                                                   bindFindEmpty
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001D0F9 - 0001D102 (0xa bytes), align: 0
  Segment part 112.           Intra module refs:   GetBindingTableEntry
                                                   bindFindEmpty
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000015B3 - 000015B8 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000014F8 - 000014FD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBindingTable::?relay
<<<<<<< HEAD
                                   000015B3        APS_ReflectorInit (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015B9 - 000015BE (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   bindAddEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindFindEmpty::?relay   000015B9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015BF - 000015C4 (0x6 bytes), align: 0
=======
                                   000014F8        APS_ReflectorInit (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000014FE - 00001503 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   bindAddEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindFindEmpty::?relay   000014FE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001504 - 00001509 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 20.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindNumOfEntries::?relay
<<<<<<< HEAD
                                   000015BF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015C5 - 000015CA (0x6 bytes), align: 0
=======
                                   00001504 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000150A - 0000150F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.            Intra module refs:   BindRestoreFromNV
                                                   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           bindAddEntry::?relay    000015C5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015CB - 000015D0 (0x6 bytes), align: 0
=======
           bindAddEntry::?relay    0000150A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001510 - 00001515 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 30.            Intra module refs:   bindRemoveDev
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindRemoveEntry::?relay
<<<<<<< HEAD
                                   000015CB        APS_UnBind (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015D1 - 000015D6 (0x6 bytes), align: 0
=======
                                   00001510        APS_UnBind (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001516 - 0000151B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 32.            Intra module refs:   bindAddEntry
                                                   bindFind
                                                   bindNumReflections
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindIsClusterIDinList::?relay
<<<<<<< HEAD
                                   000015D1        APS_UnBind (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015D7 - 000015DC (0x6 bytes), align: 0
=======
                                   00001516        APS_UnBind (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000151C - 00001521 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindRemoveClusterIdFromList::?relay
<<<<<<< HEAD
                                   000015D7        APS_UnBind (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015DD - 000015E2 (0x6 bytes), align: 0
=======
                                   0000151C        APS_UnBind (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001522 - 00001527 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.            Intra module refs:   bindAddEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindAddClusterIdToList::?relay
<<<<<<< HEAD
                                   000015DD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015E3 - 000015E8 (0x6 bytes), align: 0
=======
                                   00001522 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001528 - 0000152D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindFindExisting::?relay
<<<<<<< HEAD
                                   000015E3        APS_UnBind (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015E9 - 000015EE (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindRemoveDev::?relay   000015E9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015EF - 000015F4 (0x6 bytes), align: 0
=======
                                   00001528        APS_UnBind (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000152E - 00001533 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindRemoveDev::?relay   0000152E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001534 - 00001539 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindNumReflections::?relay
<<<<<<< HEAD
                                   000015EF        APS_DataIndReflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015F5 - 000015FA (0x6 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindFind::?relay        000015F5        Segment part 57 (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015FB - 00001600 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindInitNV::?relay      000015FB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001601 - 00001606 (0x6 bytes), align: 0
=======
                                   00001534        APS_DataIndReflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000153A - 0000153F (0x6 bytes), align: 0
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindFind::?relay        0000153A        Segment part 57 (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001540 - 00001545 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindInitNV::?relay      00001540 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001546 - 0000154B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 74.            Intra module refs:   BindInitNV
                                                   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindSetDefaultNV::?relay
<<<<<<< HEAD
                                   00001601 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001607 - 0000160C (0x6 bytes), align: 0
=======
                                   00001546 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000154C - 00001551 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 77.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindRestoreFromNV::?relay
<<<<<<< HEAD
                                   00001607 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000160D - 00001612 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindWriteNV::?relay     0000160D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001613 - 00001618 (0x6 bytes), align: 0
=======
                                   0000154C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001552 - 00001557 (0x6 bytes), align: 0
  Segment part 81.            Intra module refs:   InitBindingTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindWriteNV::?relay     00001552 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001558 - 0000155D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 89.            Intra module refs:   bindFindExisting
                                                   bindRemoveDev
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindingAddrMgsHelperFind::?relay
<<<<<<< HEAD
                                   00001613 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001619 - 0000161E (0x6 bytes), align: 0
=======
                                   00001558 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000155E - 00001563 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 91.            Intra module refs:   BindRestoreFromNV
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindingAddrMgsHelperConvert::?relay
<<<<<<< HEAD
                                   00001619        APS_GetBind (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000161F - 00001624 (0x6 bytes), align: 0
=======
                                   0000155E        APS_GetBind (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001564 - 00001569 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 93.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindingAddrMgsHelperConvertShort::?relay
<<<<<<< HEAD
                                   0000161F        APS_DataIndReflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001625 - 0000162A (0x6 bytes), align: 0
=======
                                   00001564        APS_DataIndReflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000156A - 0000156F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 100.           Intra module refs:   bindAddEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindAddrMgrLocalLoad::?relay
<<<<<<< HEAD
                                   00001625 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000162B - 00001630 (0x6 bytes), align: 0
=======
                                   0000156A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001570 - 00001575 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 104.           Intra module refs:   bindAddEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bindAddrIndexGet::?relay
<<<<<<< HEAD
                                   0000162B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001631 - 00001636 (0x6 bytes), align: 0
=======
                                   00001570 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001576 - 0000157B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 110.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetBindingTableEntry::?relay
<<<<<<< HEAD
                                   00001631        APS_GetBind (APS)
=======
                                   00001576        APS_GetBind (APS)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : NLMEDE

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E32F - 0000E330 (0x2 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_ScanFields         0000E32F        nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_init (nwk)
                                                   nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E331 - 0000E332 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   NLME_ReJoinRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savedResponseRate       0000E331        NLME_RejoinRspCmdProcess (nwk_util)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E333 - 0000E334 (0x2 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanPANChanSelect
                                   0000E333        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E335 - 0000E336 (0x2 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanPANChanVerify
                                   0000E335        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E337 - 0000E338 (0x2 bytes), align: 0
  Segment part 15.            Intra module refs:   NLME_DeviceJoiningInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_ScanJoiningOrphan
                                   0000E337        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E339 - 0000E33A (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   NLME_DeviceJoiningInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pnwk_associate_cnf_processing
                                   0000E339        nwk_event_loop (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E33B - 0000E33C (0x2 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pNLME_NetworkFormationConfirm
                                   0000E33B        Segment part 59 (nwk)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A4A1 - 0002A4A8 (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   NLME_DeviceJoiningInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A4A9 - 0002A4C1 (0x19 bytes), align: 0
  Segment part 21.            Intra module refs:   NLME_DeviceJoiningInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_DeviceJoiningInit
                                   0002A4A9 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A4C2 - 0002A509 (0x48 bytes), align: 0
  Segment part 23.            Intra module refs:   NLDE_DataReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReq            0002A4C2 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000F ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A50A - 0002A511 (0x8 bytes), align: 0
  Segment part 25.            Intra module refs:   NLDE_DataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A512 - 0002A5BB (0xaa bytes), align: 0
  Segment part 26.            Intra module refs:   NLDE_DataReqAlloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReqAlloc       0002A512 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A5BC - 0002A5FD (0x42 bytes), align: 0
  Segment part 28.            Intra module refs:   NLME_NetworkDiscoveryRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkDiscoveryRequest
                                   0002A5BC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000021 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A5FE - 0002A608 (0xb bytes), align: 0
  Segment part 36.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_GetRequest
                                                   NLME_NetworkDiscoveryRequest
                                                   NLME_OrphanJoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A609 - 0002A63C (0x34 bytes), align: 0
  Segment part 37.            Intra module refs:   NLME_OrphanJoinRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_OrphanJoinRequest
                                   0002A609 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000021 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A63D - 0002A642 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   NLME_NetworkDiscoveryRequest
                                                   NLME_OrphanJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A643 - 0002A64B (0x9 bytes), align: 0
  Segment part 40.            Intra module refs:   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A64C - 0002A7A0 (0x155 bytes), align: 0
  Segment part 41.            Intra module refs:   NLME_ReJoinRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_ReJoinRequest      0002A64C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7A1 - 0002A7A6 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7A7 - 0002A7B4 (0xe bytes), align: 0
  Segment part 44.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A7B5 - 0002A929 (0x175 bytes), align: 0
  Segment part 45.            Intra module refs:   NLME_JoinRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinRequest        0002A7B5 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000001 ( 0000002E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A92A - 0002A931 (0x8 bytes), align: 0
  Segment part 47.            Intra module refs:   NLME_JoinRequest
                                                   Segment part 43
                                                   Segment part 49
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A932 - 0002A93B (0xa bytes), align: 0
  Segment part 48.            Intra module refs:   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A93C - 0002A941 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   NLDE_DataReqAlloc
                                                   NLME_JoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A942 - 0002A945 (0x4 bytes), align: 0
  Segment part 50.            Intra module refs:   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A946 - 0002A94D (0x8 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 40
                                                   Segment part 50
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A94E - 0002A955 (0x8 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 39
                                                   Segment part 51
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A956 - 0002A961 (0xc bytes), align: 0
  Segment part 59.            Intra module refs:   NLDE_DataReq
                                                   NLME_JoinRequest
                                                   NLME_ReJoinRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A962 - 0002AA30 (0xcf bytes), align: 0
  Segment part 60.            Intra module refs:   NLME_GetRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetRequest         0002A962 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AA31 - 0002AA3E (0xe bytes), align: 0
  Segment part 62.            Intra module refs:   NLME_GetRequest
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AA3F - 0002AA4A (0xc bytes), align: 0
  Segment part 65.            Intra module refs:   NLME_GetRequest
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001637 - 0000163C (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000157C - 00001581 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_DeviceJoiningInit::?relay
<<<<<<< HEAD
                                   00001637        ZDODeviceSetup (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000163D - 00001642 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   NLME_ReJoinRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReq::?relay    0000163D        APSDE_FrameSend (APSMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001643 - 00001648 (0x6 bytes), align: 0
=======
                                   0000157C        ZDODeviceSetup (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001582 - 00001587 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   NLME_ReJoinRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReq::?relay    00001582        APSDE_FrameSend (APSMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001588 - 0000158D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReqAlloc::?relay
<<<<<<< HEAD
                                   00001643        APSDE_FrameAlloc (APSMEDE)
                                                   NLME_CmdDataReqAlloc (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001649 - 0000164E (0x6 bytes), align: 0
=======
                                   00001588        APSDE_FrameAlloc (APSMEDE)
                                                   NLME_CmdDataReqAlloc (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000158E - 00001593 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkDiscoveryRequest::?relay
<<<<<<< HEAD
                                   00001649        ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000164F - 00001654 (0x6 bytes), align: 0
=======
                                   0000158E        ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001594 - 00001599 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_OrphanJoinRequest::?relay
<<<<<<< HEAD
                                   0000164F        ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001655 - 0000165A (0x6 bytes), align: 0
=======
                                   00001594        ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000159A - 0000159F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_ReJoinRequest::?relay
<<<<<<< HEAD
                                   00001655        ZDApp_ProcessOSALMsg (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000165B - 00001660 (0x6 bytes), align: 0
=======
                                   0000159A        ZDApp_ProcessOSALMsg (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015A0 - 000015A5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinRequest::?relay
<<<<<<< HEAD
                                   0000165B        ZDApp_ProcessOSALMsg (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001661 - 00001666 (0x6 bytes), align: 0
=======
                                   000015A0        ZDApp_ProcessOSALMsg (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015A6 - 000015AB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 61.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetRequest::?relay
<<<<<<< HEAD
                                   00001661        NLME_GetProtocolVersion (nwk_util)
=======
                                   000015A6        NLME_GetProtocolVersion (nwk_util)
>>>>>>> develop
                                                   ZDApp_Init (ZDApp)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : NLMEDE_CB

  SEGMENTS IN THE MODULE
  ======================
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038742 - 00038885 (0x144 bytes), align: 0
  Segment part 6.             Intra module refs:   NLDE_DataCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataCnf            00038742 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E1CF - 0002E312 (0x144 bytes), align: 0
  Segment part 6.             Intra module refs:   NLDE_DataCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataCnf            0002E1CF 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038886 - 00038A24 (0x19f bytes), align: 0
  Segment part 8.             Intra module refs:   NLDE_DataIndication::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndication     00038886 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E313 - 0002E4B1 (0x19f bytes), align: 0
  Segment part 8.             Intra module refs:   NLDE_DataIndication::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndication     0002E313 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000004 ( 00000036 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A25 - 00038A2D (0x9 bytes), align: 0
  Segment part 10.            Intra module refs:   NLDE_DataCnf
                                                   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A2E - 00038A36 (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A37 - 00038A42 (0xc bytes), align: 0
  Segment part 12.            Intra module refs:   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A43 - 00038A50 (0xe bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 11
                                                   Segment part 12
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A51 - 00038A59 (0x9 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4B2 - 0002E4BA (0x9 bytes), align: 0
  Segment part 10.            Intra module refs:   NLDE_DataCnf
                                                   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4BB - 0002E4C3 (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4C4 - 0002E4CF (0xc bytes), align: 0
  Segment part 12.            Intra module refs:   NLDE_DataIndication
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4D0 - 0002E4DD (0xe bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 11
                                                   Segment part 12
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4DE - 0002E4E6 (0x9 bytes), align: 0
>>>>>>> develop
  Segment part 14.            Intra module refs:   NLME_NetworkDiscoveryConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkDiscoveryConfirm
<<<<<<< HEAD
                                   00038A51 
=======
                                   0002E4DE 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A5A - 00038A62 (0x9 bytes), align: 0
  Segment part 18.            Intra module refs:   NLME_JoinConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinConfirm        00038A5A 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4E7 - 0002E4EF (0x9 bytes), align: 0
  Segment part 18.            Intra module refs:   NLME_JoinConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinConfirm        0002E4E7 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A63 - 00038A6B (0x9 bytes), align: 0
  Segment part 20.            Intra module refs:   NLME_LeaveCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCnf           00038A63 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4F0 - 0002E4F8 (0x9 bytes), align: 0
  Segment part 20.            Intra module refs:   NLME_LeaveCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCnf           0002E4F0 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A6C - 00038A72 (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   NLME_LeaveInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveInd           00038A6C 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E4F9 - 0002E4FF (0x7 bytes), align: 0
  Segment part 22.            Intra module refs:   NLME_LeaveInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveInd           0002E4F9 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A73 - 00038A79 (0x7 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E500 - 0002E506 (0x7 bytes), align: 0
>>>>>>> develop
  Segment part 24.            Intra module refs:   NLME_JoinConfirm
                                                   NLME_LeaveCnf
                                                   NLME_LeaveInd
                                                   NLME_NetworkDiscoveryConfirm
                                                   NLME_PollConfirm
                                                   NLME_SyncIndication
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A7A - 00038A82 (0x9 bytes), align: 0
  Segment part 25.            Intra module refs:   NLME_SyncIndication::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SyncIndication     00038A7A 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E507 - 0002E50F (0x9 bytes), align: 0
  Segment part 25.            Intra module refs:   NLME_SyncIndication::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SyncIndication     0002E507 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A83 - 00038A8B (0x9 bytes), align: 0
  Segment part 27.            Intra module refs:   NLME_PollConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PollConfirm        00038A83 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E510 - 0002E518 (0x9 bytes), align: 0
  Segment part 27.            Intra module refs:   NLME_PollConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PollConfirm        0002E510 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001667 - 0000166C (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataCnf::?relay    00001667        nwk_data_cnf_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000166D - 00001672 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000015AC - 000015B1 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataCnf::?relay    000015AC        nwk_data_cnf_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015B2 - 000015B7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndication::?relay
<<<<<<< HEAD
                                   0000166D        NLDE_DataIndSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001673 - 00001678 (0x6 bytes), align: 0
=======
                                   000015B2        NLDE_DataIndSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015B8 - 000015BD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_NetworkDiscoveryConfirm::?relay
<<<<<<< HEAD
                                   00001673        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001679 - 0000167E (0x6 bytes), align: 0
=======
                                   000015B8        nwk_scan_cnf_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015BE - 000015C3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_JoinConfirm::?relay
<<<<<<< HEAD
                                   00001679        Segment part 23 (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000167F - 00001684 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCnf::?relay   0000167F        NLME_LeaveCmdCnf (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001685 - 0000168A (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveInd::?relay   00001685        NLME_LeaveCmdProcess (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000168B - 00001690 (0x6 bytes), align: 0
=======
                                   000015BE        Segment part 23 (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015C4 - 000015C9 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCnf::?relay   000015C4        NLME_LeaveCmdCnf (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015CA - 000015CF (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveInd::?relay   000015CA        NLME_LeaveCmdProcess (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015D0 - 000015D5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SyncIndication::?relay
<<<<<<< HEAD
                                   0000168B        RTG_UpdateNeighborEntry (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001691 - 00001696 (0x6 bytes), align: 0
=======
                                   000015D0        RTG_UpdateNeighborEntry (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015D6 - 000015DB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_PollConfirm::?relay
<<<<<<< HEAD
                                   00001691        nwk_event_loop (nwk)
=======
                                   000015D6        nwk_event_loop (nwk)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : aps_groups

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000E345 - 0000E346 (0x2 bytes), align: 0
=======
  Relative segment, address: XDATA 0000E33D - 0000E33E (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 6.             Intra module refs:   aps_AddGroup
                                                   aps_CountAllGroups
                                                   aps_FindGroup
                                                   aps_FindGroupForEndpoint
                                                   aps_GroupsWriteNV
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038D77 - 00038E1A (0xa4 bytes), align: 0
  Segment part 7.             Intra module refs:   aps_AddGroup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_AddGroup            00038D77 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E519 - 0002E5BC (0xa4 bytes), align: 0
  Segment part 7.             Intra module refs:   aps_AddGroup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_AddGroup            0002E519 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000021 ( 00000011 )
               stack 4 = 00000000 ( 00000001 )
<<<<<<< HEAD
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E1B - 00038E60 (0x46 bytes), align: 0
  Segment part 9.             Intra module refs:   aps_FindGroup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroup           00038E1B 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E61 - 00038E65 (0x5 bytes), align: 0
=======
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E5BD - 0002E602 (0x46 bytes), align: 0
  Segment part 9.             Intra module refs:   aps_FindGroup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroup           0002E5BD 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E603 - 0002E607 (0x5 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   aps_FindGroup
                                                   aps_FindGroupForEndpoint
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038E66 - 00038EB0 (0x4b bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E608 - 0002E652 (0x4b bytes), align: 0
>>>>>>> develop
  Segment part 12.            Intra module refs:   aps_FindGroupForEndpoint::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroupForEndpoint
<<<<<<< HEAD
                                   00038E66 
=======
                                   0002E608 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E653 - 0002E6C1 (0x6f bytes), align: 0
  Segment part 17.            Intra module refs:   aps_RemoveGroup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_RemoveGroup         0002E653 
               calls direct
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038EB1 - 00038F1F (0x6f bytes), align: 0
  Segment part 17.            Intra module refs:   aps_RemoveGroup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_RemoveGroup         00038EB1 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F20 - 00038F24 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   aps_GroupsWriteNV
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F25 - 00038F2A (0x6 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6C2 - 0002E6C6 (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   aps_GroupsWriteNV
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6C7 - 0002E6CC (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.            Intra module refs:   aps_AddGroup
                                                   aps_GroupsWriteNV
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F2B - 00038F31 (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   aps_CountAllGroups
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F32 - 00038F3B (0xa bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6CD - 0002E6D3 (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   aps_CountAllGroups
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6D4 - 0002E6DD (0xa bytes), align: 0
>>>>>>> develop
  Segment part 26.            Intra module refs:   aps_AddGroup
                                                   aps_CountAllGroups
                                                   aps_RemoveGroup
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F3C - 00038F58 (0x1d bytes), align: 0
  Segment part 27.            Intra module refs:   aps_CountAllGroups::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_CountAllGroups      00038F3C 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6DE - 0002E6FA (0x1d bytes), align: 0
  Segment part 27.            Intra module refs:   aps_CountAllGroups::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_CountAllGroups      0002E6DE 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038F59 - 0003903E (0xe6 bytes), align: 0
  Segment part 33.            Intra module refs:   aps_GroupsWriteNV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_GroupsWriteNV       00038F59 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6FB - 0002E7E0 (0xe6 bytes), align: 0
  Segment part 33.            Intra module refs:   aps_GroupsWriteNV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_GroupsWriteNV       0002E6FB 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000024 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003903F - 0003904D (0xf bytes), align: 0
  Segment part 35.            Intra module refs:   aps_GroupsWriteNV
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001697 - 0000169C (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_AddGroup::?relay    00001697        AXD_Init (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000169D - 000016A2 (0x6 bytes), align: 0
  Segment part 10.            Intra module refs:   aps_AddGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroup::?relay   0000169D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016A3 - 000016A8 (0x6 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E7E1 - 0002E7EF (0xf bytes), align: 0
  Segment part 35.            Intra module refs:   aps_GroupsWriteNV
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015DC - 000015E1 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_AddGroup::?relay    000015DC        AXD_Init (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015E2 - 000015E7 (0x6 bytes), align: 0
  Segment part 10.            Intra module refs:   aps_AddGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroup::?relay   000015E2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015E8 - 000015ED (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_FindGroupForEndpoint::?relay
<<<<<<< HEAD
                                   000016A3        afIncomingData (AF)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016A9 - 000016AE (0x6 bytes), align: 0
=======
                                   000015E8        afIncomingData (AF)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015EE - 000015F3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_RemoveGroup::?relay
<<<<<<< HEAD
                                   000016A9        AXD_SendTheMessage (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016AF - 000016B4 (0x6 bytes), align: 0
=======
                                   000015EE        AXD_SendTheMessage (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015F4 - 000015F9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.            Intra module refs:   aps_AddGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_CountAllGroups::?relay
<<<<<<< HEAD
                                   000016AF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016B5 - 000016BA (0x6 bytes), align: 0
=======
                                   000015F4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000015FA - 000015FF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 34.            Intra module refs:   aps_AddGroup
                                                   aps_RemoveGroup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aps_GroupsWriteNV::?relay
<<<<<<< HEAD
                                   000016B5 
=======
                                   000015FA 
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : aps_util

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F044 - 0002F200 (0x1bd bytes), align: 0
  Segment part 6.             Intra module refs:   APSDE_ParseMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_ParseMsg          0002F044 
=======
  Relative segment, address: CODE 0002C9CF - 0002CB8B (0x1bd bytes), align: 0
  Segment part 6.             Intra module refs:   APSDE_ParseMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_ParseMsg          0002C9CF 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F201 - 0002F20C (0xc bytes), align: 0
  Segment part 8.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F20D - 0002F211 (0x5 bytes), align: 0
=======
  Relative segment, address: CODE 0002CB8C - 0002CB97 (0xc bytes), align: 0
  Segment part 8.             Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CB98 - 0002CB9C (0x5 bytes), align: 0
>>>>>>> develop
  Segment part 9.             Intra module refs:   Segment part 26
                                                   Segment part 8
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F212 - 0002F21A (0x9 bytes), align: 0
  Segment part 10.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F21B - 0002F225 (0xb bytes), align: 0
=======
  Relative segment, address: CODE 0002CB9D - 0002CBA5 (0x9 bytes), align: 0
  Segment part 10.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CBA6 - 0002CBB0 (0xb bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   APSDE_ParseMsg
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F226 - 0002F228 (0x3 bytes), align: 0
=======
  Relative segment, address: CODE 0002CBB1 - 0002CBB3 (0x3 bytes), align: 0
>>>>>>> develop
  Segment part 12.            Intra module refs:   APSDE_ParseMsg
                                                   apsAckFindMatchCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F229 - 0002F22E (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0002CBB4 - 0002CBB9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 13.            Intra module refs:   Segment part 12
                                                   Segment part 14
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F22F - 0002F237 (0x9 bytes), align: 0
  Segment part 14.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F238 - 0002F242 (0xb bytes), align: 0
  Segment part 15.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F243 - 0002F24D (0xb bytes), align: 0
  Segment part 16.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F24E - 0002F261 (0x14 bytes), align: 0
  Segment part 17.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F262 - 0002F388 (0x127 bytes), align: 0
  Segment part 18.            Intra module refs:   apsGenerateAck::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsGenerateAck          0002F262 
=======
  Relative segment, address: CODE 0002CBBA - 0002CBC2 (0x9 bytes), align: 0
  Segment part 14.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CBC3 - 0002CBCD (0xb bytes), align: 0
  Segment part 15.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CBCE - 0002CBD8 (0xb bytes), align: 0
  Segment part 16.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CBD9 - 0002CBEC (0x14 bytes), align: 0
  Segment part 17.            Intra module refs:   APSDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CBED - 0002CD13 (0x127 bytes), align: 0
  Segment part 18.            Intra module refs:   apsGenerateAck::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsGenerateAck          0002CBED 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000013 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F389 - 0002F38D (0x5 bytes), align: 0
=======
  Relative segment, address: CODE 0002CD14 - 0002CD18 (0x5 bytes), align: 0
>>>>>>> develop
  Segment part 20.            Intra module refs:   apsAckFindMatchCB
                                                   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F38E - 0002F394 (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F395 - 0002F3A1 (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F3A2 - 0002F3AD (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F3AE - 0002F44A (0x9d bytes), align: 0
  Segment part 24.            Intra module refs:   apsAckFindMatchCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsAckFindMatchCB       0002F3AE 
=======
  Relative segment, address: CODE 0002CD19 - 0002CD1F (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CD20 - 0002CD2C (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CD2D - 0002CD38 (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   apsGenerateAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CD39 - 0002CDD5 (0x9d bytes), align: 0
  Segment part 24.            Intra module refs:   apsAckFindMatchCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsAckFindMatchCB       0002CD39 
>>>>>>> develop
               is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F44B - 0002F456 (0xc bytes), align: 0
  Segment part 26.            Intra module refs:   apsAckFindMatchCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F457 - 0002F463 (0xd bytes), align: 0
=======
  Relative segment, address: CODE 0002CDD6 - 0002CDE1 (0xc bytes), align: 0
  Segment part 26.            Intra module refs:   apsAckFindMatchCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CDE2 - 0002CDEE (0xd bytes), align: 0
>>>>>>> develop
  Segment part 27.            Intra module refs:   APSDE_ParseMsg
                                                   apsAckFindMatchCB
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F464 - 0002F4F9 (0x96 bytes), align: 0
  Segment part 28.            Intra module refs:   apsProcessAck::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsProcessAck           0002F464 
=======
  Relative segment, address: CODE 0002CDEF - 0002CE84 (0x96 bytes), align: 0
  Segment part 28.            Intra module refs:   apsProcessAck::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsProcessAck           0002CDEF 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F4FA - 0002F502 (0x9 bytes), align: 0
=======
  Relative segment, address: CODE 0002CE85 - 0002CE8D (0x9 bytes), align: 0
>>>>>>> develop
  Segment part 30.            Intra module refs:   apsAckFindMatchCB
                                                   apsProcessAck
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F503 - 0002F50D (0xb bytes), align: 0
=======
  Relative segment, address: CODE 0002CE8E - 0002CE98 (0xb bytes), align: 0
>>>>>>> develop
  Segment part 31.            Intra module refs:   apsGenerateAck
                                                   apsProcessAck
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000016BB - 000016C0 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001600 - 00001605 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           APSDE_ParseMsg::?relay
<<<<<<< HEAD
                                   000016BB        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016C1 - 000016C6 (0x6 bytes), align: 0
=======
                                   00001600        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001606 - 0000160B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsGenerateAck::?relay
<<<<<<< HEAD
                                   000016C1        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016C7 - 000016CC (0x6 bytes), align: 0
=======
                                   00001606        NLDE_DataIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000160C - 00001611 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 25.            Intra module refs:   apsProcessAck
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsAckFindMatchCB::?relay
<<<<<<< HEAD
                                   000016C7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016CD - 000016D2 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsProcessAck::?relay   000016CD        NLDE_DataIndication (NLMEDE_CB)
=======
                                   0000160C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001612 - 00001617 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           apsProcessAck::?relay   00001612        NLDE_DataIndication (NLMEDE_CB)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E33F - 0000E39E (0x60 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 23
                                                   Segment part 53
                                                   Segment part 88
                                                   nwk_ScanJoiningOrphan
                                                   nwk_associate_cnf_processing
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
                                                   nwk_init
                                                   nwk_scan_cnf_processing
                                                   nwk_set_poll_evt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _NIB                    0000E33F        APSDE_DataReqMTU (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APS_DataIndReflect (APS)
                                                   NIB_init (nwk_globals)
                                                   NLDE_CheckFrameSecurity (nwk_util)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_GetShortAddr (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   Segment part 44 (NLMEDE)
                                                   Segment part 47 (nwk_util)
                                                   Segment part 65 (NLMEDE)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   bindAddrMgrLocalLoad (BindingTable)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E39F - 0000E39F (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 40
                                                   nwkBuildDataCnf
                                                   nwk_ScanJoiningOrphan
                                                   nwk_event_loop
                                                   nwk_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NWK_TaskID              0000E39F        MAC_CbackEvent (zmac_cb)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetPollRate (nwk_util)
                                                   Segment part 29 (nwk_bufs)
                                                   Segment part 83 (nwk_util)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3A0 - 0000E3A1 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_desc_list_free
                                                   nwk_getNetworkDesc
                                                   nwk_init
                                                   nwk_scan_cnf_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NwkDescList             0000E3A0 
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE09 - 0000EE10 (0x8 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EDA4 - 0000EDAB (0x8 bytes), align: 0
>>>>>>> develop
  Segment part 6.             Intra module refs:   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190BF - 000190E9 (0x2b bytes), align: 0
  Segment part 18.            Intra module refs:   nwk_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_init                000190BF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000190EA - 0001931C (0x233 bytes), align: 0
  Segment part 20.            Intra module refs:   nwk_event_loop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_event_loop          000190EA 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001931D - 00019329 (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001932A - 00019335 (0xc bytes), align: 0
  Segment part 23.            Intra module refs:   nwk_associate_cnf_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019336 - 00019377 (0x42 bytes), align: 0
  Segment part 24.            Intra module refs:   NwkPollReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NwkPollReq              00019336 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000016 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019378 - 000193FE (0x87 bytes), align: 0
  Segment part 26.            Intra module refs:   nwk_data_req_send::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_req_send       00019378 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000193FF - 00019405 (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019406 - 00019410 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
                                                   Segment part 30
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019411 - 0001941C (0xc bytes), align: 0
  Segment part 30.            Intra module refs:   nwk_data_req_send
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001941D - 00019423 (0x7 bytes), align: 0
  Segment part 31.            Intra module refs:   nwkSimulateDataCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkSimulateDataCnf      0001941D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019424 - 0001942A (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   NwkPollReq
                                                   nwkSimulateDataCnf
                                                   nwk_init
                                                   nwk_scan_cnf_processing
                                                   nwk_set_poll_evt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001942B - 00019465 (0x3b bytes), align: 0
  Segment part 34.            Intra module refs:   nwkBuildDataCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkBuildDataCnf         0001942B 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019466 - 00019480 (0x1b bytes), align: 0
  Segment part 36.            Intra module refs:   nwk_set_poll_evt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_set_poll_evt        00019466 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000012 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019481 - 000195D8 (0x158 bytes), align: 0
  Segment part 38.            Intra module refs:   nwk_data_cnf_processing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_cnf_processing
                                   00019481 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000195D9 - 000195EB (0x13 bytes), align: 0
  Segment part 40.            Intra module refs:   nwk_data_cnf_processing
                                                   nwk_event_loop
                                                   nwk_set_poll_evt
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000195EC - 000197F2 (0x207 bytes), align: 0
  Segment part 41.            Intra module refs:   nwk_data_ind_processing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_ind_processing
                                   000195EC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000002E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000197F3 - 000197FA (0x8 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 65
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000197FB - 00019803 (0x9 bytes), align: 0
  Segment part 44.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019804 - 00019809 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001980A - 00019819 (0x10 bytes), align: 0
  Segment part 46.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001981A - 0001981F (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 40
                                                   Segment part 46
                                                   Segment part 88
                                                   nwk_associate_cnf_processing
                                                   nwk_data_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019820 - 0001982D (0xe bytes), align: 0
  Segment part 48.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001982E - 0001983C (0xf bytes), align: 0
  Segment part 49.            Intra module refs:   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001983D - 000199B7 (0x17b bytes), align: 0
  Segment part 50.            Intra module refs:   nwk_associate_cnf_processing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_associate_cnf_processing
                                   0001983D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000012 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000199B8 - 000199BC (0x5 bytes), align: 0
  Segment part 52.            Intra module refs:   nwk_associate_cnf_processing
                                                   nwk_desc_list_free
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000199BD - 000199C3 (0x7 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 45
                                                   nwk_associate_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000199C4 - 00019A3C (0x79 bytes), align: 0
  Segment part 56.            Intra module refs:   nwk_scan_cnf_processing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_scan_cnf_processing
                                   000199C4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A3D - 00019A42 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_desc_list_free
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A43 - 00019A4B (0x9 bytes), align: 0
  Segment part 59.            Intra module refs:   nwk_data_ind_processing
                                                   nwk_data_req_send
                                                   nwk_event_loop
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A4C - 00019A54 (0x9 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 48
                                                   Segment part 49
                                                   Segment part 59
                                                   nwk_data_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A55 - 00019A60 (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_data_req_send
                                                   nwk_event_loop
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019A61 - 00019B0E (0xae bytes), align: 0
  Segment part 62.            Intra module refs:   nwk_ScanJoiningOrphan::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_ScanJoiningOrphan   00019A61 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B0F - 00019B12 (0x4 bytes), align: 0
  Segment part 64.            Intra module refs:   NwkPollReq
                                                   nwk_ScanJoiningOrphan
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B13 - 00019B1A (0x8 bytes), align: 0
  Segment part 65.            Intra module refs:   Segment part 64
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B1B - 00019B24 (0xa bytes), align: 0
  Segment part 68.            Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_data_cnf_processing
                                                   nwk_data_req_send
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B25 - 00019B29 (0x5 bytes), align: 0
  Segment part 69.            Intra module refs:   nwk_data_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B2A - 00019B2F (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 53
                                                   Segment part 69
                                                   Segment part 84
                                                   nwk_associate_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019B30 - 00019DCD (0x29e bytes), align: 0
  Segment part 74.            Intra module refs:   nwk_beacon_notify_ind_processing::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_beacon_notify_ind_processing
                                   00019B30 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000001E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019DCE - 00019DCF (0x2 bytes), align: 0
  Segment part 76.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019DD0 - 00019DD7 (0x8 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 102
                                                   Segment part 76
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019DD8 - 00019DE3 (0xc bytes), align: 0
  Segment part 78.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019DE4 - 00019DED (0xa bytes), align: 0
  Segment part 79.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_data_ind_processing
                                                   nwk_getNetworkDesc
                                                   nwk_scan_cnf_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019DEE - 00019DF4 (0x7 bytes), align: 0
  Segment part 80.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019DF5 - 00019DFC (0x8 bytes), align: 0
  Segment part 81.            Intra module refs:   Segment part 22
                                                   Segment part 44
                                                   Segment part 46
                                                   Segment part 61
                                                   Segment part 79
                                                   Segment part 80
                                                   Segment part 94
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019DFD - 00019E03 (0x7 bytes), align: 0
  Segment part 82.            Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E04 - 00019E09 (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E0A - 00019E0C (0x3 bytes), align: 0
  Segment part 84.            Intra module refs:   Segment part 83
                                                   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E0D - 00019E11 (0x5 bytes), align: 0
  Segment part 85.            Intra module refs:   Segment part 105
                                                   Segment part 84
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E12 - 00019E1E (0xd bytes), align: 0
  Segment part 86.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E1F - 00019E31 (0x13 bytes), align: 0
  Segment part 87.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E32 - 00019E47 (0x16 bytes), align: 0
  Segment part 88.            Intra module refs:   nwk_ScanJoiningOrphan
                                                   nwk_beacon_notify_ind_processing
                                                   nwk_data_cnf_processing
                                                   nwk_data_ind_processing
                                                   nwk_event_loop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E48 - 00019E4D (0x6 bytes), align: 0
  Segment part 89.            Intra module refs:   nwk_beacon_notify_ind_processing
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019E4E - 00019ED1 (0x84 bytes), align: 0
  Segment part 90.            Intra module refs:   nwk_getNetworkDesc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getNetworkDesc      00019E4E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000016 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019ED2 - 00019ED9 (0x8 bytes), align: 0
  Segment part 92.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_event_loop
                                                   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019EDA - 00019EE2 (0x9 bytes), align: 0
  Segment part 93.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019EE3 - 00019EEB (0x9 bytes), align: 0
  Segment part 94.            Intra module refs:   nwk_beacon_notify_ind_processing
                                                   nwk_desc_list_free
                                                   nwk_getNetworkDesc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019EEC - 00019F17 (0x2c bytes), align: 0
  Segment part 95.            Intra module refs:   nwk_desc_list_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_desc_list_free      00019EEC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000012 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019F18 - 00019F1C (0x5 bytes), align: 0
  Segment part 99.            Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019F1D - 00019F21 (0x5 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 89
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019F22 - 00019F25 (0x4 bytes), align: 0
  Segment part 102.           Intra module refs:   Segment part 101
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019F26 - 00019FA9 (0x84 bytes), align: 0
  Segment part 103.           Intra module refs:   nwk_BeaconFromNative::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_BeaconFromNative    00019F26 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001D ( 0000000E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019FAA - 00019FAE (0x5 bytes), align: 0
  Segment part 105.           Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019FAF - 00019FBA (0xc bytes), align: 0
  Segment part 106.           Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019FBB - 00019FC5 (0xb bytes), align: 0
  Segment part 107.           Intra module refs:   nwk_BeaconFromNative
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 00002346 - 0000234D (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016D3 - 000016D8 (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_init::?relay        000016D3        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016D9 - 000016DE (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000218F - 00002196 (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001618 - 0000161D (0x6 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_init::?relay        00001618        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000161E - 00001623 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_event_loop::?relay
<<<<<<< HEAD
                                   000016D9        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016DF - 000016E4 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NwkPollReq::?relay      000016DF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016E5 - 000016EA (0x6 bytes), align: 0
=======
                                   0000161E        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001624 - 00001629 (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NwkPollReq::?relay      00001624 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000162A - 0000162F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_req_send::?relay
<<<<<<< HEAD
                                   000016E5        nwk_SendNextDataBuf (nwk_bufs)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016EB - 000016F0 (0x6 bytes), align: 0
=======
                                   0000162A        nwk_SendNextDataBuf (nwk_bufs)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001630 - 00001635 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkSimulateDataCnf::?relay
<<<<<<< HEAD
                                   000016EB        apsProcessAck (aps_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016F1 - 000016F6 (0x6 bytes), align: 0
=======
                                   00001630        apsProcessAck (aps_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001636 - 0000163B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   Segment part 30
                                                   nwkSimulateDataCnf
                                                   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkBuildDataCnf::?relay
<<<<<<< HEAD
                                   000016F1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016F7 - 000016FC (0x6 bytes), align: 0
=======
                                   00001636 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000163C - 00001641 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 37.            Intra module refs:   nwk_associate_cnf_processing
                                                   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_set_poll_evt::?relay
<<<<<<< HEAD
                                   000016F7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016FD - 00001702 (0x6 bytes), align: 0
=======
                                   0000163C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001642 - 00001647 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_cnf_processing::?relay
<<<<<<< HEAD
                                   000016FD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001703 - 00001708 (0x6 bytes), align: 0
=======
                                   00001642 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001648 - 0000164D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 42.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_data_ind_processing::?relay
<<<<<<< HEAD
                                   00001703 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001709 - 0000170E (0x6 bytes), align: 0
=======
                                   00001648 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000164E - 00001653 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_associate_cnf_processing::?relay
<<<<<<< HEAD
                                   00001709        NLME_DeviceJoiningInit (NLMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000170F - 00001714 (0x6 bytes), align: 0
=======
                                   0000164E        NLME_DeviceJoiningInit (NLMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001654 - 00001659 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 57.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_scan_cnf_processing::?relay
<<<<<<< HEAD
                                   0000170F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001715 - 0000171A (0x6 bytes), align: 0
=======
                                   00001654 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000165A - 0000165F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_ScanJoiningOrphan::?relay
<<<<<<< HEAD
                                   00001715        NLME_DeviceJoiningInit (NLMEDE)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000171B - 00001720 (0x6 bytes), align: 0
=======
                                   0000165A        NLME_DeviceJoiningInit (NLMEDE)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001660 - 00001665 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 75.            Intra module refs:   nwk_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_beacon_notify_ind_processing::?relay
<<<<<<< HEAD
                                   0000171B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001721 - 00001726 (0x6 bytes), align: 0
=======
                                   00001660 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001666 - 0000166B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_getNetworkDesc::?relay
<<<<<<< HEAD
                                   00001721        NLME_JoinRequest (NLMEDE)
=======
                                   00001666        NLME_JoinRequest (NLMEDE)
>>>>>>> develop
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   ZDApp_NodeProfileSync (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001727 - 0000172C (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000166C - 00001671 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 96.            Intra module refs:   nwk_associate_cnf_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_desc_list_free::?relay
<<<<<<< HEAD
                                   00001727 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000172D - 00001732 (0x6 bytes), align: 0
=======
                                   0000166C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001672 - 00001677 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 104.           Intra module refs:   nwk_beacon_notify_ind_processing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_BeaconFromNative::?relay
<<<<<<< HEAD
                                   0000172D 
=======
                                   00001672 
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk_bufs

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3A2 - 0000E3A2 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   nwk_MacDataBuffersDealloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cntIndirectHolding      0000E3A2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3A3 - 0000E3A4 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   nwkDB_Add
                                                   nwkDB_CountTypes
                                                   nwkDB_FindHandle
                                                   nwkDB_FindMatch
                                                   nwkDB_FindNextType
                                                   nwkDB_RemoveFromList
                                                   nwkbufs_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDataBufQueue         0000E3A3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E57 - 00029E64 (0xe bytes), align: 0
  Segment part 8.             Intra module refs:   nwkbufs_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkbufs_init            00029E57 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E65 - 00029E88 (0x24 bytes), align: 0
  Segment part 10.            Intra module refs:   nwk_SendNextDataBuf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_SendNextDataBuf     00029E65 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E89 - 00029E8D (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   nwk_MacDataBuffersDealloc
                                                   nwk_SendNextDataBuf
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E8E - 00029EAF (0x22 bytes), align: 0
  Segment part 13.            Intra module refs:   nwk_MacDataBuffersFull::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersFull
                                   00029E8E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029EB0 - 0002A111 (0x262 bytes), align: 0
  Segment part 15.            Intra module refs:   nwk_MacDataBuffersAdd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersAdd   00029EB0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000011 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A112 - 0002A116 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   nwkDB_FindMatch
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A117 - 0002A11F (0x9 bytes), align: 0
  Segment part 18.            Intra module refs:   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A120 - 0002A123 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A124 - 0002A12E (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Segment part 55
                                                   Segment part 64
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A12F - 0002A174 (0x46 bytes), align: 0
  Segment part 21.            Intra module refs:   nwk_MacDataBuffersDealloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersDealloc
                                   0002A12F 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A175 - 0002A1DB (0x67 bytes), align: 0
  Segment part 23.            Intra module refs:   nwkDB_CreateHdr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_CreateHdr         0002A175 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000F ( 0000000E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A1DC - 0002A1E2 (0x7 bytes), align: 0
  Segment part 25.            Intra module refs:   nwkDB_CreateHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A1E3 - 0002A29B (0xb9 bytes), align: 0
  Segment part 26.            Intra module refs:   nwkDB_Add::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_Add               0002A1E3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000011 ( 0000000B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A29C - 0002A2AA (0xf bytes), align: 0
  Segment part 28.            Intra module refs:   nwkDB_Add
                                                   nwk_MacDataBuffersFull
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A2AB - 0002A2B9 (0xf bytes), align: 0
  Segment part 29.            Intra module refs:   nwkDB_Add
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A2BA - 0002A2EE (0x35 bytes), align: 0
  Segment part 30.            Intra module refs:   nwkDB_CountTypes::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_CountTypes        0002A2BA 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A2EF - 0002A345 (0x57 bytes), align: 0
  Segment part 32.            Intra module refs:   nwkDB_FindNextType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindNextType      0002A2EF 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A346 - 0002A374 (0x2f bytes), align: 0
  Segment part 34.            Intra module refs:   nwkDB_FindHandle::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindHandle        0002A346 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000F ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A375 - 0002A379 (0x5 bytes), align: 0
  Segment part 36.            Intra module refs:   nwkDB_CountTypes
                                                   nwkDB_FindHandle
                                                   nwkDB_FindNextType
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A37A - 0002A380 (0x7 bytes), align: 0
  Segment part 39.            Intra module refs:   nwkDB_CountTypes
                                                   nwkDB_FindHandle
                                                   nwk_MacDataBuffersFull
                                                   nwkbufs_init
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A381 - 0002A38C (0xc bytes), align: 0
  Segment part 42.            Intra module refs:   nwkDB_Add
                                                   nwkDB_RemoveFromList
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A38D - 0002A3DC (0x50 bytes), align: 0
  Segment part 43.            Intra module refs:   nwkDB_FindMatch::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindMatch         0002A38D 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A3DD - 0002A42E (0x52 bytes), align: 0
  Segment part 49.            Intra module refs:   nwkDB_RemoveFromList::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_RemoveFromList    0002A3DD 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A42F - 0002A434 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 36
                                                   Segment part 56
                                                   nwkDB_RemoveFromList
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A435 - 0002A459 (0x25 bytes), align: 0
  Segment part 52.            Intra module refs:   nwkDB_DeleteRecAll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_DeleteRecAll      0002A435 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A45A - 0002A45E (0x5 bytes), align: 0
  Segment part 54.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwkDB_FindNextType
                                                   nwkDB_RemoveFromList
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A45F - 0002A465 (0x7 bytes), align: 0
  Segment part 55.            Intra module refs:   nwkDB_DeleteRecAll
                                                   nwk_MacDataBuffersAdd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A466 - 0002A46C (0x7 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 55
                                                   Segment part 64
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A46D - 0002A470 (0x4 bytes), align: 0
  Segment part 59.            Intra module refs:   nwkDB_CreateHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A471 - 0002A476 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 25
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A477 - 0002A480 (0xa bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 60
                                                   nwkDB_CreateHdr
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002A481 - 0002A4A0 (0x20 bytes), align: 0
  Segment part 64.            Intra module refs:   nwkDB_DeleteRecAll
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001733 - 00001738 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkbufs_init::?relay    00001733        nwk_init (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001739 - 0000173E (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001678 - 0000167D (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkbufs_init::?relay    00001678        nwk_init (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000167E - 00001683 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_SendNextDataBuf::?relay
<<<<<<< HEAD
                                   00001739        nwk_data_cnf_processing (nwk)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000173F - 00001744 (0x6 bytes), align: 0
=======
                                   0000167E        nwk_data_cnf_processing (nwk)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001684 - 00001689 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersFull::?relay
<<<<<<< HEAD
                                   0000173F        NLDE_DataReqSend (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001745 - 0000174A (0x6 bytes), align: 0
=======
                                   00001684        NLDE_DataReqSend (nwk_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000168A - 0000168F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersAdd::?relay
<<<<<<< HEAD
                                   00001745        NLDE_SendMsg (nwk_util)
=======
                                   0000168A        NLDE_SendMsg (nwk_util)
>>>>>>> develop
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_req_send (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000174B - 00001750 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001690 - 00001695 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_MacDataBuffersDealloc::?relay
<<<<<<< HEAD
                                   0000174B        nwk_data_cnf_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001751 - 00001756 (0x6 bytes), align: 0
=======
                                   00001690        nwk_data_cnf_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001696 - 0000169B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 24.            Intra module refs:   nwk_MacDataBuffersAdd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_CreateHdr::?relay
<<<<<<< HEAD
                                   00001751 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001757 - 0000175C (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   nwk_MacDataBuffersAdd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_Add::?relay       00001757 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000175D - 00001762 (0x6 bytes), align: 0
=======
                                   00001696 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000169C - 000016A1 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   nwk_MacDataBuffersAdd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_Add::?relay       0000169C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016A2 - 000016A7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 31.            Intra module refs:   Segment part 28
                                                   nwkDB_Add
                                                   nwk_MacDataBuffersFull
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_CountTypes::?relay
<<<<<<< HEAD
                                   0000175D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001763 - 00001768 (0x6 bytes), align: 0
=======
                                   000016A2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016A8 - 000016AD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 33.            Intra module refs:   nwk_SendNextDataBuf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindNextType::?relay
<<<<<<< HEAD
                                   00001763        nwk_event_loop (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001769 - 0000176E (0x6 bytes), align: 0
=======
                                   000016A8        nwk_event_loop (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016AE - 000016B3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   nwk_MacDataBuffersAdd
                                                   nwk_MacDataBuffersDealloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindHandle::?relay
<<<<<<< HEAD
                                   00001769        NLDE_GetHandle (nwk_util)
                                                   nwk_data_cnf_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000176F - 00001774 (0x6 bytes), align: 0
=======
                                   000016AE        NLDE_GetHandle (nwk_util)
                                                   nwk_data_cnf_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016B4 - 000016B9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_FindMatch::?relay
<<<<<<< HEAD
                                   0000176F        apsProcessAck (aps_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001775 - 0000177A (0x6 bytes), align: 0
=======
                                   000016B4        apsProcessAck (aps_util)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016BA - 000016BF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 50.            Intra module refs:   nwkDB_DeleteRecAll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_RemoveFromList::?relay
<<<<<<< HEAD
                                   00001775 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000177B - 00001780 (0x6 bytes), align: 0
=======
                                   000016BA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016C0 - 000016C5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 53.            Intra module refs:   nwk_MacDataBuffersDealloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_DeleteRecAll::?relay
<<<<<<< HEAD
                                   0000177B 
=======
                                   000016C0 
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : nwk_util

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3A5 - 0000E3A5 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   NLME_IsAddressBroadcast
                                                   NLME_SetBroadcastFilter
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3A6 - 0000E3AD (0x8 bytes), align: 0
  Segment part 9.             Intra module refs:   NLME_GetExtAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           saveExtAddr             0000E3A6        ZDP_NwkAddrReq (ZDProfile)
                                                   zdpProcessAddrReq (ZDProfile)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3AE - 0000E3AE (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   NLDE_GetHandle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nsduHandleCounter       0000E3AE 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018118 - 0001823E (0x127 bytes), align: 0
  Segment part 16.            Intra module refs:   NLDE_DataReqSend::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReqSend        00018118 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000015 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001823F - 00018248 (0xa bytes), align: 0
  Segment part 18.            Intra module refs:   NLDE_DataReqSend
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018249 - 000182D7 (0x8f bytes), align: 0
  Segment part 19.            Intra module refs:   NLDE_DataIndSend::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndSend        00018249 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001C )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000182D8 - 000183EF (0x118 bytes), align: 0
  Segment part 21.            Intra module refs:   NLDE_SendMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_SendMsg            000182D8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000015 ( 00000022 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000183F0 - 000183F4 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_SendMsg
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000183F5 - 000183FA (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   NLDE_SendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000183FB - 0001858E (0x194 bytes), align: 0
  Segment part 25.            Intra module refs:   NLDE_BuildMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildMsg           000183FB 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000010 ( 00000013 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001858F - 00018598 (0xa bytes), align: 0
  Segment part 27.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018599 - 0001859A (0x2 bytes), align: 0
  Segment part 28.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001859B - 000185A2 (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   NLME_RejoinRspCmdProcess
                                                   Segment part 148
                                                   Segment part 28
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185A3 - 000185AD (0xb bytes), align: 0
  Segment part 30.            Intra module refs:   NLDE_BuildFrameControl
                                                   NLDE_BuildMsg
                                                   NLDE_DataIndSend
                                                   NLDE_DataReqSend
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185AE - 000185B1 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185B2 - 000185BB (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   Segment part 35
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185BC - 000185C3 (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_ParseMsg2
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185C4 - 000185C7 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185C8 - 000185CD (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
                                                   Segment part 36
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185CE - 000185D6 (0x9 bytes), align: 0
  Segment part 36.            Intra module refs:   NLDE_BuildMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185D7 - 000185E2 (0xc bytes), align: 0
  Segment part 37.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_DataReqSend
                                                   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000185E3 - 00018660 (0x7e bytes), align: 0
  Segment part 38.            Intra module refs:   NLDE_BuildFrameControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildFrameControl
                                   000185E3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000010 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018661 - 0001866A (0xa bytes), align: 0
  Segment part 40.            Intra module refs:   NLDE_BuildFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001866B - 00018672 (0x8 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 113
                                                   Segment part 117
                                                   Segment part 123
                                                   Segment part 125
                                                   Segment part 138
                                                   Segment part 30
                                                   Segment part 36
                                                   Segment part 37
                                                   Segment part 40
                                                   Segment part 62
                                                   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018673 - 00018746 (0xd4 bytes), align: 0
  Segment part 42.            Intra module refs:   NLDE_ParseMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg           00018673 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018747 - 0001874E (0x8 bytes), align: 0
  Segment part 44.            Intra module refs:   NLDE_BuildFrameControl
                                                   NLDE_DataReqSend
                                                   NLDE_ParseFrameControl
                                                   NLDE_ParseMsg
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001874F - 0001874F (0x1 bytes), align: 0
  Segment part 45.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_SendMsg
                                                   NLME_SetPollRate
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018750 - 00018754 (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   NLDE_BuildMsg
                                                   NLME_RejoinRspCmdProcess
                                                   Segment part 45
                                                   Segment part 62
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018755 - 00018766 (0x12 bytes), align: 0
  Segment part 47.            Intra module refs:   NLDE_BuildMsg
                                                   NLDE_ParseMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018767 - 000187C5 (0x5f bytes), align: 0
  Segment part 48.            Intra module refs:   NLDE_ParseFrameControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseFrameControl
                                   00018767 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000D ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187C6 - 000187CE (0x9 bytes), align: 0
  Segment part 50.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187CF - 000187D2 (0x4 bytes), align: 0
  Segment part 51.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187D3 - 000187DB (0x9 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   Segment part 53
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187DC - 000187E1 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   NLDE_ParseFrameControl
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000187E2 - 00018834 (0x53 bytes), align: 0
  Segment part 54.            Intra module refs:   NLDE_CheckFrameSecurity::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_CheckFrameSecurity
                                   000187E2 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000D ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018835 - 00018917 (0xe3 bytes), align: 0
  Segment part 56.            Intra module refs:   NLDE_ParseMsg2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg2          00018835 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000021 ( 0000000D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018918 - 0001891F (0x8 bytes), align: 0
  Segment part 58.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018920 - 0001892D (0xe bytes), align: 0
  Segment part 59.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001892E - 00018933 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   NLDE_ParseMsg
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018934 - 00018939 (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 130
                                                   Segment part 24
                                                   Segment part 52
                                                   Segment part 60
                                                   Segment part 82
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001893A - 00018940 (0x7 bytes), align: 0
  Segment part 62.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018941 - 0001895A (0x1a bytes), align: 0
  Segment part 63.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001895B - 0001896C (0x12 bytes), align: 0
  Segment part 64.            Intra module refs:   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001896D - 000189AB (0x3f bytes), align: 0
  Segment part 65.            Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189AC - 000189B7 (0xc bytes), align: 0
  Segment part 66.            Intra module refs:   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189B8 - 000189BE (0x7 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 65
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189BF - 000189CE (0x10 bytes), align: 0
  Segment part 68.            Intra module refs:   NLME_GetExtAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetExtAddr         000189BF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000017 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189CF - 000189DB (0xd bytes), align: 0
  Segment part 70.            Intra module refs:   NLME_GetShortAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetShortAddr       000189CF 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189DC - 000189F6 (0x1b bytes), align: 0
  Segment part 72.            Intra module refs:   NLME_GetCoordShortAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetCoordShortAddr
                                   000189DC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000017 ( 00000002 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000189F7 - 000189FF (0x9 bytes), align: 0
  Segment part 74.            Intra module refs:   NLDE_SendMsg
                                                   NLME_GetCoordShortAddr
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018A00 - 00018A07 (0x8 bytes), align: 0
  Segment part 75.            Intra module refs:   NLME_GetCoordExtAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetCoordExtAddr    00018A00 
               calls direct
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018A08 - 00018A25 (0x1e bytes), align: 0
  Segment part 77.            Intra module refs:   NLDE_GetHandle::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_GetHandle          00018A08 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018A26 - 00018B1E (0xf9 bytes), align: 0
  Segment part 79.            Intra module refs:   RTG_UpdateNeighborEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_UpdateNeighborEntry
                                   00018A26 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000001 ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018B1F - 00018B23 (0x5 bytes), align: 0
  Segment part 81.            Intra module refs:   NLDE_DataIndSend
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018B24 - 00018B2B (0x8 bytes), align: 0
  Segment part 82.            Intra module refs:   NLDE_DataIndSend
                                                   Segment part 81
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018B2C - 00018B38 (0xd bytes), align: 0
  Segment part 83.            Intra module refs:   NLME_RejoinRspCmdProcess
                                                   NLME_SetPollRate
                                                   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3AF - 0000E3AF (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018B39 - 00018B92 (0x5a bytes), align: 0
  Segment part 84.            Intra module refs:   NLME_GetNeighborLinkInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetNeighborLinkInfo
                                   00018B39 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000010 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018B93 - 00018BDA (0x48 bytes), align: 0
  Segment part 86.            Intra module refs:   NLME_GetNeighborIndex::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetNeighborIndex   00018B93 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000010 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BDB - 00018BE7 (0xd bytes), align: 0
  Segment part 90.            Intra module refs:   RTG_UpdateNeighborEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018BE8 - 00018C24 (0x3d bytes), align: 0
  Segment part 91.            Intra module refs:   NLME_SetPollRate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetPollRate        00018BE8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C25 - 00018C2E (0xa bytes), align: 0
  Segment part 93.            Intra module refs:   NLDE_CheckFrameSecurity
                                                   NLDE_DataIndSend
                                                   NLME_GetCoordShortAddr
                                                   NLME_GetProtocolVersion
                                                   NLME_GetShortAddr
                                                   NLME_SetBroadcastFilter
                                                   NLME_SetPollRate
                                                   Segment part 96
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C2F - 00018C35 (0x7 bytes), align: 0
  Segment part 94.            Intra module refs:   NLME_SetQueuedPollRate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetQueuedPollRate
                                   00018C2F 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C36 - 00018C3A (0x5 bytes), align: 0
  Segment part 96.            Intra module refs:   NLME_SetQueuedPollRate
                                                   NLME_SetResponseRate
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C3B - 00018C43 (0x9 bytes), align: 0
  Segment part 97.            Intra module refs:   NLME_SetResponseRate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetResponseRate    00018C3B 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C44 - 00018C4D (0xa bytes), align: 0
  Segment part 103.           Intra module refs:   NLDE_GetHandle
                                                   NLME_CmdDataReqAlloc
                                                   NLME_IsAddressBroadcast
                                                   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
                                                   nwkDB_UserDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C4E - 00018C51 (0x4 bytes), align: 0
  Segment part 104.           Intra module refs:   NLDE_DataReqSend
                                                   NLDE_SendMsg
                                                   NLME_CmdCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C52 - 00018C55 (0x4 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   Segment part 138
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C56 - 00018C5E (0x9 bytes), align: 0
  Segment part 106.           Intra module refs:   Segment part 105
                                                   Segment part 147
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C5F - 00018C64 (0x6 bytes), align: 0
  Segment part 113.           Intra module refs:   NLDE_DataReqSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C65 - 00018C6E (0xa bytes), align: 0
  Segment part 116.           Intra module refs:   nwkNeighborClearEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C6F - 00018C78 (0xa bytes), align: 0
  Segment part 117.           Intra module refs:   NLDE_DataIndSend
                                                   NLDE_DataReqSend
                                                   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018C79 - 00018D0F (0x97 bytes), align: 0
  Segment part 120.           Intra module refs:   NLME_RejoinRspCmdProcess::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RejoinRspCmdProcess
                                   00018C79 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018D10 - 00018D1E (0xf bytes), align: 0
  Segment part 122.           Intra module refs:   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018D1F - 00018D29 (0xb bytes), align: 0
  Segment part 123.           Intra module refs:   NLDE_CheckFrameSecurity
                                                   NLDE_SendMsg
                                                   NLME_CmdCnf
                                                   NLME_GetShortAddr
                                                   NLME_RejoinRspCmdProcess
                                                   nwkDB_UserDataLoad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018D2A - 00018D2F (0x6 bytes), align: 0
  Segment part 124.           Intra module refs:   Segment part 123
                                                   Segment part 18
                                                   Segment part 65
                                                   Segment part 74
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018D30 - 00018D43 (0x14 bytes), align: 0
  Segment part 125.           Intra module refs:   NLDE_DataIndSend
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018D44 - 00018D47 (0x4 bytes), align: 0
  Segment part 129.           Intra module refs:   Segment part 58
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018D48 - 00018D51 (0xa bytes), align: 0
  Segment part 130.           Intra module refs:   Segment part 129
                                                   Segment part 67
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018D52 - 00018D59 (0x8 bytes), align: 0
  Segment part 132.           Intra module refs:   NLDE_ParseMsg
                                                   NLDE_ParseMsg2
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018D5A - 00018D66 (0xd bytes), align: 0
  Segment part 133.           Intra module refs:   NLDE_DataIndSend
                                                   NLME_RejoinRspCmdProcess
                                                   Segment part 132
                                                   Segment part 142
                                                   Segment part 63
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018D67 - 00018D6F (0x9 bytes), align: 0
  Segment part 135.           Intra module refs:   NLDE_DataReqSend
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018D70 - 00018E3F (0xd0 bytes), align: 0
  Segment part 136.           Intra module refs:   NLME_LeaveCmdProcess::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdProcess    00018D70 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000017 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E40 - 00018E4E (0xf bytes), align: 0
  Segment part 138.           Intra module refs:   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018E4F - 00018ED6 (0x88 bytes), align: 0
  Segment part 139.           Intra module refs:   NLME_LeaveCmdCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdCnf        00018E4F 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000021 ( 00000017 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018ED7 - 00018EE2 (0xc bytes), align: 0
  Segment part 141.           Intra module refs:   NLME_LeaveCmdCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018EE3 - 00018EF1 (0xf bytes), align: 0
  Segment part 142.           Intra module refs:   NLME_LeaveCmdCnf
                                                   NLME_LeaveCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018EF2 - 00018F7A (0x89 bytes), align: 0
  Segment part 143.           Intra module refs:   NLME_CmdCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdCnf             00018EF2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000021 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018F7B - 00018F7F (0x5 bytes), align: 0
  Segment part 145.           Intra module refs:   NLME_CmdCnf
                                                   NLME_GetNeighborIndex
                                                   NLME_GetNeighborLinkInfo
                                                   nwkNeighborClearEntry
                                                   nwkNeighborInitTable
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018F80 - 00018F83 (0x4 bytes), align: 0
  Segment part 146.           Intra module refs:   NLME_CmdCnf
                                                   NLME_RejoinRspCmdProcess
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018F84 - 00018F8A (0x7 bytes), align: 0
  Segment part 147.           Intra module refs:   Segment part 146
                                                   Segment part 24
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018F8B - 00018F93 (0x9 bytes), align: 0
  Segment part 148.           Intra module refs:   NLDE_SendMsg
                                                   NLME_CmdCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018F94 - 00018FB7 (0x24 bytes), align: 0
  Segment part 151.           Intra module refs:   NLME_CmdDataReqAlloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdDataReqAlloc    00018F94 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000011 ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018FB8 - 00018FE0 (0x29 bytes), align: 0
  Segment part 153.           Intra module refs:   NLME_GetProtocolVersion::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetProtocolVersion
                                   00018FB8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000001 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018FE1 - 00018FFE (0x1e bytes), align: 0
  Segment part 159.           Intra module refs:   NLME_SetBroadcastFilter::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetBroadcastFilter
                                   00018FE1 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018FFF - 00019042 (0x44 bytes), align: 0
  Segment part 161.           Intra module refs:   NLME_IsAddressBroadcast::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_IsAddressBroadcast
                                   00018FFF 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000017 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019043 - 00019045 (0x3 bytes), align: 0
  Segment part 163.           Intra module refs:   NLME_RemoveChild::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RemoveChild        00019043 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019046 - 0001906D (0x28 bytes), align: 0
  Segment part 165.           Intra module refs:   nwkDB_UserDataLoad::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_UserDataLoad      00019046 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001906E - 00019096 (0x29 bytes), align: 0
  Segment part 167.           Intra module refs:   nwkNeighborClearEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkNeighborClearEntry   0001906E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019097 - 000190BE (0x28 bytes), align: 0
  Segment part 169.           Intra module refs:   nwkNeighborInitTable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkNeighborInitTable    00019097 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001781 - 00001786 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000016C6 - 000016CB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataReqSend::?relay
<<<<<<< HEAD
                                   00001781        NLDE_DataReq (NLMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001787 - 0000178C (0x6 bytes), align: 0
=======
                                   000016C6        NLDE_DataReq (NLMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016CC - 000016D1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_DataIndSend::?relay
<<<<<<< HEAD
                                   00001787        NLDE_DataReq (NLMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000178D - 00001792 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_SendMsg::?relay    0000178D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001793 - 00001798 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildMsg::?relay   00001793 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001799 - 0000179E (0x6 bytes), align: 0
=======
                                   000016CC        NLDE_DataReq (NLMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016D2 - 000016D7 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_SendMsg::?relay    000016D2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016D8 - 000016DD (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   NLDE_DataReqSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildMsg::?relay   000016D8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016DE - 000016E3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.            Intra module refs:   NLDE_BuildMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_BuildFrameControl::?relay
<<<<<<< HEAD
                                   00001799 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000179F - 000017A4 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg::?relay   0000179F        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017A5 - 000017AA (0x6 bytes), align: 0
=======
                                   000016DE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016E4 - 000016E9 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg::?relay   000016E4        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016EA - 000016EF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 49.            Intra module refs:   Segment part 65
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseFrameControl::?relay
<<<<<<< HEAD
                                   000017A5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017AB - 000017B0 (0x6 bytes), align: 0
=======
                                   000016EA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016F0 - 000016F5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 55.            Intra module refs:   NLDE_ParseMsg2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_CheckFrameSecurity::?relay
<<<<<<< HEAD
                                   000017AB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017B1 - 000017B6 (0x6 bytes), align: 0
=======
                                   000016F0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016F6 - 000016FB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 57.            Intra module refs:   NLME_CmdCnf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_ParseMsg2::?relay
<<<<<<< HEAD
                                   000017B1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017B7 - 000017BC (0x6 bytes), align: 0
=======
                                   000016F6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000016FC - 00001701 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 69.            Intra module refs:   NLME_LeaveCmdProcess
                                                   NLME_RejoinRspCmdProcess
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetExtAddr::?relay
<<<<<<< HEAD
                                   000017B7        APS_GetBind (APS)
=======
                                   000016FC        APS_GetBind (APS)
>>>>>>> develop
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   Segment part 41 (APSMEDE)
                                                   ZDApp_Init (ZDApp)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   bindAddrMgrLocalLoad (BindingTable)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000017BD - 000017C2 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001702 - 00001707 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetShortAddr::?relay
<<<<<<< HEAD
                                   000017BD        AF_DataRequest (AF)
=======
                                   00001702        AF_DataRequest (AF)
>>>>>>> develop
                                                   APSDE_DataReq (APSMEDE)
                                                   AXD_HandleKeys (AXD)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000017C3 - 000017C8 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001708 - 0000170D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 73.            Intra module refs:   NLME_LeaveCmdProcess
                                                   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetCoordShortAddr::?relay
<<<<<<< HEAD
                                   000017C3        APSME_LookupNwkAddr (APSMEDE)
=======
                                   00001708        APSME_LookupNwkAddr (APSMEDE)
>>>>>>> develop
                                                   ZDO_LeaveInd (ZDApp)
                                                   bindAddrMgrLocalLoad (BindingTable)
                                                   nwk_data_req_send (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000017C9 - 000017CE (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000170E - 00001713 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetCoordExtAddr::?relay
<<<<<<< HEAD
                                   000017C9        APSME_LookupNwkAddr (APSMEDE)
                                                   bindAddrMgrLocalLoad (BindingTable)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017CF - 000017D4 (0x6 bytes), align: 0
=======
                                   0000170E        APSME_LookupNwkAddr (APSMEDE)
                                                   bindAddrMgrLocalLoad (BindingTable)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001714 - 00001719 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLDE_GetHandle::?relay
<<<<<<< HEAD
                                   000017CF        NLDE_DataReqAlloc (NLMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017D5 - 000017DA (0x6 bytes), align: 0
=======
                                   00001714        NLDE_DataReqAlloc (NLMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000171A - 0000171F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RTG_UpdateNeighborEntry::?relay
<<<<<<< HEAD
                                   000017D5        Segment part 88 (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017DB - 000017E0 (0x6 bytes), align: 0
=======
                                   0000171A        Segment part 88 (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001720 - 00001725 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 85.            Intra module refs:   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetNeighborLinkInfo::?relay
<<<<<<< HEAD
                                   000017DB        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017E1 - 000017E6 (0x6 bytes), align: 0
=======
                                   00001720        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001726 - 0000172B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 87.            Intra module refs:   RTG_UpdateNeighborEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetNeighborIndex::?relay
<<<<<<< HEAD
                                   000017E1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017E7 - 000017EC (0x6 bytes), align: 0
=======
                                   00001726 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000172C - 00001731 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetPollRate::?relay
<<<<<<< HEAD
                                   000017E7        ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017ED - 000017F2 (0x6 bytes), align: 0
=======
                                   0000172C        ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001732 - 00001737 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetQueuedPollRate::?relay
<<<<<<< HEAD
                                   000017ED        ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017F3 - 000017F8 (0x6 bytes), align: 0
=======
                                   00001732        ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001738 - 0000173D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 98.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetResponseRate::?relay
<<<<<<< HEAD
                                   000017F3        NLME_ReJoinRequest (NLMEDE)
=======
                                   00001738        NLME_ReJoinRequest (NLMEDE)
>>>>>>> develop
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000017F9 - 000017FE (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000173E - 00001743 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 121.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RejoinRspCmdProcess::?relay
<<<<<<< HEAD
                                   000017F9        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017FF - 00001804 (0x6 bytes), align: 0
=======
                                   0000173E        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001744 - 00001749 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 137.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdProcess::?relay
<<<<<<< HEAD
                                   000017FF        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001805 - 0000180A (0x6 bytes), align: 0
=======
                                   00001744        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000174A - 0000174F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 140.           Intra module refs:   NLME_CmdCnf
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_LeaveCmdCnf::?relay
<<<<<<< HEAD
                                   00001805 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000180B - 00001810 (0x6 bytes), align: 0
  Segment part 144.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdCnf::?relay     0000180B        nwk_data_cnf_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001811 - 00001816 (0x6 bytes), align: 0
=======
                                   0000174A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001750 - 00001755 (0x6 bytes), align: 0
  Segment part 144.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdCnf::?relay     00001750        nwk_data_cnf_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001756 - 0000175B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 152.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_CmdDataReqAlloc::?relay
<<<<<<< HEAD
                                   00001811        NLME_ReJoinRequest (NLMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001817 - 0000181C (0x6 bytes), align: 0
=======
                                   00001756        NLME_ReJoinRequest (NLMEDE)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000175C - 00001761 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 154.           Intra module refs:   NLDE_BuildFrameControl
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_GetProtocolVersion::?relay
<<<<<<< HEAD
                                   00001817        MT_ProcessSerialCommand (MTEL)
                                                   nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000181D - 00001822 (0x6 bytes), align: 0
=======
                                   0000175C        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001762 - 00001767 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 160.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_SetBroadcastFilter::?relay
<<<<<<< HEAD
                                   0000181D        ZDApp_Init (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001823 - 00001828 (0x6 bytes), align: 0
=======
                                   00001762        ZDApp_Init (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001768 - 0000176D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 162.           Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_IsAddressBroadcast::?relay
<<<<<<< HEAD
                                   00001823        AF_DataRequest (AF)
=======
                                   00001768        AF_DataRequest (AF)
>>>>>>> develop
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001829 - 0000182E (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000176E - 00001773 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 164.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NLME_RemoveChild::?relay
<<<<<<< HEAD
                                   00001829        ZDApp_LeaveUpdate (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000182F - 00001834 (0x6 bytes), align: 0
=======
                                   0000176E        ZDApp_LeaveUpdate (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001774 - 00001779 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 166.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkDB_UserDataLoad::?relay
<<<<<<< HEAD
                                   0000182F        nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001835 - 0000183A (0x6 bytes), align: 0
=======
                                   00001774        nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000177A - 0000177F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 168.           Intra module refs:   nwkNeighborInitTable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkNeighborClearEntry::?relay
<<<<<<< HEAD
                                   00001835 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000183B - 00001840 (0x6 bytes), align: 0
=======
                                   0000177A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001780 - 00001785 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 170.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkNeighborInitTable::?relay
<<<<<<< HEAD
                                   0000183B        nwk_init (nwk)
=======
                                   00001780        nwk_init (nwk)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : reflecttrack

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3B0 - 0000E3B1 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   reflectTrack_AddNewEntry
                                                   reflectTrack_AddToEnd
                                                   reflectTrack_FindHandle
                                                   reflectTrack_NumEntries
                                                   reflectTrack_RemoveEntry
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE11 - 0000EE11 (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EDAC - 0000EDAC (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 7.             Intra module refs:   reflectTrack_AddNewEntry
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3B2 - 0000E3B2 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   reflectTrack_AddNewEntry
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE12 - 0000EE12 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   reflectTracking_GetMaxSimultaneousAdjusted
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE13 - 0000EE13 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   reflectTracking_GetMaxIndirectAdjusted
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B16 - 00039B39 (0x24 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EDAD - 0000EDAD (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   reflectTracking_GetMaxSimultaneousAdjusted
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDAE - 0000EDAE (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   reflectTracking_GetMaxIndirectAdjusted
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F00F - 0002F032 (0x24 bytes), align: 0
>>>>>>> develop
  Segment part 20.            Intra module refs:   reflectTracking_GetMaxSimultaneousAdjusted::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTracking_GetMaxSimultaneousAdjusted
<<<<<<< HEAD
                                   00039B16 
=======
                                   0002F00F 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B3A - 00039B42 (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   reflectTrack_AddToEnd
                                                   reflectTrack_NumEntries
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B43 - 00039B66 (0x24 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F033 - 0002F03B (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   reflectTrack_AddToEnd
                                                   reflectTrack_NumEntries
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F03C - 0002F05F (0x24 bytes), align: 0
>>>>>>> develop
  Segment part 27.            Intra module refs:   reflectTracking_GetMaxIndirectAdjusted::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTracking_GetMaxIndirectAdjusted
<<<<<<< HEAD
                                   00039B43 
=======
                                   0002F03C 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039B67 - 00039BCC (0x66 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F060 - 0002F0C5 (0x66 bytes), align: 0
>>>>>>> develop
  Segment part 29.            Intra module refs:   reflectTrack_GetNewEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_GetNewEntry
<<<<<<< HEAD
                                   00039B67 
=======
                                   0002F060 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039BCD - 00039C16 (0x4a bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F0C6 - 0002F10F (0x4a bytes), align: 0
>>>>>>> develop
  Segment part 31.            Intra module refs:   reflectTrack_AddNewEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_AddNewEntry
<<<<<<< HEAD
                                   00039BCD 
=======
                                   0002F0C6 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039C17 - 00039C34 (0x1e bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F110 - 0002F12D (0x1e bytes), align: 0
>>>>>>> develop
  Segment part 33.            Intra module refs:   reflectTrack_NumEntries::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_NumEntries
<<<<<<< HEAD
                                   00039C17 
=======
                                   0002F110 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039C35 - 00039CB1 (0x7d bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F12E - 0002F1AA (0x7d bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   reflectTrack_RemoveEntry::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_RemoveEntry
<<<<<<< HEAD
                                   00039C35 
=======
                                   0002F12E 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039CB2 - 00039CBB (0xa bytes), align: 0
  Segment part 37.            Intra module refs:   reflectTrack_RemoveEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039CBC - 00039CFB (0x40 bytes), align: 0
  Segment part 38.            Intra module refs:   reflectTrack_AddToEnd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_AddToEnd   00039CBC 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F1AB - 0002F1B4 (0xa bytes), align: 0
  Segment part 37.            Intra module refs:   reflectTrack_RemoveEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F1B5 - 0002F1F4 (0x40 bytes), align: 0
  Segment part 38.            Intra module refs:   reflectTrack_AddToEnd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_AddToEnd   0002F1B5 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039CFC - 00039D01 (0x6 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F1F5 - 0002F1FA (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 42.            Intra module refs:   reflectTrack_AddNewEntry
                                                   reflectTrack_FindHandle
                                                   reflectTrack_NumEntries
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D02 - 00039D37 (0x36 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F1FB - 0002F230 (0x36 bytes), align: 0
>>>>>>> develop
  Segment part 43.            Intra module refs:   reflectTrack_FindHandle::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_FindHandle
<<<<<<< HEAD
                                   00039D02 
=======
                                   0002F1FB 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D38 - 00039D5E (0x27 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F231 - 0002F257 (0x27 bytes), align: 0
>>>>>>> develop
  Segment part 45.            Intra module refs:   reflectTrack_UpdateOption::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_UpdateOption
<<<<<<< HEAD
                                   00039D38 
=======
                                   0002F231 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D5F - 00039D63 (0x5 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F258 - 0002F25C (0x5 bytes), align: 0
>>>>>>> develop
  Segment part 47.            Intra module refs:   reflectTrack_FindHandle
                                                   reflectTrack_RemoveEntry
                                                   reflectTrack_UpdateOption
                                                   reflectTracking_GetMaxIndirectAdjusted
                                                   reflectTracking_GetMaxSimultaneousAdjusted
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D64 - 00039D71 (0xe bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 62
                                                   reflectTrack_UpdateOption
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D72 - 00039D75 (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   reflectTrack_FindHandle
                                                   reflectTrack_UpdateOption
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D76 - 00039D81 (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D82 - 00039D87 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   reflectTrack_AddToEnd
                                                   reflectTrack_RemoveEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D88 - 00039D8F (0x8 bytes), align: 0
  Segment part 56.            Intra module refs:   reflectTracking_GetMaxIndirectAdjusted
                                                   reflectTracking_GetMaxSimultaneousAdjusted
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039D90 - 00039DA8 (0x19 bytes), align: 0
  Segment part 57.            Intra module refs:   reflectTracking_GetMaxIndirectAdjusted
                                                   reflectTracking_GetMaxSimultaneousAdjusted
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039DA9 - 00039DB6 (0xe bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F25D - 0002F26A (0xe bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 62
                                                   reflectTrack_UpdateOption
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F26B - 0002F26E (0x4 bytes), align: 0
  Segment part 49.            Intra module refs:   reflectTrack_FindHandle
                                                   reflectTrack_UpdateOption
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F26F - 0002F27A (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   Segment part 56
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F27B - 0002F280 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   reflectTrack_AddToEnd
                                                   reflectTrack_RemoveEntry
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F281 - 0002F288 (0x8 bytes), align: 0
  Segment part 56.            Intra module refs:   reflectTracking_GetMaxIndirectAdjusted
                                                   reflectTracking_GetMaxSimultaneousAdjusted
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F289 - 0002F2A1 (0x19 bytes), align: 0
  Segment part 57.            Intra module refs:   reflectTracking_GetMaxIndirectAdjusted
                                                   reflectTracking_GetMaxSimultaneousAdjusted
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F2A2 - 0002F2AF (0xe bytes), align: 0
>>>>>>> develop
  Segment part 62.            Intra module refs:   reflectTrack_FindHandle
                                                   reflectTrack_UpdateOption
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 0000234E - 0000234E (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000234F - 0000234F (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002350 - 00002350 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001841 - 00001846 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00002197 - 00002197 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002198 - 00002198 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002199 - 00002199 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001786 - 0000178B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTracking_GetMaxSimultaneousAdjusted::?relay
<<<<<<< HEAD
                                   00001841        APS_Reflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001847 - 0000184C (0x6 bytes), align: 0
=======
                                   00001786        APS_Reflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000178C - 00001791 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTracking_GetMaxIndirectAdjusted::?relay
<<<<<<< HEAD
                                   00001847        APS_Reflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000184D - 00001852 (0x6 bytes), align: 0
=======
                                   0000178C        APS_Reflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001792 - 00001797 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_GetNewEntry::?relay
<<<<<<< HEAD
                                   0000184D        APS_DataIndReflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001853 - 00001858 (0x6 bytes), align: 0
=======
                                   00001792        APS_DataIndReflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001798 - 0000179D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_AddNewEntry::?relay
<<<<<<< HEAD
                                   00001853        APS_DataIndReflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001859 - 0000185E (0x6 bytes), align: 0
=======
                                   00001798        APS_DataIndReflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000179E - 000017A3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 34.            Intra module refs:   reflectTrack_AddNewEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_NumEntries::?relay
<<<<<<< HEAD
                                   00001859 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000185F - 00001864 (0x6 bytes), align: 0
=======
                                   0000179E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017A4 - 000017A9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.            Intra module refs:   reflectTrack_AddNewEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_RemoveEntry::?relay
<<<<<<< HEAD
                                   0000185F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001865 - 0000186A (0x6 bytes), align: 0
=======
                                   000017A4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017AA - 000017AF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.            Intra module refs:   reflectTrack_AddNewEntry
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_AddToEnd::?relay
<<<<<<< HEAD
                                   00001865 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000186B - 00001870 (0x6 bytes), align: 0
=======
                                   000017AA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017B0 - 000017B5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_FindHandle::?relay
<<<<<<< HEAD
                                   0000186B        APS_ReReflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001871 - 00001876 (0x6 bytes), align: 0
=======
                                   000017B0        APS_ReReflect (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017B6 - 000017BB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reflectTrack_UpdateOption::?relay
<<<<<<< HEAD
                                   00001871        APS_ReReflect (APS)
=======
                                   000017B6        APS_ReReflect (APS)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ssp

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3B3 - 0000E3B4 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   SSP_NwkSecurity
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_NwkSecurityHook     0000E3B3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3B5 - 0000E3B6 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   SSP_GetMicLen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_GetMicLenHook       0000E3B5 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038926 - 0003892C (0x7 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 83
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003892D - 00038947 (0x1b bytes), align: 0
  Segment part 80.            Intra module refs:   SSP_NwkSecurity::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_NwkSecurity         0003892D 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038948 - 0003894E (0x7 bytes), align: 0
  Segment part 82.            Intra module refs:   SSP_GetMicLen
                                                   SSP_NwkSecurity
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003894F - 00038954 (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   SSP_GetMicLen
                                                   SSP_NwkSecurity
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038955 - 00038971 (0x1d bytes), align: 0
  Segment part 84.            Intra module refs:   SSP_GetMicLen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_GetMicLen           00038955 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000024 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001877 - 0000187C (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000017BC - 000017C1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_NwkSecurity::?relay
<<<<<<< HEAD
                                   00001877        NLDE_BuildMsg (nwk_util)
=======
                                   000017BC        NLDE_BuildMsg (nwk_util)
>>>>>>> develop
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000187D - 00001882 (0x6 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_GetMicLen::?relay   0000187D        NLDE_ParseMsg2 (nwk_util)
=======
  Relative segment, address: CODE 000017C2 - 000017C7 (0x6 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SSP_GetMicLen::?relay   000017C2        NLDE_ParseMsg2 (nwk_util)
>>>>>>> develop
                                                   Segment part 47 (nwk_util)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Libraries\TI2430DB\bin\Security.lib
  LIBRARY MODULE, NAME : hal_aes

  SEGMENTS IN THE MODULE
  ======================
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B1F9 - 0003B23C (0x44 bytes), align: 0
  Segment part 10.            Intra module refs:   aesDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit              0003B1F9 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FF95 - 0002FFD8 (0x44 bytes), align: 0
  Segment part 10.            Intra module refs:   aesDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit              0002FF95 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B23D - 0003B243 (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   HalAesInit
                                                   aesDmaInit
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B244 - 0003B24D (0xa bytes), align: 0
  Segment part 20.            Intra module refs:   HalAesInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit              0003B244 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFD9 - 0002FFDF (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   HalAesInit
                                                   aesDmaInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFE0 - 0002FFE9 (0xa bytes), align: 0
  Segment part 20.            Intra module refs:   HalAesInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit              0002FFE0 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001883 - 00001888 (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   HalAesInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit::?relay      00001883 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001889 - 0000188E (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit::?relay      00001889        HalDriverInit (hal_drivers)
=======
  Relative segment, address: CODE 000017C8 - 000017CD (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   HalAesInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aesDmaInit::?relay      000017C8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017CE - 000017D3 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAesInit::?relay      000017CE        HalDriverInit (hal_drivers)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Libraries\TIMAC\bin\TIMAC-CC2430.lib
  LIBRARY MODULE, NAME : mac_coord

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE14 - 0000EE17 (0x4 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EDAF - 0000EDB2 (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           __Constant_30           0000EE14 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002351 - 00002354 (0x4 bytes), align: 0
=======
           __Constant_30           0000EDAF 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000219A - 0000219D (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 12.            Intra module refs:   __Constant_30

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_data

  SEGMENTS IN THE MODULE
  ======================
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002513 - 0000251A (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_McpsDataAlloc
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000251B - 00002525 (0xb bytes), align: 0
  Segment part 8.             Intra module refs:   macAllocTxBuffer
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002526 - 00002530 (0xb bytes), align: 0
  Segment part 9.             Intra module refs:   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameSuccess       00002526 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002531 - 0000253B (0xb bytes), align: 0
=======
  Relative segment, address: CODE 00002270 - 00002277 (0x8 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_McpsDataAlloc
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002278 - 00002282 (0xb bytes), align: 0
  Segment part 8.             Intra module refs:   macAllocTxBuffer
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002283 - 0000228D (0xb bytes), align: 0
  Segment part 9.             Intra module refs:   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameSuccess       00002283 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000228E - 00002298 (0xb bytes), align: 0
>>>>>>> develop
  Segment part 10.            Intra module refs:   macAllocTxBuffer
                                                   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macTxFrameFailed        00002531 
=======
           macTxFrameFailed        0000228E 
>>>>>>> develop
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3B7 - 0000E3BF (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   MAC_McpsDataReq
                                                   macDataReset
                                                   macDataRxMemAlloc
                                                   macDataTxEnqueue
                                                   macDataTxSend
                                                   macRxCheckPendingCallback
                                                   macRxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macData                 0000E3B7        macEventLoop (mac_main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C0 - 0000E3C1 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 65
                                                   Segment part 68
                                                   Segment part 70
                                                   macDataTxSend
                                                   macRxCheckPendingCallback
                                                   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pMacDataTx              0000E3C0        macTxFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE18 - 0000EE19 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxIndirect       0000EE18 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE1A - 0000EE1B (0x2 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EDB3 - 0000EDB4 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxIndirect       0000EDB3 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDB5 - 0000EDB6 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 15.            Intra module refs:   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRequeueIndirect
<<<<<<< HEAD
                                   0000EE1A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE1C - 0000EE1D (0x2 bytes), align: 0
=======
                                   0000EDB5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDB7 - 0000EDB8 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 17.            Intra module refs:   macRxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxBeaconCritical
<<<<<<< HEAD
                                   0000EE1C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE1E - 0000EE1F (0x2 bytes), align: 0
=======
                                   0000EDB7 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDB9 - 0000EDBA (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 19.            Intra module refs:   macDataTxComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxBeaconComplete
<<<<<<< HEAD
                                   0000EE1E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE20 - 0000EE21 (0x2 bytes), align: 0
  Segment part 21.            Intra module refs:   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSetSched         0000EE20 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE22 - 0000EE23 (0x2 bytes), align: 0
  Segment part 23.            Intra module refs:   macDataTxSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataCheckSched       0000EE22 
=======
                                   0000EDB9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDBB - 0000EDBC (0x2 bytes), align: 0
  Segment part 21.            Intra module refs:   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSetSched         0000EDBB 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDBD - 0000EDBE (0x2 bytes), align: 0
  Segment part 23.            Intra module refs:   macDataTxSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataCheckSched       0000EDBD 
>>>>>>> develop
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C2 - 0000E3C3 (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   macDataTxTimeAvailable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataCheckTxTime      0000E3C2 
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE24 - 0000EE25 (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataBeaconRequeue    0000EE24 
=======
  Relative segment, address: XDATA 0000EDBF - 0000EDC0 (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataBeaconRequeue    0000EDBF 
>>>>>>> develop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000289BA - 000289FE (0x45 bytes), align: 0
  Segment part 28.            Intra module refs:   macDataReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataReset            000289BA 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000289FF - 00028A56 (0x58 bytes), align: 0
  Segment part 30.            Intra module refs:   macAllocTxBuffer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAllocTxBuffer        000289FF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A57 - 00028A5B (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   MAC_McpsDataAlloc
                                                   macAllocTxBuffer
                                                   macDataTxSend
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A5C - 00028A65 (0xa bytes), align: 0
  Segment part 33.            Intra module refs:   MAC_McpsDataReq
                                                   macAllocTxBuffer
                                                   macDataTxComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028A66 - 00028AB6 (0x51 bytes), align: 0
  Segment part 34.            Intra module refs:   macFrameDuration::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macFrameDuration        00028A66 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028AB7 - 00028AEF (0x39 bytes), align: 0
  Segment part 36.            Intra module refs:   macRxCheckPendingCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCheckPendingCallback
                                   00028AB7 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028AF0 - 00028B10 (0x21 bytes), align: 0
  Segment part 38.            Intra module refs:   macDataRxMemAlloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxMemAlloc       00028AF0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028B11 - 00028B1A (0xa bytes), align: 0
  Segment part 40.            Intra module refs:   macDataRxMemFree::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxMemFree        00028B11 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028B1B - 00028C25 (0x10b bytes), align: 0
  Segment part 42.            Intra module refs:   macRxCompleteCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCompleteCallback   00028B1B 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028C26 - 00028C32 (0xd bytes), align: 0
  Segment part 44.            Intra module refs:   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028C33 - 00028C4F (0x1d bytes), align: 0
  Segment part 45.            Intra module refs:   macDataTxTimeAvailable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxTimeAvailable
                                   00028C33 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028C50 - 00028C57 (0x8 bytes), align: 0
  Segment part 47.            Intra module refs:   MAC_McpsDataReq
                                                   macApiDataReq
                                                   macCheckSched
                                                   macDataReset
                                                   macDataRxInd
                                                   macDataRxMemAlloc
                                                   macDataRxMemFree
                                                   macDataSend
                                                   macDataTxComplete
                                                   macDataTxTimeAvailable
                                                   macRxCheckPendingCallback
                                                   macSetSched
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028C58 - 00028CC5 (0x6e bytes), align: 0
  Segment part 48.            Intra module refs:   macBuildDataFrame::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildDataFrame       00028C58 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CC6 - 00028CCA (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   macBuildDataFrame
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CCB - 00028CD2 (0x8 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 60
                                                   macBuildDataFrame
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CD3 - 00028CD9 (0x7 bytes), align: 0
  Segment part 52.            Intra module refs:   macApiDataReq
                                                   macBuildDataFrame
                                                   macDataTxComplete
                                                   macDataTxEnqueue
                                                   macDataTxSend
                                                   macSetSched
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CDA - 00028CEC (0x13 bytes), align: 0
  Segment part 53.            Intra module refs:   macCheckSched::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCheckSched           00028CDA 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CED - 00028CFE (0x12 bytes), align: 0
  Segment part 55.            Intra module refs:   macSetSched::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetSched             00028CED 
               is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028CFF - 00028D7F (0x81 bytes), align: 0
  Segment part 57.            Intra module refs:   macDataTxComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxComplete       00028CFF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028D80 - 00028D83 (0x4 bytes), align: 0
  Segment part 59.            Intra module refs:   macDataTxComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028D84 - 00028D8E (0xb bytes), align: 0
  Segment part 60.            Intra module refs:   Segment part 52
                                                   Segment part 59
                                                   Segment part 61
                                                   Segment part 62
                                                   Segment part 73
                                                   Segment part 74
                                                   Segment part 86
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028D8F - 00028D9A (0xc bytes), align: 0
  Segment part 61.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028D9B - 00028DA0 (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   macDataTxComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028DA1 - 00028E58 (0xb8 bytes), align: 0
  Segment part 63.            Intra module refs:   macTxCompleteCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxCompleteCallback   00028DA1 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E59 - 00028E62 (0xa bytes), align: 0
  Segment part 65.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E63 - 00028E6E (0xc bytes), align: 0
  Segment part 66.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E6F - 00028E73 (0x5 bytes), align: 0
  Segment part 67.            Intra module refs:   macRxCheckPendingCallback
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E74 - 00028E7E (0xb bytes), align: 0
  Segment part 68.            Intra module refs:   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E7F - 00028E89 (0xb bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 67
                                                   Segment part 68
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E8A - 00028E95 (0xc bytes), align: 0
  Segment part 70.            Intra module refs:   macDataTxComplete
                                                   macDataTxEnqueue
                                                   macDataTxSend
                                                   macDataTxTimeAvailable
                                                   macRxCompleteCallback
                                                   macTxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028E96 - 00028F8F (0xfa bytes), align: 0
  Segment part 71.            Intra module refs:   macDataTxSend::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxSend           00028E96 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028F90 - 00028F97 (0x8 bytes), align: 0
  Segment part 73.            Intra module refs:   macBuildDataFrame
                                                   macDataTxSend
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028F98 - 00028FA1 (0xa bytes), align: 0
  Segment part 74.            Intra module refs:   macDataTxSend
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028FA2 - 0002902A (0x89 bytes), align: 0
  Segment part 75.            Intra module refs:   macDataTxEnqueue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxEnqueue        00028FA2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002902B - 00029033 (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   macDataTxEnqueue
                                                   macRxCompleteCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029034 - 0002903D (0xa bytes), align: 0
  Segment part 78.            Intra module refs:   macDataSend::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSend             00029034 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002903E - 000290A7 (0x6a bytes), align: 0
  Segment part 80.            Intra module refs:   macApiDataReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDataReq           0002903E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000290A8 - 000290B8 (0x11 bytes), align: 0
  Segment part 82.            Intra module refs:   macDataRxInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxInd            000290A8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000290B9 - 000290F8 (0x40 bytes), align: 0
  Segment part 84.            Intra module refs:   MAC_McpsDataReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_McpsDataReq         000290B9 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000290F9 - 00029101 (0x9 bytes), align: 0
  Segment part 86.            Intra module refs:   MAC_McpsDataReq
                                                   macApiDataReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029102 - 0002913F (0x3e bytes), align: 0
  Segment part 87.            Intra module refs:   MAC_McpsDataAlloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_McpsDataAlloc       00029102 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029140 - 00029155 (0x16 bytes), align: 0
  Segment part 89.            Intra module refs:   MAC_McpsDataAlloc
                                                   macAllocTxBuffer
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 00002355 - 00002356 (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   macDataTxIndirect
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002357 - 00002358 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   macDataRequeueIndirect
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002359 - 0000235A (0x2 bytes), align: 0
  Segment part 18.            Intra module refs:   macDataRxBeaconCritical
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000235B - 0000235C (0x2 bytes), align: 0
  Segment part 20.            Intra module refs:   macDataTxBeaconComplete
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000235D - 0000235E (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   macDataSetSched
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000235F - 00002360 (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   macDataCheckSched
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002361 - 00002362 (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   macDataBeaconRequeue
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000188F - 00001894 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataReset::?relay    0000188F        MAC_MlmeResetReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001895 - 0000189A (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000219E - 0000219F (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   macDataTxIndirect
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021A0 - 000021A1 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   macDataRequeueIndirect
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021A2 - 000021A3 (0x2 bytes), align: 0
  Segment part 18.            Intra module refs:   macDataRxBeaconCritical
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021A4 - 000021A5 (0x2 bytes), align: 0
  Segment part 20.            Intra module refs:   macDataTxBeaconComplete
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021A6 - 000021A7 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   macDataSetSched
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021A8 - 000021A9 (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   macDataCheckSched
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021AA - 000021AB (0x2 bytes), align: 0
  Segment part 27.            Intra module refs:   macDataBeaconRequeue
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017D4 - 000017D9 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataReset::?relay    000017D4        MAC_MlmeResetReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017DA - 000017DF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAllocTxBuffer::?relay
<<<<<<< HEAD
                                   00001895        macBuildCommonReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000189B - 000018A0 (0x6 bytes), align: 0
=======
                                   000017DA        macBuildCommonReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017E0 - 000017E5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   macDataTxSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macFrameDuration::?relay
<<<<<<< HEAD
                                   0000189B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018A1 - 000018A6 (0x6 bytes), align: 0
=======
                                   000017E0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017E6 - 000017EB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCheckPendingCallback::?relay
<<<<<<< HEAD
                                   000018A1        rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018A7 - 000018AC (0x6 bytes), align: 0
=======
                                   000017E6        rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017EC - 000017F1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxMemAlloc::?relay
<<<<<<< HEAD
                                   000018A7        rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018AD - 000018B2 (0x6 bytes), align: 0
=======
                                   000017EC        rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017F2 - 000017F7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxMemFree::?relay
<<<<<<< HEAD
                                   000018AD        rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018B3 - 000018B8 (0x6 bytes), align: 0
=======
                                   000017F2        rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017F8 - 000017FD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCompleteCallback::?relay
<<<<<<< HEAD
                                   000018B3        rxFcsIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018B9 - 000018BE (0x6 bytes), align: 0
=======
                                   000017F8        rxFcsIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000017FE - 00001803 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxTimeAvailable::?relay
<<<<<<< HEAD
                                   000018B9        txCsmaGo (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018BF - 000018C4 (0x6 bytes), align: 0
=======
                                   000017FE        txCsmaGo (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001804 - 00001809 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 49.            Intra module refs:   macApiDataReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildDataFrame::?relay
<<<<<<< HEAD
                                   000018BF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018C5 - 000018CA (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCheckSched::?relay   000018C5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018CB - 000018D0 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetSched::?relay     000018CB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018D1 - 000018D6 (0x6 bytes), align: 0
=======
                                   00001804 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000180A - 0000180F (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCheckSched::?relay   0000180A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001810 - 00001815 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetSched::?relay     00001810 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001816 - 0000181B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 58.            Intra module refs:   macDataTxEnqueue
                                                   macTxCompleteCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxComplete::?relay
<<<<<<< HEAD
                                   000018D1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018D7 - 000018DC (0x6 bytes), align: 0
=======
                                   00001816 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000181C - 00001821 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxCompleteCallback::?relay
<<<<<<< HEAD
                                   000018D7        txComplete (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018DD - 000018E2 (0x6 bytes), align: 0
=======
                                   0000181C        txComplete (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001822 - 00001827 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 72.            Intra module refs:   macDataSend
                                                   macDataTxEnqueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macDataTxSend::?relay   000018DD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018E3 - 000018E8 (0x6 bytes), align: 0
=======
           macDataTxSend::?relay   00001822 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001828 - 0000182D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 76.            Intra module refs:   macBuildDataFrame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataTxEnqueue::?relay
<<<<<<< HEAD
                                   000018E3        macApiAssociateReq (mac_device)
=======
                                   00001828        macApiAssociateReq (mac_device)
>>>>>>> develop
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDisassociateReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000018E9 - 000018EE (0x6 bytes), align: 0
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSend::?relay     000018E9        macMgmtAction1 (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018EF - 000018F4 (0x6 bytes), align: 0
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDataReq::?relay   000018EF        macMgmtAction1 (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018F5 - 000018FA (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxInd::?relay    000018F5        Segment part 43 (mac_device)
                                                   macMgmtAction1 (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018FB - 00001900 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000182E - 00001833 (0x6 bytes), align: 0
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataSend::?relay     0000182E        macMgmtAction1 (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001834 - 00001839 (0x6 bytes), align: 0
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDataReq::?relay   00001834        macMgmtAction1 (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000183A - 0000183F (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDataRxInd::?relay    0000183A        Segment part 43 (mac_device)
                                                   macMgmtAction1 (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001840 - 00001845 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_McpsDataReq::?relay
<<<<<<< HEAD
                                   000018FB        ZMacDataReq (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001901 - 00001906 (0x6 bytes), align: 0
=======
                                   00001840        ZMacDataReq (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001846 - 0000184B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_McpsDataAlloc::?relay
<<<<<<< HEAD
                                   00001901        ZMacDataReq (zmac)
=======
                                   00001846        ZMacDataReq (zmac)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_device

  SEGMENTS IN THE MODULE
  ======================
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 0000253C - 00002557 (0x1c bytes), align: 0
  Segment part 6.             Intra module refs:   MAC_InitDevice
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002558 - 00002561 (0xa bytes), align: 0
=======
  Relative segment, address: CODE 00002299 - 000022B4 (0x1c bytes), align: 0
  Segment part 6.             Intra module refs:   MAC_InitDevice
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000022B5 - 000022BE (0xa bytes), align: 0
>>>>>>> develop
  Segment part 7.             Intra module refs:   MAC_InitDevice
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3C4 - 0000E3D7 (0x14 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 38
                                                   Segment part 46
                                                   Segment part 55
                                                   Segment part 62
                                                   macApiAssociateReq
                                                   macApiPollReq
                                                   macAssocDataReq
                                                   macAssocDataReqComplete
                                                   macAssocFailed
                                                   macAssocFrameResponseTimeout
                                                   macDeviceReset
                                                   macPollDataReqComplete
                                                   macRxAssocRsp
                                                   macStartFrameResponseTimer
                                                   macStartResponseTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDevice               0000E3C4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000297FB - 0002982A (0x30 bytes), align: 0
  Segment part 11.            Intra module refs:   macDeviceReset::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macDeviceReset          000297FB 
               is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002982B - 0002985A (0x30 bytes), align: 0
  Segment part 13.            Intra module refs:   macAssociateCnf::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macAssociateCnf         0002982B 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 0000000F )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002985B - 0002987A (0x20 bytes), align: 0
  Segment part 15.            Intra module refs:   macPollCnf::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macPollCnf              0002985B 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 00000002 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002987B - 00029889 (0xf bytes), align: 0
  Segment part 17.            Intra module refs:   macAssociateCnf
                                                   macPollCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002988A - 000298C2 (0x39 bytes), align: 0
  Segment part 18.            Intra module refs:   macStartResponseTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartResponseTimer   0002988A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000298C3 - 00029921 (0x5f bytes), align: 0
  Segment part 20.            Intra module refs:   macStartFrameResponseTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartFrameResponseTimer
                                   000298C3 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000042 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029922 - 00029A22 (0x101 bytes), align: 0
  Segment part 22.            Intra module refs:   macApiAssociateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiAssociateReq      00029922 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029A23 - 00029A2A (0x8 bytes), align: 0
  Segment part 24.            Intra module refs:   MAC_MlmeAssociateReq
                                                   macApiAssociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029A2B - 00029A34 (0xa bytes), align: 0
  Segment part 25.            Intra module refs:   macApiAssociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029A35 - 00029A3C (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   Segment part 24
                                                   Segment part 25
                                                   macApiAssociateReq
                                                   macApiPollReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029A3D - 00029A86 (0x4a bytes), align: 0
  Segment part 27.            Intra module refs:   macAssocDataReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataReq         00029A3D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029A87 - 00029AB5 (0x2f bytes), align: 0
  Segment part 29.            Intra module refs:   macAssocDataReqComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataReqComplete
                                   00029A87 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029AB6 - 00029B1D (0x68 bytes), align: 0
  Segment part 31.            Intra module refs:   macRxAssocRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAssocRsp           00029AB6 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029B1E - 00029B25 (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   macApiPollReq
                                                   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029B26 - 00029B4D (0x28 bytes), align: 0
  Segment part 34.            Intra module refs:   macAssocFrameResponseTimeout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocFrameResponseTimeout
                                   00029B26 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029B4E - 00029B6E (0x21 bytes), align: 0
  Segment part 36.            Intra module refs:   macAssocFailed::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocFailed          00029B4E 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029B6F - 00029B79 (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   macAssocFailed
                                                   macRxAssocRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029B7A - 00029B87 (0xe bytes), align: 0
  Segment part 39.            Intra module refs:   macAssocRxDisassoc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocRxDisassoc      00029B7A 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029B88 - 00029BC9 (0x42 bytes), align: 0
  Segment part 41.            Intra module refs:   macAssocDataRxInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataRxInd       00029B88 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029BCA - 00029BD2 (0x9 bytes), align: 0
  Segment part 43.            Intra module refs:   macAssocDataRxInd
                                                   macPollDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029BD3 - 00029BDE (0xc bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 33
                                                   Segment part 43
                                                   macApiAssociateReq
                                                   macAssocDataReqComplete
                                                   macAssocFailed
                                                   macAssocFrameResponseTimeout
                                                   macAssocRxDisassoc
                                                   macPollDataReqComplete
                                                   macPollFrameResponseTimeout
                                                   macPollRxAssocRsp
                                                   macPollRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029BDF - 00029BE7 (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   macAssocDataReqComplete
                                                   macAssocDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029BE8 - 00029BF5 (0xe bytes), align: 0
  Segment part 46.            Intra module refs:   macAssocDataRxInd
                                                   macPollDataRxInd
                                                   macPollFrameResponseTimeout
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029BF6 - 00029C34 (0x3f bytes), align: 0
  Segment part 47.            Intra module refs:   macApiPollReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPollReq           00029BF6 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029C35 - 00029C57 (0x23 bytes), align: 0
  Segment part 49.            Intra module refs:   macPollDataReqComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollDataReqComplete
                                   00029C35 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029C58 - 00029C68 (0x11 bytes), align: 0
  Segment part 51.            Intra module refs:   macAssocDataReqComplete
                                                   macPollDataReqComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029C69 - 00029C76 (0xe bytes), align: 0
  Segment part 52.            Intra module refs:   macAssocDataReqComplete
                                                   macAssocDataRxInd
                                                   macPollDataReqComplete
                                                   macPollDataRxInd
                                                   macPollFrameResponseTimeout
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029C77 - 00029CA2 (0x2c bytes), align: 0
  Segment part 53.            Intra module refs:   macPollDataRxInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollDataRxInd        00029C77 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029CA3 - 00029CB3 (0x11 bytes), align: 0
  Segment part 55.            Intra module refs:   Segment part 38
                                                   macPollDataRxInd
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029CB4 - 00029CD6 (0x23 bytes), align: 0
  Segment part 56.            Intra module refs:   macPollFrameResponseTimeout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollFrameResponseTimeout
                                   00029CB4 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029CD7 - 00029CE1 (0xb bytes), align: 0
  Segment part 58.            Intra module refs:   macPollRxDisassoc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollRxDisassoc       00029CD7 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029CE2 - 00029CEC (0xb bytes), align: 0
  Segment part 60.            Intra module refs:   macPollRxAssocRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollRxAssocRsp       00029CE2 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029CED - 00029CFF (0x13 bytes), align: 0
  Segment part 62.            Intra module refs:   macPollRxAssocRsp
                                                   macPollRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029D00 - 00029DA0 (0xa1 bytes), align: 0
  Segment part 63.            Intra module refs:   macRxCoordRealign::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCoordRealign       00029D00 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DA1 - 00029DAF (0xf bytes), align: 0
  Segment part 65.            Intra module refs:   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DB0 - 00029DB4 (0x5 bytes), align: 0
  Segment part 66.            Intra module refs:   macApiAssociateReq
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DB5 - 00029DC6 (0x12 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 66
                                                   macRxAssocRsp
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DC7 - 00029DD2 (0xc bytes), align: 0
  Segment part 68.            Intra module refs:   macRxAssocRsp
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DD3 - 00029DDD (0xb bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
                                                   macRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DDE - 00029DE6 (0x9 bytes), align: 0
  Segment part 70.            Intra module refs:   macPanConflictComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPanConflictComplete
                                   00029DDE 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DE7 - 00029DF0 (0xa bytes), align: 0
  Segment part 72.            Intra module refs:   MAC_InitDevice
                                                   MAC_MlmeAssociateReq
                                                   MAC_MlmePollReq
                                                   macAssocDataReq
                                                   macAssociateCnf
                                                   macDeviceReset
                                                   macPanConflictComplete
                                                   macPollCnf
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029DF1 - 00029E32 (0x42 bytes), align: 0
  Segment part 73.            Intra module refs:   MAC_InitDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_InitDevice          00029DF1 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E33 - 00029E4B (0x19 bytes), align: 0
  Segment part 75.            Intra module refs:   MAC_MlmeAssociateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeAssociateReq    00029E33 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00029E4C - 00029E56 (0xb bytes), align: 0
  Segment part 77.            Intra module refs:   MAC_MlmePollReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmePollReq         00029E4C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001907 - 0000190C (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000184C - 00001851 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 12.            Intra module refs:   MAC_InitDevice
           LOCAL                   ADDRESS         
           =====                   =======         
           macDeviceReset::?relay
<<<<<<< HEAD
                                   00001907 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000190D - 00001912 (0x6 bytes), align: 0
=======
                                   0000184C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001852 - 00001857 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 14.            Intra module refs:   macAssocFailed
                                                   macRxAssocRsp
           LOCAL                   ADDRESS         
           =====                   =======         
           macAssociateCnf::?relay
<<<<<<< HEAD
                                   0000190D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001913 - 00001918 (0x6 bytes), align: 0
=======
                                   00001852 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001858 - 0000185D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 16.            Intra module refs:   Segment part 52
                                                   macAssocFrameResponseTimeout
                                                   macRxAssocRsp
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           macPollCnf::?relay      00001913 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001919 - 0000191E (0x6 bytes), align: 0
=======
           macPollCnf::?relay      00001858 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000185E - 00001863 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 19.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartResponseTimer::?relay
<<<<<<< HEAD
                                   00001919 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000191F - 00001924 (0x6 bytes), align: 0
=======
                                   0000185E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001864 - 00001869 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 21.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStartFrameResponseTimer::?relay
<<<<<<< HEAD
                                   0000191F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001925 - 0000192A (0x6 bytes), align: 0
=======
                                   00001864 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000186A - 0000186F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 23.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiAssociateReq::?relay
<<<<<<< HEAD
                                   00001925 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000192B - 00001930 (0x6 bytes), align: 0
=======
                                   0000186A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001870 - 00001875 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataReq::?relay
<<<<<<< HEAD
                                   0000192B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001931 - 00001936 (0x6 bytes), align: 0
=======
                                   00001870 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001876 - 0000187B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 30.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataReqComplete::?relay
<<<<<<< HEAD
                                   00001931 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001937 - 0000193C (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAssocRsp::?relay   00001937 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000193D - 00001942 (0x6 bytes), align: 0
=======
                                   00001876 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000187C - 00001881 (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAssocRsp::?relay   0000187C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001882 - 00001887 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   Segment part 6
                                                   macAssocRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocFrameResponseTimeout::?relay
<<<<<<< HEAD
                                   0000193D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001943 - 00001948 (0x6 bytes), align: 0
=======
                                   00001882 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001888 - 0000188D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 37.            Intra module refs:   Segment part 6
                                                   macAssocFrameResponseTimeout
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocFailed::?relay
<<<<<<< HEAD
                                   00001943 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001949 - 0000194E (0x6 bytes), align: 0
=======
                                   00001888 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000188E - 00001893 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 40.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocRxDisassoc::?relay
<<<<<<< HEAD
                                   00001949 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000194F - 00001954 (0x6 bytes), align: 0
=======
                                   0000188E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001894 - 00001899 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 42.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssocDataRxInd::?relay
<<<<<<< HEAD
                                   0000194F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001955 - 0000195A (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPollReq::?relay   00001955 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000195B - 00001960 (0x6 bytes), align: 0
=======
                                   00001894 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000189A - 0000189F (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPollReq::?relay   0000189A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018A0 - 000018A5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 50.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollDataReqComplete::?relay
<<<<<<< HEAD
                                   0000195B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001961 - 00001966 (0x6 bytes), align: 0
=======
                                   000018A0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018A6 - 000018AB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 54.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollDataRxInd::?relay
<<<<<<< HEAD
                                   00001961 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001967 - 0000196C (0x6 bytes), align: 0
=======
                                   000018A6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018AC - 000018B1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 57.            Intra module refs:   Segment part 6
                                                   Segment part 62
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollFrameResponseTimeout::?relay
<<<<<<< HEAD
                                   00001967 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000196D - 00001972 (0x6 bytes), align: 0
=======
                                   000018AC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018B2 - 000018B7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 59.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollRxDisassoc::?relay
<<<<<<< HEAD
                                   0000196D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001973 - 00001978 (0x6 bytes), align: 0
=======
                                   000018B2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018B8 - 000018BD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 61.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollRxAssocRsp::?relay
<<<<<<< HEAD
                                   00001973 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001979 - 0000197E (0x6 bytes), align: 0
=======
                                   000018B8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018BE - 000018C3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 64.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxCoordRealign::?relay
<<<<<<< HEAD
                                   00001979 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000197F - 00001984 (0x6 bytes), align: 0
=======
                                   000018BE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018C4 - 000018C9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 71.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPanConflictComplete::?relay
<<<<<<< HEAD
                                   0000197F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001985 - 0000198A (0x6 bytes), align: 0
=======
                                   000018C4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018CA - 000018CF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_InitDevice::?relay
<<<<<<< HEAD
                                   00001985        ZMacInit (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000198B - 00001990 (0x6 bytes), align: 0
=======
                                   000018CA        ZMacInit (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018D0 - 000018D5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeAssociateReq::?relay
<<<<<<< HEAD
                                   0000198B        ZMacAssociateReq (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001991 - 00001996 (0x6 bytes), align: 0
=======
                                   000018D0        ZMacAssociateReq (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018D6 - 000018DB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmePollReq::?relay
<<<<<<< HEAD
                                   00001991        ZMacPollReq (zmac)
=======
                                   000018D6        ZMacPollReq (zmac)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_main

  SEGMENTS IN THE MODULE
  ======================
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002562 - 000025C3 (0x62 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macIdleSt               00002562 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000025C4 - 00002625 (0x62 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssociatingSt        000025C4        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002626 - 00002687 (0x62 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollingSt            00002626        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002688 - 000026E9 (0x62 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanningSt           00002688 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000026EA - 000026F4 (0xb bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsgBufSize       000026EA 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000026F5 - 000026FF (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 48
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsgDataSize      000026F5 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002700 - 0000270A (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   macCbackForEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackEventTbl        00002700 
=======
  Relative segment, address: CODE 000022BF - 00002320 (0x62 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macIdleSt               000022BF 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002321 - 00002382 (0x62 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macAssociatingSt        00002321        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002383 - 000023E4 (0x62 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPollingSt            00002383        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000023E5 - 00002446 (0x62 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanningSt           000023E5 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002447 - 00002451 (0xb bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 46
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsgBufSize       00002447 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002452 - 0000245C (0xb bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 48
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsgDataSize      00002452 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000245D - 00002467 (0xb bytes), align: 0
  Segment part 14.            Intra module refs:   macCbackForEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackEventTbl        0000245D 
>>>>>>> develop
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3D8 - 0000E3D8 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   macEventLoop
                                                   macMainReset
                                                   macSendDataMsg
                                                   macSendMsg
                                                   macSetEvent
                                                   macTaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskId               0000E3D8        Segment part 33 (mac_data)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3D9 - 0000E3DD (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   macEventLoop
                                                   macExecute
                                                   macMainReset
                                                   macStateIdle
                                                   macStateScanning
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMain                 0000E3D9        MAC_Init (mac_mgmt)
                                                   MAC_InitDevice (mac_device)
                                                   Segment part 93 (mac_mgmt)
                                                   macApiDataReq (mac_data)
                                                   macApiPending (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macRxCheckPendingCallback (mac_data)
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE26 - 0000EE2F (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   macExecute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateTbl             0000EE26        MAC_InitDevice (mac_device)
=======
  Relative segment, address: XDATA 0000EDC1 - 0000EDCA (0xa bytes), align: 0
  Segment part 17.            Intra module refs:   macExecute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateTbl             0000EDC1        MAC_InitDevice (mac_device)
>>>>>>> develop
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3DE - 0000E3EB (0xe bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macReset                0000E3DE        MAC_InitDevice (mac_device)
                                                   Segment part 92 (mac_mgmt)
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE30 - 0000EE41 (0x12 bytes), align: 0
  Segment part 20.            Intra module refs:   macExecute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macActionSet            0000EE30        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F50E - 0002F545 (0x38 bytes), align: 0
  Segment part 22.            Intra module refs:   macMainReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMainReset            0002F50E 
=======
  Relative segment, address: XDATA 0000EDCB - 0000EDDC (0x12 bytes), align: 0
  Segment part 20.            Intra module refs:   macExecute
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macActionSet            0000EDCB        MAC_InitDevice (mac_device)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CE99 - 0002CED0 (0x38 bytes), align: 0
  Segment part 22.            Intra module refs:   macMainReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMainReset            0002CE99 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F546 - 0002F54A (0x5 bytes), align: 0
=======
  Relative segment, address: CODE 0002CED1 - 0002CED5 (0x5 bytes), align: 0
>>>>>>> develop
  Segment part 24.            Intra module refs:   macExecute
                                                   macMainReset
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F54B - 0002F560 (0x16 bytes), align: 0
  Segment part 25.            Intra module refs:   macSetEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetEvent             0002F54B 
=======
  Relative segment, address: CODE 0002CED6 - 0002CEEB (0x16 bytes), align: 0
  Segment part 25.            Intra module refs:   macSetEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetEvent             0002CED6 
>>>>>>> develop
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F561 - 0002F656 (0xf6 bytes), align: 0
  Segment part 27.            Intra module refs:   macCbackForEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackForEvent        0002F561 
=======
  Relative segment, address: CODE 0002CEEC - 0002CFE1 (0xf6 bytes), align: 0
  Segment part 27.            Intra module refs:   macCbackForEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackForEvent        0002CEEC 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000012 ( 0000001B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F657 - 0002F65E (0x8 bytes), align: 0
=======
  Relative segment, address: CODE 0002CFE2 - 0002CFE9 (0x8 bytes), align: 0
>>>>>>> develop
  Segment part 29.            Intra module refs:   macCbackForEvent
                                                   macEventLoop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F65F - 0002F667 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   macCbackForEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F668 - 0002F672 (0xb bytes), align: 0
  Segment part 31.            Intra module refs:   macCbackForEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F673 - 0002F682 (0x10 bytes), align: 0
  Segment part 32.            Intra module refs:   macStateIdle::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateIdle            0002F673 
=======
  Relative segment, address: CODE 0002CFEA - 0002CFF2 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   macCbackForEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CFF3 - 0002CFFD (0xb bytes), align: 0
  Segment part 31.            Intra module refs:   macCbackForEvent
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CFFE - 0002D00D (0x10 bytes), align: 0
  Segment part 32.            Intra module refs:   macStateIdle::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateIdle            0002CFFE 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F683 - 0002F689 (0x7 bytes), align: 0
=======
  Relative segment, address: CODE 0002D00E - 0002D014 (0x7 bytes), align: 0
>>>>>>> develop
  Segment part 34.            Intra module refs:   macStateIdle
                                                   macStateScanning
                                                   macTaskInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F68A - 0002F69D (0x14 bytes), align: 0
  Segment part 35.            Intra module refs:   macStateScanning::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateScanning        0002F68A 
=======
  Relative segment, address: CODE 0002D015 - 0002D028 (0x14 bytes), align: 0
  Segment part 35.            Intra module refs:   macStateScanning::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateScanning        0002D015 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F69E - 0002F724 (0x87 bytes), align: 0
  Segment part 37.            Intra module refs:   macExecute::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macExecute              0002F69E 
=======
  Relative segment, address: CODE 0002D029 - 0002D0AF (0x87 bytes), align: 0
  Segment part 37.            Intra module refs:   macExecute::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macExecute              0002D029 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F725 - 0002F72A (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   macExecute
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F72B - 0002F737 (0xd bytes), align: 0
=======
  Relative segment, address: CODE 0002D0B0 - 0002D0B5 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   macExecute
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D0B6 - 0002D0C2 (0xd bytes), align: 0
>>>>>>> develop
  Segment part 40.            Intra module refs:   Segment part 39
                                                   macExecute
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F738 - 0002F78C (0x55 bytes), align: 0
  Segment part 41.            Intra module refs:   macSendMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsg              0002F738 
=======
  Relative segment, address: CODE 0002D0C3 - 0002D117 (0x55 bytes), align: 0
  Segment part 41.            Intra module refs:   macSendMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsg              0002D0C3 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000013 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F78D - 0002F809 (0x7d bytes), align: 0
  Segment part 43.            Intra module refs:   macSendDataMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendDataMsg          0002F78D 
=======
  Relative segment, address: CODE 0002D118 - 0002D194 (0x7d bytes), align: 0
  Segment part 43.            Intra module refs:   macSendDataMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendDataMsg          0002D118 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000015 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F80A - 0002F813 (0xa bytes), align: 0
=======
  Relative segment, address: CODE 0002D195 - 0002D19E (0xa bytes), align: 0
>>>>>>> develop
  Segment part 45.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F814 - 0002F820 (0xd bytes), align: 0
=======
  Relative segment, address: CODE 0002D19F - 0002D1AB (0xd bytes), align: 0
>>>>>>> develop
  Segment part 46.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F821 - 0002F82F (0xf bytes), align: 0
=======
  Relative segment, address: CODE 0002D1AC - 0002D1BA (0xf bytes), align: 0
>>>>>>> develop
  Segment part 47.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F830 - 0002F841 (0x12 bytes), align: 0
=======
  Relative segment, address: CODE 0002D1BB - 0002D1CC (0x12 bytes), align: 0
>>>>>>> develop
  Segment part 48.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F842 - 0002F854 (0x13 bytes), align: 0
=======
  Relative segment, address: CODE 0002D1CD - 0002D1DF (0x13 bytes), align: 0
>>>>>>> develop
  Segment part 49.            Intra module refs:   macSendDataMsg
                                                   macSendMsg
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F855 - 0002F860 (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   macTaskInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskInit             0002F855 
=======
  Relative segment, address: CODE 0002D1E0 - 0002D1EB (0xc bytes), align: 0
  Segment part 50.            Intra module refs:   macTaskInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskInit             0002D1E0 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F861 - 0002F96F (0x10f bytes), align: 0
  Segment part 52.            Intra module refs:   macEventLoop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macEventLoop            0002F861 
=======
  Relative segment, address: CODE 0002D1EC - 0002D2FA (0x10f bytes), align: 0
  Segment part 52.            Intra module refs:   macEventLoop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macEventLoop            0002D1EC 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F970 - 0002F97C (0xd bytes), align: 0
  Segment part 54.            Intra module refs:   macEventLoop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F97D - 0002F98B (0xf bytes), align: 0
  Segment part 55.            Intra module refs:   macEventLoop
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002363 - 0000236C (0xa bytes), align: 0
  Segment part 18.            Intra module refs:   macStateTbl
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000236D - 0000237E (0x12 bytes), align: 0
  Segment part 21.            Intra module refs:   macActionSet
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001997 - 0000199C (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMainReset::?relay    00001997        MAC_MlmeResetReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000199D - 000019A2 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetEvent::?relay     0000199D        macApiScanReq (mac_scan)
=======
  Relative segment, address: CODE 0002D2FB - 0002D307 (0xd bytes), align: 0
  Segment part 54.            Intra module refs:   macEventLoop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D308 - 0002D316 (0xf bytes), align: 0
  Segment part 55.            Intra module refs:   macEventLoop
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021AC - 000021B5 (0xa bytes), align: 0
  Segment part 18.            Intra module refs:   macStateTbl
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021B6 - 000021C7 (0x12 bytes), align: 0
  Segment part 21.            Intra module refs:   macActionSet
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018DC - 000018E1 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMainReset::?relay    000018DC        MAC_MlmeResetReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018E2 - 000018E7 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSetEvent::?relay     000018E2        macApiScanReq (mac_scan)
>>>>>>> develop
                                                   macDeviceReset (mac_device)
                                                   macRxCompleteCallback (mac_data)
                                                   macTxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000019A3 - 000019A8 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000018E8 - 000018ED (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.            Intra module refs:   Segment part 49
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCbackForEvent::?relay
<<<<<<< HEAD
                                   000019A3        MAC_McpsDataReq (mac_data)
=======
                                   000018E8        MAC_McpsDataReq (mac_data)
>>>>>>> develop
                                                   Segment part 64 (mac_mgmt)
                                                   macApiDataReq (mac_data)
                                                   macDataTxComplete (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000019A9 - 000019AE (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateIdle::?relay    000019A9        macRxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019AF - 000019B4 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000018EE - 000018F3 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateIdle::?relay    000018EE        macRxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018F4 - 000018F9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macStateScanning::?relay
<<<<<<< HEAD
                                   000019AF        macCheckSched (mac_data)
                                                   macRxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019B5 - 000019BA (0x6 bytes), align: 0
=======
                                   000018F4        macCheckSched (mac_data)
                                                   macRxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000018FA - 000018FF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.            Intra module refs:   Segment part 54
                                                   Segment part 55
                                                   macEventLoop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macExecute::?relay      000019B5        Segment part 45 (mac_device)
=======
           macExecute::?relay      000018FA        Segment part 45 (mac_device)
>>>>>>> develop
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macRxBeacon (mac_mgmt)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000019BB - 000019C0 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsg::?relay      000019BB        MAC_MlmePollReq (mac_device)
=======
  Relative segment, address: CODE 00001900 - 00001905 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendMsg::?relay      00001900        MAC_MlmePollReq (mac_device)
>>>>>>> develop
                                                   MAC_MlmeScanReq (mac_scan)
                                                   MAC_MlmeSyncReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000019C1 - 000019C6 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001906 - 0000190B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSendDataMsg::?relay
<<<<<<< HEAD
                                   000019C1        MAC_MlmeAssociateReq (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019C7 - 000019CC (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskInit::?relay     000019C7        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019CD - 000019D2 (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macEventLoop::?relay    000019CD        Segment part 7 (OSAL_AXD)
=======
                                   00001906        MAC_MlmeAssociateReq (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000190C - 00001911 (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTaskInit::?relay     0000190C        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001912 - 00001917 (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macEventLoop::?relay    00001912        Segment part 7 (OSAL_AXD)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_mgmt

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E3EC - 0000E3EC (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   macApiDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmt                 0000E3EC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3ED - 0000E3ED (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   MAC_MlmeResetReq
                                                   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPanCoordinator       0000E3ED 
    -------------------------------------------------------------------------
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 0000270B - 00002718 (0xe bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmtAction1          0000270B        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002719 - 00002722 (0xa bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmtAction2          00002719        Segment part 21 (mac_main)
=======
  Relative segment, address: CODE 00002468 - 00002475 (0xe bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmtAction1          00002468        Segment part 21 (mac_main)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002476 - 0000247F (0xa bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMgmtAction2          00002476        Segment part 21 (mac_main)
>>>>>>> develop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E854 - 0001E888 (0x35 bytes), align: 0
  Segment part 11.            Intra module refs:   macGetCoordAddress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macGetCoordAddress      0001E854 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E889 - 0001E8A2 (0x1a bytes), align: 0
  Segment part 13.            Intra module refs:   macGetMyAddrMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macGetMyAddrMode        0001E889 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E8A3 - 0001E8D9 (0x37 bytes), align: 0
  Segment part 20.            Intra module refs:   macCoordAddrCmp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCoordAddrCmp         0001E8A3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000035 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E8DA - 0001E8E6 (0xd bytes), align: 0
  Segment part 22.            Intra module refs:   macCoordAddrCmp
                                                   macGetCoordAddress
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001E8E7 - 0001EB03 (0x21d bytes), align: 0
  Segment part 25.            Intra module refs:   macBuildHeader::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildHeader          0001E8E7 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000012 ( 00000013 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB04 - 0001EB08 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macBuildCommonReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB09 - 0001EB0C (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB0D - 0001EB0D (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB0E - 0001EB16 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 29
                                                   Segment part 35
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB17 - 0001EB19 (0x3 bytes), align: 0
  Segment part 31.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB1A - 0001EB1E (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 31
                                                   Segment part 48
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB1F - 0001EB25 (0x7 bytes), align: 0
  Segment part 33.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB26 - 0001EB2B (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   Segment part 33
                                                   Segment part 43
                                                   macBuildCommonReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB2C - 0001EB33 (0x8 bytes), align: 0
  Segment part 35.            Intra module refs:   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB34 - 0001EB3A (0x7 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EB3B - 0001EBBD (0x83 bytes), align: 0
  Segment part 37.            Intra module refs:   macBuildCommonReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildCommonReq       0001EB3B 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000037 ( 00000012 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EBBE - 0001EC4C (0x8f bytes), align: 0
  Segment part 39.            Intra module refs:   macBuildDisassociateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildDisassociateReq
                                   0001EBBE 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 0000000B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EC4D - 0001EC54 (0x8 bytes), align: 0
  Segment part 41.            Intra module refs:   MAC_MlmeResetReq
                                                   macApiDisassociateReq
                                                   macApiPending
                                                   macBuildDisassociateReq
                                                   macCommStatusInd
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EC55 - 0001EC57 (0x3 bytes), align: 0
  Segment part 42.            Intra module refs:   macApiDisassociateReq
                                                   macBuildDisassociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EC58 - 0001EC5D (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
                                                   Segment part 84
                                                   macBuildBeaconNotifyInd
                                                   macBuildDisassociateReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EC5E - 0001EE6E (0x211 bytes), align: 0
  Segment part 44.            Intra module refs:   macBuildBeaconNotifyInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildBeaconNotifyInd
                                   0001EC5E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000035 ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE6F - 0001EE7A (0xc bytes), align: 0
  Segment part 46.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE7B - 0001EE85 (0xb bytes), align: 0
  Segment part 47.            Intra module refs:   macApiDisassociateReq
                                                   macBuildBeaconNotifyInd
                                                   macBuildCommonReq
                                                   macBuildDisassociateReq
                                                   macBuildHeader
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE86 - 0001EE89 (0x4 bytes), align: 0
  Segment part 48.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macBuildHeader
                                                   macCommStatusInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE8A - 0001EE8C (0x3 bytes), align: 0
  Segment part 49.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE8D - 0001EE91 (0x5 bytes), align: 0
  Segment part 50.            Intra module refs:   Segment part 49
                                                   Segment part 87
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE92 - 0001EE98 (0x7 bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 49
                                                   macBuildBeaconNotifyInd
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE99 - 0001EE9C (0x4 bytes), align: 0
  Segment part 52.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EE9D - 0001EEA7 (0xb bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 52
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EEA8 - 0001EEB4 (0xd bytes), align: 0
  Segment part 54.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EEB5 - 0001EEBA (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EEBB - 0001EEC9 (0xf bytes), align: 0
  Segment part 56.            Intra module refs:   macSecCpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSecCpy               0001EEBB 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EECA - 0001EECC (0x3 bytes), align: 0
  Segment part 58.            Intra module refs:   macNoAction::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macNoAction             0001EECA 
               is indirectly called
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EECD - 0001EED4 (0x8 bytes), align: 0
  Segment part 60.            Intra module refs:   macApiUnsupported::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiUnsupported       0001EECD 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EED5 - 0001EEE7 (0x13 bytes), align: 0
  Segment part 62.            Intra module refs:   macDefaultAction::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDefaultAction        0001EED5 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EEE8 - 0001EEF1 (0xa bytes), align: 0
  Segment part 64.            Intra module refs:   MAC_Init
                                                   MAC_MlmeSyncReq
                                                   Segment part 76
                                                   macApiBadState
                                                   macApiUnsupported
                                                   macCoordAddrCmp
                                                   macDefaultAction
                                                   macGetCoordAddress
                                                   macGetMyAddrMode
                                                   macSecCpy
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EEF2 - 0001EF03 (0x12 bytes), align: 0
  Segment part 65.            Intra module refs:   macApiBadState::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiBadState          0001EEF2 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EF04 - 0001EF35 (0x32 bytes), align: 0
  Segment part 67.            Intra module refs:   macApiPending::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPending           0001EF04 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EF36 - 0001EFF0 (0xbb bytes), align: 0
  Segment part 69.            Intra module refs:   macCommStatusInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCommStatusInd        0001EF36 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000002B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EFF1 - 0001EFFA (0xa bytes), align: 0
  Segment part 71.            Intra module refs:   macApiDisassociateReq
                                                   macBuildBeaconNotifyInd
                                                   macCommStatusInd
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001EFFB - 0001F06B (0x71 bytes), align: 0
  Segment part 72.            Intra module refs:   macApiDisassociateReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDisassociateReq   0001EFFB 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F06C - 0001F0D0 (0x65 bytes), align: 0
  Segment part 74.            Intra module refs:   macDisassocComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDisassocComplete     0001F06C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F0D1 - 0001F0D6 (0x6 bytes), align: 0
  Segment part 76.            Intra module refs:   macConflictSyncLossInd
                                                   macDisassocComplete
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F0D7 - 0001F144 (0x6e bytes), align: 0
  Segment part 77.            Intra module refs:   macRxDisassoc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisassoc           0001F0D7 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000022 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F145 - 0001F14E (0xa bytes), align: 0
  Segment part 79.            Intra module refs:   macCommStatusInd
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F14F - 0001F169 (0x1b bytes), align: 0
  Segment part 80.            Intra module refs:   macDisassocComplete
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F16A - 0001F178 (0xf bytes), align: 0
  Segment part 81.            Intra module refs:   MAC_MlmeResetReq
                                                   macBuildHeader
                                                   macRxBeacon
                                                   macRxDisassoc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F179 - 0001F22B (0xb3 bytes), align: 0
  Segment part 82.            Intra module refs:   macRxBeacon::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxBeacon             0001F179 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000037 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F22C - 0001F236 (0xb bytes), align: 0
  Segment part 84.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F237 - 0001F25A (0x24 bytes), align: 0
  Segment part 85.            Intra module refs:   macConflictSyncLossInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macConflictSyncLossInd
                                   0001F237 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000035 ( 00000011 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F25B - 0001F264 (0xa bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 80
                                                   macConflictSyncLossInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F265 - 0001F2EF (0x8b bytes), align: 0
  Segment part 90.            Intra module refs:   MAC_MlmeResetReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeResetReq        0001F265 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F2F0 - 0001F2FA (0xb bytes), align: 0
  Segment part 92.            Intra module refs:   MAC_MlmeResetReq
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F2FB - 0001F303 (0x9 bytes), align: 0
  Segment part 93.            Intra module refs:   MAC_MlmeResetReq
                                                   macApiPending
                                                   macBuildBeaconNotifyInd
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F304 - 0001F30F (0xc bytes), align: 0
  Segment part 94.            Intra module refs:   MAC_MlmeSyncReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeSyncReq         0001F304 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F310 - 0001F320 (0x11 bytes), align: 0
  Segment part 96.            Intra module refs:   MAC_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_Init                0001F310 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000019D3 - 000019D8 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001918 - 0000191D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macGetCoordAddress::?relay
<<<<<<< HEAD
                                   000019D3        macAssocDataReq (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019D9 - 000019DE (0x6 bytes), align: 0
=======
                                   00001918        macAssocDataReq (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000191E - 00001923 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macGetMyAddrMode::?relay
<<<<<<< HEAD
                                   000019D9        macApiPollReq (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019DF - 000019E4 (0x6 bytes), align: 0
=======
                                   0000191E        macApiPollReq (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001924 - 00001929 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 21.            Intra module refs:   macApiDisassociateReq
                                                   macDisassocComplete
                                                   macRxBeacon
                                                   macRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCoordAddrCmp::?relay
<<<<<<< HEAD
                                   000019DF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019E5 - 000019EA (0x6 bytes), align: 0
=======
                                   00001924 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000192A - 0000192F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.            Intra module refs:   macBuildCommonReq
                                                   macBuildDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildHeader::?relay
<<<<<<< HEAD
                                   000019E5        macApiAssociateReq (mac_device)
                                                   macBuildDataFrame (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019EB - 000019F0 (0x6 bytes), align: 0
=======
                                   0000192A        macApiAssociateReq (mac_device)
                                                   macBuildDataFrame (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001930 - 00001935 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildCommonReq::?relay
<<<<<<< HEAD
                                   000019EB        macApiPollReq (mac_device)
=======
                                   00001930        macApiPollReq (mac_device)
>>>>>>> develop
                                                   macAssocDataReq (mac_device)
                                                   macScanNextChan (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000019F1 - 000019F6 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001936 - 0000193B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 40.            Intra module refs:   macApiDisassociateReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildDisassociateReq::?relay
<<<<<<< HEAD
                                   000019F1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019F7 - 000019FC (0x6 bytes), align: 0
=======
                                   00001936 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000193C - 00001941 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 45.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBuildBeaconNotifyInd::?relay
<<<<<<< HEAD
                                   000019F7        macScanRxBeacon (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019FD - 00001A02 (0x6 bytes), align: 0
=======
                                   0000193C        macScanRxBeacon (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001942 - 00001947 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 57.            Intra module refs:   macBuildBeaconNotifyInd
                                                   macCommStatusInd
                                                   macRxDisassoc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macSecCpy::?relay       000019FD        macRxCoordRealign (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A03 - 00001A08 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macNoAction::?relay     00001A03        Segment part 14 (mac_data)
=======
           macSecCpy::?relay       00001942        macRxCoordRealign (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001948 - 0000194D (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macNoAction::?relay     00001948        Segment part 14 (mac_data)
>>>>>>> develop
                                                   Segment part 16 (mac_data)
                                                   Segment part 18 (mac_data)
                                                   Segment part 20 (mac_data)
                                                   Segment part 27 (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001A09 - 00001A0E (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000194E - 00001953 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 61.            Intra module refs:   macDefaultAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiUnsupported::?relay
<<<<<<< HEAD
                                   00001A09 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A0F - 00001A14 (0x6 bytes), align: 0
=======
                                   0000194E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001954 - 00001959 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDefaultAction::?relay
<<<<<<< HEAD
                                   00001A0F        macExecute (mac_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A15 - 00001A1A (0x6 bytes), align: 0
=======
                                   00001954        macExecute (mac_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000195A - 0000195F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 66.            Intra module refs:   macApiPending
                                                   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiBadState::?relay
<<<<<<< HEAD
                                   00001A15 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A1B - 00001A20 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPending::?relay   00001A1B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A21 - 00001A26 (0x6 bytes), align: 0
=======
                                   0000195A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001960 - 00001965 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPending::?relay   00001960 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001966 - 0000196B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 70.            Intra module refs:   macMgmtAction1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCommStatusInd::?relay
<<<<<<< HEAD
                                   00001A21        macCbackForEvent (mac_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A27 - 00001A2C (0x6 bytes), align: 0
=======
                                   00001966        macCbackForEvent (mac_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000196C - 00001971 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 73.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiDisassociateReq::?relay
<<<<<<< HEAD
                                   00001A27 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A2D - 00001A32 (0x6 bytes), align: 0
=======
                                   0000196C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001972 - 00001977 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 75.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macDisassocComplete::?relay
<<<<<<< HEAD
                                   00001A2D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A33 - 00001A38 (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisassoc::?relay   00001A33        Segment part 44 (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A39 - 00001A3E (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxBeacon::?relay     00001A39 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A3F - 00001A44 (0x6 bytes), align: 0
=======
                                   00001972 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001978 - 0000197D (0x6 bytes), align: 0
  Segment part 78.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisassoc::?relay   00001978        Segment part 44 (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000197E - 00001983 (0x6 bytes), align: 0
  Segment part 83.            Intra module refs:   macMgmtAction2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxBeacon::?relay     0000197E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001984 - 00001989 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 86.            Intra module refs:   macRxBeacon
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macConflictSyncLossInd::?relay
<<<<<<< HEAD
                                   00001A3F        macPanConflictComplete (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A45 - 00001A4A (0x6 bytes), align: 0
=======
                                   00001984        macPanConflictComplete (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000198A - 0000198F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeResetReq::?relay
<<<<<<< HEAD
                                   00001A45        ZMacReset (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A4B - 00001A50 (0x6 bytes), align: 0
=======
                                   0000198A        ZMacReset (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001990 - 00001995 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 95.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeSyncReq::?relay
<<<<<<< HEAD
                                   00001A4B        ZMacSyncReq (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A51 - 00001A56 (0x6 bytes), align: 0
  Segment part 97.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_Init::?relay        00001A51        ZMacInit (zmac)
=======
                                   00001990        ZMacSyncReq (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001996 - 0000199B (0x6 bytes), align: 0
  Segment part 97.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_Init::?relay        00001996        ZMacInit (zmac)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_pib

  SEGMENTS IN THE MODULE
  ======================
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002723 - 0000275D (0x3b bytes), align: 0
  Segment part 7.             Intra module refs:   macPibReset
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000275E - 000027E5 (0x88 bytes), align: 0
=======
  Relative segment, address: CODE 00002480 - 000024BA (0x3b bytes), align: 0
  Segment part 7.             Intra module refs:   macPibReset
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000024BB - 00002542 (0x88 bytes), align: 0
>>>>>>> develop
  Segment part 8.             Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
                                                   Segment part 18
                                                   Segment part 20
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E3EE - 0000E428 (0x3b bytes), align: 0
  Segment part 9.             Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
                                                   macPibReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPib                  0000E3EE        MAC_MlmeResetReq (mac_mgmt)
                                                   Segment part 22 (mac_mgmt)
                                                   Segment part 80 (mac_mgmt)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macAssocDataReq (mac_device)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macCoordAddrCmp (mac_mgmt)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macGetCoordAddress (mac_mgmt)
                                                   macGetMyAddrMode (mac_mgmt)
                                                   macRadioStopScan (mac_radio)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxCompleteCallback (mac_data)
                                                   macTxFrame (mac_tx)
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A2B1 - 0003A2D7 (0x27 bytes), align: 0
  Segment part 10.            Intra module refs:   macPibReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPibReset             0003A2B1 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7A7 - 0002F7CD (0x27 bytes), align: 0
  Segment part 10.            Intra module refs:   macPibReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPibReset             0002F7A7 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A2D8 - 0003A2FE (0x27 bytes), align: 0
  Segment part 12.            Intra module refs:   macPibIndex::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macPibIndex             0003A2D8 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7CE - 0002F7F4 (0x27 bytes), align: 0
  Segment part 12.            Intra module refs:   macPibIndex::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macPibIndex             0002F7CE 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000F ( 00000000 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A2FF - 0003A36E (0x70 bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_MlmeGetReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeGetReq          0003A2FF 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F7F5 - 0002F864 (0x70 bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_MlmeGetReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeGetReq          0002F7F5 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A36F - 0003A508 (0x19a bytes), align: 0
  Segment part 16.            Intra module refs:   MAC_MlmeSetReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeSetReq          0003A36F 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F865 - 0002F9FE (0x19a bytes), align: 0
  Segment part 16.            Intra module refs:   MAC_MlmeSetReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeSetReq          0002F865 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000012 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A509 - 0003A512 (0xa bytes), align: 0
  Segment part 18.            Intra module refs:   MAC_MlmeSetReq
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A513 - 0003A517 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
                                                   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A518 - 0003A523 (0xc bytes), align: 0
  Segment part 20.            Intra module refs:   MAC_MlmeSetReq
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A57 - 00001A5C (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPibReset::?relay     00001A57        MAC_MlmeResetReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A5D - 00001A62 (0x6 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F9FF - 0002FA08 (0xa bytes), align: 0
  Segment part 18.            Intra module refs:   MAC_MlmeSetReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FA09 - 0002FA0D (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
                                                   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FA0E - 0002FA19 (0xc bytes), align: 0
  Segment part 20.            Intra module refs:   MAC_MlmeSetReq
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000199C - 000019A1 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPibReset::?relay     0000199C        MAC_MlmeResetReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019A2 - 000019A7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 13.            Intra module refs:   MAC_MlmeGetReq
                                                   MAC_MlmeSetReq
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           macPibIndex::?relay     00001A5D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A63 - 00001A68 (0x6 bytes), align: 0
=======
           macPibIndex::?relay     000019A2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019A8 - 000019AD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeGetReq::?relay
<<<<<<< HEAD
                                   00001A63        MAC_CbackEvent (zmac_cb)
                                                   ZMacGetReq (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A69 - 00001A6E (0x6 bytes), align: 0
=======
                                   000019A8        MAC_CbackEvent (zmac_cb)
                                                   ZMacGetReq (zmac)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019AE - 000019B3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeSetReq::?relay
<<<<<<< HEAD
                                   00001A69        MAC_MlmeResetReq (mac_mgmt)
=======
                                   000019AE        MAC_MlmeResetReq (mac_mgmt)
>>>>>>> develop
                                                   Segment part 80 (mac_mgmt)
                                                   ZMacReset (zmac)
                                                   ZMacSetReq (zmac)
                                                   macApiAssociateReq (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macScanComplete (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_pwr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E429 - 0000E429 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   macPwrReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwr                  0000E429 
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B3C1 - 0003B3C9 (0x9 bytes), align: 0
  Segment part 7.             Intra module refs:   macPwrReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwrReset             0003B3C1 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFEA - 0002FFF2 (0x9 bytes), align: 0
  Segment part 7.             Intra module refs:   macPwrReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwrReset             0002FFEA 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B3CA - 0003B3D0 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   macPwrReset
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B3D1 - 0003B3D3 (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   macApiPwrOnReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPwrOnReq          0003B3D1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A6F - 00001A74 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwrReset::?relay     00001A6F        MAC_MlmeResetReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A75 - 00001A7A (0x6 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFF3 - 0002FFF9 (0x7 bytes), align: 0
  Segment part 9.             Intra module refs:   macPwrReset
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFFA - 0002FFFC (0x3 bytes), align: 0
  Segment part 10.            Intra module refs:   macApiPwrOnReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPwrOnReq          0002FFFA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019B4 - 000019B9 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macPwrReset::?relay     000019B4        MAC_MlmeResetReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019BA - 000019BF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiPwrOnReq::?relay
<<<<<<< HEAD
                                   00001A75        macMgmtAction2 (mac_mgmt)
=======
                                   000019BA        macMgmtAction2 (mac_mgmt)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_scan

  SEGMENTS IN THE MODULE
  ======================
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 000027E6 - 000027F1 (0xc bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanAction           000027E6        Segment part 21 (mac_main)
=======
  Relative segment, address: CODE 00002543 - 0000254E (0xc bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanAction           00002543        Segment part 21 (mac_main)
>>>>>>> develop
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E42A - 0000E445 (0x1c bytes), align: 0
  Segment part 7.             Intra module refs:   macApiScanReq
                                                   macScanComplete
                                                   macScanNextChan
                                                   macScanRxBeacon
                                                   macScanRxCoordRealign
                                                   macScanStartTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D165 - 0002D1D8 (0x74 bytes), align: 0
  Segment part 12.            Intra module refs:   macScanCnfInit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macScanCnfInit          0002D165 
=======
  Relative segment, address: CODE 0002AFDE - 0002B051 (0x74 bytes), align: 0
  Segment part 12.            Intra module refs:   macScanCnfInit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macScanCnfInit          0002AFDE 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 0000000E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D1D9 - 0002D1DD (0x5 bytes), align: 0
=======
  Relative segment, address: CODE 0002B052 - 0002B056 (0x5 bytes), align: 0
>>>>>>> develop
  Segment part 14.            Intra module refs:   macScanCnfInit
                                                   macScanRxBeacon
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D1DE - 0002D1E2 (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   macScanCnfInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D1E3 - 0002D1E9 (0x7 bytes), align: 0
=======
  Relative segment, address: CODE 0002B057 - 0002B05B (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   macScanCnfInit
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B05C - 0002B062 (0x7 bytes), align: 0
>>>>>>> develop
  Segment part 16.            Intra module refs:   Segment part 15
                                                   Segment part 20
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D1EA - 0002D2DB (0xf2 bytes), align: 0
  Segment part 17.            Intra module refs:   macApiScanReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiScanReq           0002D1EA 
=======
  Relative segment, address: CODE 0002B063 - 0002B154 (0xf2 bytes), align: 0
  Segment part 17.            Intra module refs:   macApiScanReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiScanReq           0002B063 
>>>>>>> develop
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D2DC - 0002D2E0 (0x5 bytes), align: 0
=======
  Relative segment, address: CODE 0002B155 - 0002B159 (0x5 bytes), align: 0
>>>>>>> develop
  Segment part 19.            Intra module refs:   macApiScanReq
                                                   macScanNextChan
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D2E1 - 0002D2E8 (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   macApiScanReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D2E9 - 0002D3D2 (0xea bytes), align: 0
  Segment part 21.            Intra module refs:   macScanNextChan::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanNextChan         0002D2E9 
=======
  Relative segment, address: CODE 0002B15A - 0002B161 (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   macApiScanReq
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B162 - 0002B24B (0xea bytes), align: 0
  Segment part 21.            Intra module refs:   macScanNextChan::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanNextChan         0002B162 
>>>>>>> develop
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000017 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D3D3 - 0002D46C (0x9a bytes), align: 0
  Segment part 23.            Intra module refs:   macScanStartTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanStartTimer       0002D3D3 
=======
  Relative segment, address: CODE 0002B24C - 0002B2E5 (0x9a bytes), align: 0
  Segment part 23.            Intra module refs:   macScanStartTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanStartTimer       0002B24C 
>>>>>>> develop
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000015 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D46D - 0002D5A9 (0x13d bytes), align: 0
  Segment part 25.            Intra module refs:   macScanRxBeacon::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxBeacon         0002D46D 
=======
  Relative segment, address: CODE 0002B2E6 - 0002B422 (0x13d bytes), align: 0
  Segment part 25.            Intra module refs:   macScanRxBeacon::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxBeacon         0002B2E6 
>>>>>>> develop
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000003D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D5AA - 0002D637 (0x8e bytes), align: 0
  Segment part 27.            Intra module refs:   macScanRxCoordRealign::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxCoordRealign   0002D5AA 
=======
  Relative segment, address: CODE 0002B423 - 0002B4B0 (0x8e bytes), align: 0
  Segment part 27.            Intra module refs:   macScanRxCoordRealign::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxCoordRealign   0002B423 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D638 - 0002D648 (0x11 bytes), align: 0
  Segment part 29.            Intra module refs:   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D649 - 0002D653 (0xb bytes), align: 0
=======
  Relative segment, address: CODE 0002B4B1 - 0002B4C1 (0x11 bytes), align: 0
  Segment part 29.            Intra module refs:   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B4C2 - 0002B4CC (0xb bytes), align: 0
>>>>>>> develop
  Segment part 30.            Intra module refs:   Segment part 29
                                                   Segment part 37
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D654 - 0002D663 (0x10 bytes), align: 0
=======
  Relative segment, address: CODE 0002B4CD - 0002B4DC (0x10 bytes), align: 0
>>>>>>> develop
  Segment part 31.            Intra module refs:   Segment part 29
                                                   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D664 - 0002D69C (0x39 bytes), align: 0
  Segment part 32.            Intra module refs:   macScanComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanComplete         0002D664 
=======
  Relative segment, address: CODE 0002B4DD - 0002B515 (0x39 bytes), align: 0
  Segment part 32.            Intra module refs:   macScanComplete::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanComplete         0002B4DD 
>>>>>>> develop
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D69D - 0002D6A3 (0x7 bytes), align: 0
=======
  Relative segment, address: CODE 0002B516 - 0002B51C (0x7 bytes), align: 0
>>>>>>> develop
  Segment part 34.            Intra module refs:   MAC_MlmeScanReq
                                                   macScanComplete
                                                   macScanFailedInProgress
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D6A4 - 0002D6D1 (0x2e bytes), align: 0
=======
  Relative segment, address: CODE 0002B51D - 0002B54A (0x2e bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   macScanFailedInProgress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanFailedInProgress
<<<<<<< HEAD
                                   0002D6A4 
=======
                                   0002B51D 
>>>>>>> develop
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D6D2 - 0002D6D5 (0x4 bytes), align: 0
=======
  Relative segment, address: CODE 0002B54B - 0002B54E (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 37.            Intra module refs:   macScanFailedInProgress
                                                   macScanRxCoordRealign
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D6D6 - 0002D6E0 (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   MAC_MlmeScanReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeScanReq         0002D6D6 
=======
  Relative segment, address: CODE 0002B54F - 0002B559 (0xb bytes), align: 0
  Segment part 38.            Intra module refs:   MAC_MlmeScanReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeScanReq         0002B54F 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001A7B - 00001A80 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000019C0 - 000019C5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 13.            Intra module refs:   macApiScanReq
                                                   macScanFailedInProgress
           LOCAL                   ADDRESS         
           =====                   =======         
           macScanCnfInit::?relay
<<<<<<< HEAD
                                   00001A7B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A81 - 00001A86 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiScanReq::?relay   00001A81 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A87 - 00001A8C (0x6 bytes), align: 0
=======
                                   000019C0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019C6 - 000019CB (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macApiScanReq::?relay   000019C6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019CC - 000019D1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanNextChan::?relay
<<<<<<< HEAD
                                   00001A87 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A8D - 00001A92 (0x6 bytes), align: 0
=======
                                   000019CC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019D2 - 000019D7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 24.            Intra module refs:   macScanAction
                                                   macScanNextChan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanStartTimer::?relay
<<<<<<< HEAD
                                   00001A8D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A93 - 00001A98 (0x6 bytes), align: 0
=======
                                   000019D2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019D8 - 000019DD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxBeacon::?relay
<<<<<<< HEAD
                                   00001A93 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A99 - 00001A9E (0x6 bytes), align: 0
=======
                                   000019D8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019DE - 000019E3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanRxCoordRealign::?relay
<<<<<<< HEAD
                                   00001A99        Segment part 7 (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A9F - 00001AA4 (0x6 bytes), align: 0
=======
                                   000019DE        Segment part 7 (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019E4 - 000019E9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 33.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanComplete::?relay
<<<<<<< HEAD
                                   00001A9F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AA5 - 00001AAA (0x6 bytes), align: 0
=======
                                   000019E4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019EA - 000019EF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.            Intra module refs:   macScanAction
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macScanFailedInProgress::?relay
<<<<<<< HEAD
                                   00001AA5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AAB - 00001AB0 (0x6 bytes), align: 0
=======
                                   000019EA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019F0 - 000019F5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_MlmeScanReq::?relay
<<<<<<< HEAD
                                   00001AAB        ZMacScanReq (zmac)
=======
                                   000019F0        ZMacScanReq (zmac)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : mac_timer

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E446 - 0000E447 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimer
                                                   macTimerCancel
                                                   macTimerUpdateBackoffTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerUnalignedQ         0000E446 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E448 - 0000E449 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimerCancel
                                                   macTimerUpdateBackoffTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerAlignedQ           0000E448 
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE42 - 0000EE45 (0x4 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EDDD - 0000EDE0 (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 9.             Intra module refs:   macBackoffTimerRolloverCallback
                                                   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE46 - 0000EE49 (0x4 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EDE1 - 0000EDE4 (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   macBackoffTimerRolloverCallback
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E44A - 0000E44B (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 25
                                                   Segment part 31
                                                   Segment part 34
                                                   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038000 - 000380C0 (0xc1 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D740 - 0002D800 (0xc1 bytes), align: 0
>>>>>>> develop
  Segment part 22.            Intra module refs:   macTimerUpdateBackoffTimer::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerUpdateBackoffTimer
<<<<<<< HEAD
                                   00038000 
=======
                                   0002D740 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000011 ( 0000000C )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000380C1 - 000380C5 (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000380C6 - 000380D1 (0xc bytes), align: 0
  Segment part 25.            Intra module refs:   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000380D2 - 000380D5 (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000380D6 - 000380DB (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000380DC - 0003812C (0x51 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D801 - 0002D805 (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D806 - 0002D811 (0xc bytes), align: 0
  Segment part 25.            Intra module refs:   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D812 - 0002D815 (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D816 - 0002D81B (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
                                                   Segment part 31
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D81C - 0002D86C (0x51 bytes), align: 0
>>>>>>> develop
  Segment part 28.            Intra module refs:   macBackoffTimerTriggerCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerTriggerCallback
<<<<<<< HEAD
                                   000380DC 
=======
                                   0002D81C 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003812D - 00038135 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 27
                                                   macBackoffTimerTriggerCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038136 - 0003813E (0x9 bytes), align: 0
  Segment part 31.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003813F - 000381C9 (0x8b bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D86D - 0002D875 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 27
                                                   macBackoffTimerTriggerCallback
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D876 - 0002D87E (0x9 bytes), align: 0
  Segment part 31.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D87F - 0002D909 (0x8b bytes), align: 0
>>>>>>> develop
  Segment part 32.            Intra module refs:   macTimerRecalcUnaligned::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRecalcUnaligned
<<<<<<< HEAD
                                   0003813F 
=======
                                   0002D87F 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000013 ( 00000010 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000381CA - 000381D2 (0x9 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D90A - 0002D912 (0x9 bytes), align: 0
>>>>>>> develop
  Segment part 34.            Intra module refs:   Segment part 25
                                                   macTimerAddTimer
                                                   macTimerCancel
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000381D3 - 000381D9 (0x7 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D913 - 0002D919 (0x7 bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   macBackoffTimerTriggerCallback
                                                   macTimerAddTimer
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000381DA - 00038299 (0xc0 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D91A - 0002D9D9 (0xc0 bytes), align: 0
>>>>>>> develop
  Segment part 36.            Intra module refs:   macBackoffTimerRolloverCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerRolloverCallback
<<<<<<< HEAD
                                   000381DA 
=======
                                   0002D91A 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003829A - 00038312 (0x79 bytes), align: 0
  Segment part 38.            Intra module refs:   macTimerAddTimer::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerAddTimer        0003829A 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D9DA - 0002DA52 (0x79 bytes), align: 0
  Segment part 38.            Intra module refs:   macTimerAddTimer::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerAddTimer        0002D9DA 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000010 ( 0000000F )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038313 - 00038341 (0x2f bytes), align: 0
  Segment part 42.            Intra module refs:   macTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimer                00038313 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA53 - 0002DA81 (0x2f bytes), align: 0
  Segment part 42.            Intra module refs:   macTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimer                0002DA53 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000004 ( 00000010 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038342 - 0003834D (0xc bytes), align: 0
  Segment part 44.            Intra module refs:   macTimer
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003834E - 0003838D (0x40 bytes), align: 0
  Segment part 45.            Intra module refs:   macTimerRemoveTimer::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRemoveTimer     0003834E 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA82 - 0002DA8D (0xc bytes), align: 0
  Segment part 44.            Intra module refs:   macTimer
                                                   macTimerUpdateBackoffTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DA8E - 0002DACD (0x40 bytes), align: 0
  Segment part 45.            Intra module refs:   macTimerRemoveTimer::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRemoveTimer     0002DA8E 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003838E - 00038392 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   macTimerCancel
                                                   macTimerRemoveTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038393 - 000383CF (0x3d bytes), align: 0
  Segment part 48.            Intra module refs:   macTimerCancel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimerCancel          00038393 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DACE - 0002DAD2 (0x5 bytes), align: 0
  Segment part 47.            Intra module refs:   macTimerCancel
                                                   macTimerRemoveTimer
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DAD3 - 0002DB0F (0x3d bytes), align: 0
  Segment part 48.            Intra module refs:   macTimerCancel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimerCancel          0002DAD3 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000383D0 - 000383DB (0xc bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DB10 - 0002DB1B (0xc bytes), align: 0
>>>>>>> develop
  Segment part 54.            Intra module refs:   macTimer
                                                   macTimerRecalcUnaligned
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 0000237F - 00002382 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002383 - 00002386 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AB1 - 00001AB6 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000021C8 - 000021CB (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021CC - 000021CF (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019F6 - 000019FB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 23.            Intra module refs:   macBackoffTimerRolloverCallback
                                                   macTimerAddTimer
                                                   macTimerCancel
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerUpdateBackoffTimer::?relay
<<<<<<< HEAD
                                   00001AB1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AB7 - 00001ABC (0x6 bytes), align: 0
=======
                                   000019F6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000019FC - 00001A01 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerTriggerCallback::?relay
<<<<<<< HEAD
                                   00001AB7        macBackoffTimerCompareIsr (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001ABD - 00001AC2 (0x6 bytes), align: 0
=======
                                   000019FC        macBackoffTimerCompareIsr (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A02 - 00001A07 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 33.            Intra module refs:   macBackoffTimerRolloverCallback
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRecalcUnaligned::?relay
<<<<<<< HEAD
                                   00001ABD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AC3 - 00001AC8 (0x6 bytes), align: 0
=======
                                   00001A02 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A08 - 00001A0D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerRolloverCallback::?relay
<<<<<<< HEAD
                                   00001AC3        macBackoffTimerCompareIsr (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AC9 - 00001ACE (0x6 bytes), align: 0
=======
                                   00001A08        macBackoffTimerCompareIsr (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A0E - 00001A13 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.            Intra module refs:   Segment part 54
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerAddTimer::?relay
<<<<<<< HEAD
                                   00001AC9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001ACF - 00001AD4 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimer::?relay        00001ACF        macScanStartTimer (mac_scan)
=======
                                   00001A0E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A14 - 00001A19 (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimer::?relay        00001A14        macScanStartTimer (mac_scan)
>>>>>>> develop
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001AD5 - 00001ADA (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001A1A - 00001A1F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 46.            Intra module refs:   macTimerCancel
           LOCAL                   ADDRESS         
           =====                   =======         
           macTimerRemoveTimer::?relay
<<<<<<< HEAD
                                   00001AD5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001ADB - 00001AE0 (0x6 bytes), align: 0
=======
                                   00001A1A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A20 - 00001A25 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 49.            Intra module refs:   macBackoffTimerTriggerCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTimerCancel::?relay
<<<<<<< HEAD
                                   00001ADB        Segment part 38 (mac_device)
=======
                                   00001A20        Segment part 38 (mac_device)
>>>>>>> develop
                                                   Segment part 55 (mac_device)
                                                   Segment part 62 (mac_device)
                                                   macScanComplete (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\AF.r51
  PROGRAM MODULE, NAME : AF

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E44C - 0000E44D (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   afEndPoints
                                                   afFindEndPointDescList
                                                   afGetDescCB
                                                   afIncomingData
                                                   afInit
                                                   afNumEndPoints
                                                   afRegisterExtended
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           epList                  0000E44C        ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019FC6 - 00019FDA (0x15 bytes), align: 0
  Segment part 7.             Intra module refs:   afInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afInit                  00019FC6 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00019FDB - 0001A09C (0xc2 bytes), align: 0
  Segment part 9.             Intra module refs:   afRegisterExtended::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegisterExtended      00019FDB 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A09D - 0001A0CB (0x2f bytes), align: 0
  Segment part 11.            Intra module refs:   afRegister::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegister              0001A09D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A0CC - 0001A149 (0x7e bytes), align: 0
  Segment part 13.            Intra module refs:   afDataConfirm::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataConfirm           0001A0CC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002E ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A14A - 0001A4AF (0x366 bytes), align: 0
  Segment part 15.            Intra module refs:   afIncomingData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afIncomingData          0001A14A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000005 ( 00000021 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A4B0 - 0001A6E4 (0x235 bytes), align: 0
  Segment part 17.            Intra module refs:   afBuildMSGIncoming::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           afBuildMSGIncoming      0001A4B0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000021 ( 00000018 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001A6E5 - 0001AA18 (0x334 bytes), align: 0
  Segment part 19.            Intra module refs:   AF_DataRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AF_DataRequest          0001A6E5 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 0000002E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AA19 - 0001AA63 (0x4b bytes), align: 0
  Segment part 21.            Intra module refs:   afFindEndPointDescList::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           afFindEndPointDescList
                                   0001AA19 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001A ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AA64 - 0001AA95 (0x32 bytes), align: 0
  Segment part 23.            Intra module refs:   afFindEndPointDesc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afFindEndPointDesc      0001AA64 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001A ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AA96 - 0001AB27 (0x92 bytes), align: 0
  Segment part 25.            Intra module refs:   afFindSimpleDesc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afFindSimpleDesc        0001AA96 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB28 - 0001AB83 (0x5c bytes), align: 0
  Segment part 27.            Intra module refs:   afGetDescCB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           afGetDescCB             0001AB28 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002E ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AB84 - 0001ABB6 (0x33 bytes), align: 0
  Segment part 29.            Intra module refs:   afDataReqMTU::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataReqMTU            0001AB84 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABB7 - 0001ABEA (0x34 bytes), align: 0
  Segment part 35.            Intra module refs:   afNumEndPoints::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afNumEndPoints          0001ABB7 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ABEB - 0001AC3F (0x55 bytes), align: 0
  Segment part 37.            Intra module refs:   afEndPoints::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afEndPoints             0001ABEB 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC40 - 0001AC6F (0x30 bytes), align: 0
  Segment part 39.            Intra module refs:   afCopyAddress::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afCopyAddress           0001AC40 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000015 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001AE1 - 00001AE6 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afInit::?relay          00001AE1        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AE7 - 00001AEC (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001A26 - 00001A2B (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afInit::?relay          00001A26        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A2C - 00001A31 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 10.            Intra module refs:   afRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegisterExtended::?relay
<<<<<<< HEAD
                                   00001AE7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AED - 00001AF2 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegister::?relay      00001AED        AXD_Init (AXD)
                                                   ZDApp_Init (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AF3 - 00001AF8 (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataConfirm::?relay   00001AF3        APSDE_DataCnf (APSMEDE_CB)
                                                   APSDE_DataConfirm (APSMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AF9 - 00001AFE (0x6 bytes), align: 0
=======
                                   00001A2C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A32 - 00001A37 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afRegister::?relay      00001A32        AXD_Init (AXD)
                                                   ZDApp_Init (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A38 - 00001A3D (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataConfirm::?relay   00001A38        APSDE_DataCnf (APSMEDE_CB)
                                                   APSDE_DataConfirm (APSMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A3E - 00001A43 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afIncomingData::?relay
<<<<<<< HEAD
                                   00001AF9        APS_event_loop (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AFF - 00001B04 (0x6 bytes), align: 0
=======
                                   00001A3E        APS_event_loop (APS)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A44 - 00001A49 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 18.            Intra module refs:   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           afBuildMSGIncoming::?relay
<<<<<<< HEAD
                                   00001AFF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B05 - 00001B0A (0x6 bytes), align: 0
=======
                                   00001A44 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A4A - 00001A4F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AF_DataRequest::?relay
<<<<<<< HEAD
                                   00001B05        AXD_SendTheMessage (AXD)
                                                   fillAndSend (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B0B - 00001B10 (0x6 bytes), align: 0
=======
                                   00001A4A        AXD_SendTheMessage (AXD)
                                                   fillAndSend (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A50 - 00001A55 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.            Intra module refs:   afFindEndPointDesc
                                                   afFindSimpleDesc
                                                   afIncomingData
           LOCAL                   ADDRESS         
           =====                   =======         
           afFindEndPointDescList::?relay
<<<<<<< HEAD
                                   00001B0B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B11 - 00001B16 (0x6 bytes), align: 0
=======
                                   00001A50 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A56 - 00001A5B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 24.            Intra module refs:   afDataConfirm
                                                   afIncomingData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afFindEndPointDesc::?relay
<<<<<<< HEAD
                                   00001B11        MTProcessAppMsg (MTEL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B17 - 00001B1C (0x6 bytes), align: 0
=======
                                   00001A56 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A5C - 00001A61 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afFindSimpleDesc::?relay
<<<<<<< HEAD
                                   00001B17        ZDO_ProcessSimpleDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B1D - 00001B22 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   AF_DataRequest
           LOCAL                   ADDRESS         
           =====                   =======         
           afGetDescCB::?relay     00001B1D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B23 - 00001B28 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataReqMTU::?relay    00001B23 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B29 - 00001B2E (0x6 bytes), align: 0
=======
                                   00001A5C        ZDO_ProcessSimpleDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A62 - 00001A67 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   AF_DataRequest
           LOCAL                   ADDRESS         
           =====                   =======         
           afGetDescCB::?relay     00001A62 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A68 - 00001A6D (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   AF_DataRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afDataReqMTU::?relay    00001A68 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A6E - 00001A73 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afNumEndPoints::?relay
<<<<<<< HEAD
                                   00001B29        ZDO_ProcessActiveEPReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B2F - 00001B34 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afEndPoints::?relay     00001B2F        ZDO_ProcessActiveEPReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B35 - 00001B3A (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   afBuildMSGIncoming
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afCopyAddress::?relay   00001B35 
=======
                                   00001A6E        ZDO_ProcessActiveEPReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A74 - 00001A79 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afEndPoints::?relay     00001A74        ZDO_ProcessActiveEPReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A7A - 00001A7F (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   afBuildMSGIncoming
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           afCopyAddress::?relay   00001A7A 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\AXD.r51
  PROGRAM MODULE, NAME : AXD

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000E456 - 0000E467 (0x12 bytes), align: 0
  Segment part 12.            Intra module refs:   AXD_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_Group               0000E456 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE4A - 0000EE4D (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   AXD_Init
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE4E - 0000EE53 (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   AXD_HandleKeys
                                                   Segment part 16
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_ClusterList         0000EE4E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE54 - 0000EE5F (0xc bytes), align: 0
  Segment part 15.            Intra module refs:   AXD_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_SimpleDesc          0000EE54 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E468 - 0000E46D (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   AXD_HandleKeys
=======
  Relative segment, address: XDATA 0000E44E - 0000E45F (0x12 bytes), align: 0
  Segment part 10.            Intra module refs:   AXD_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_Group               0000E44E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDE5 - 0000EDEA (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   AXD_HandleKeys
                                                   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_ClusterList         0000EDE5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDEB - 0000EDF6 (0xc bytes), align: 0
  Segment part 13.            Intra module refs:   AXD_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_SimpleDesc          0000EDEB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E460 - 0000E465 (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   AXD_HandleKeys
>>>>>>> develop
                                                   AXD_Init
                                                   AXD_SendTheMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           AXD_epDesc              0000E468 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E46E - 0000E46E (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   AXD_Init
=======
           AXD_epDesc              0000E460 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E466 - 0000E466 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   AXD_Init
>>>>>>> develop
                                                   AXD_ProcessEvent
                                                   rxCB_Loopback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           AXD_TaskID              0000E46E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E46F - 0000E46F (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   AXD_Init
                                                   AXD_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_NwkState            0000E46F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E470 - 0000E470 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   AXD_Init
                                                   AXD_SendTheMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_TransID             0000E470 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E471 - 0000E474 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   AXD_Init
=======
           AXD_TaskID              0000E466 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E467 - 0000E467 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   AXD_Init
                                                   AXD_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_NwkState            0000E467 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E468 - 0000E468 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   AXD_Init
                                                   AXD_SendTheMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_TransID             0000E468 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E469 - 0000E46C (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   AXD_Init
>>>>>>> develop
                                                   AXD_ProcessZDOMsgs
                                                   AXD_SendTheMessage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           AXD_DstAddr             0000E471 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E475 - 0000E475 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   rxCB_Loopback
           LOCAL                   ADDRESS         
           =====                   =======         
           rxLen                   0000E475 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E476 - 0000E4C5 (0x50 bytes), align: 0
  Segment part 24.            Intra module refs:   rxCB_Loopback
           LOCAL                   ADDRESS         
           =====                   =======         
           rxBuf                   0000E476 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DC5B - 0002DD73 (0x119 bytes), align: 0
  Segment part 25.            Intra module refs:   AXD_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_Init                0002DC5B 
=======
           AXD_DstAddr             0000E469 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E46D - 0000E46D (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   rxCB_Loopback
           LOCAL                   ADDRESS         
           =====                   =======         
           rxLen                   0000E46D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E46E - 0000E473 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   rxCB_Loopback
           LOCAL                   ADDRESS         
           =====                   =======         
           rxBuf                   0000E46E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BAD4 - 0002BBE3 (0x110 bytes), align: 0
  Segment part 23.            Intra module refs:   AXD_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_Init                0002BAD4 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000026 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002DD74 - 0002DEAD (0x13a bytes), align: 0
  Segment part 27.            Intra module refs:   AXD_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_ProcessEvent        0002DD74 
=======
  Relative segment, address: CODE 0002BBE4 - 0002BD1D (0x13a bytes), align: 0
  Segment part 25.            Intra module refs:   AXD_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_ProcessEvent        0002BBE4 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000012 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002DEAE - 0002DF67 (0xba bytes), align: 0
  Segment part 29.            Intra module refs:   AXD_ProcessZDOMsgs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_ProcessZDOMsgs      0002DEAE 
=======
  Relative segment, address: CODE 0002BD1E - 0002BDD7 (0xba bytes), align: 0
  Segment part 27.            Intra module refs:   AXD_ProcessZDOMsgs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_ProcessZDOMsgs      0002BD1E 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000012 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002DF68 - 0002E071 (0x10a bytes), align: 0
  Segment part 31.            Intra module refs:   AXD_HandleKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_HandleKeys          0002DF68 
=======
  Relative segment, address: CODE 0002BDD8 - 0002BEE1 (0x10a bytes), align: 0
  Segment part 29.            Intra module refs:   AXD_HandleKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_HandleKeys          0002BDD8 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000012 ( 0000001C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E072 - 0002E0D7 (0x66 bytes), align: 0
  Segment part 35.            Intra module refs:   AXD_SendTheMessage::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_SendTheMessage      0002E072 
=======
  Relative segment, address: CODE 0002BEE2 - 0002BF47 (0x66 bytes), align: 0
  Segment part 33.            Intra module refs:   AXD_SendTheMessage::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_SendTheMessage      0002BEE2 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000012 ( 00000013 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E0D8 - 0002E17C (0xa5 bytes), align: 0
  Segment part 39.            Intra module refs:   rxCB_Loopback::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxCB_Loopback           0002E0D8 
=======
  Relative segment, address: CODE 0002BF48 - 0002BFEC (0xa5 bytes), align: 0
  Segment part 37.            Intra module refs:   rxCB_Loopback::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxCB_Loopback           0002BF48 
>>>>>>> develop
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
<<<<<<< HEAD
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002387 - 0000238A (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000238B - 00002390 (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   AXD_ClusterList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002391 - 0000239C (0xc bytes), align: 0
  Segment part 16.            Intra module refs:   AXD_SimpleDesc
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B3B - 00001B40 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_Init::?relay        00001B3B        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B41 - 00001B46 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_ProcessEvent::?relay
                                   00001B41        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B47 - 00001B4C (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   AXD_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_ProcessZDOMsgs::?relay
                                   00001B47 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B4D - 00001B52 (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   AXD_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_HandleKeys::?relay
                                   00001B4D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B53 - 00001B58 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   AXD_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_SendTheMessage::?relay
                                   00001B53 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B59 - 00001B5E (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   AXD_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           rxCB_Loopback::?relay   00001B59 
=======
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021D0 - 000021D5 (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   AXD_ClusterList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021D6 - 000021E1 (0xc bytes), align: 0
  Segment part 14.            Intra module refs:   AXD_SimpleDesc
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A80 - 00001A85 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_Init::?relay        00001A80        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A86 - 00001A8B (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_ProcessEvent::?relay
                                   00001A86        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A8C - 00001A91 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   AXD_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_ProcessZDOMsgs::?relay
                                   00001A8C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A92 - 00001A97 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   AXD_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_HandleKeys::?relay
                                   00001A92 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A98 - 00001A9D (0x6 bytes), align: 0
  Segment part 34.            Intra module refs:   AXD_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AXD_SendTheMessage::?relay
                                   00001A98 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001A9E - 00001AA3 (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   AXD_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           rxCB_Loopback::?relay   00001A9E 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\AccessCodeSpace.r51
  LIBRARY MODULE, NAME : osal_nv_util

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __KEIL__                00000000 
  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00000BD1 - 00000CEF (0x11f bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetCodeByte             00000BD1 
           nvReadByte              00000BFD        osal_nv_write (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
           nvReadWord              00000C01        calcChkF (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
           nvReadHdr               00000C05        compactPage (OSAL_Nv)
                                                   erasePage (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   setItem (OSAL_Nv)
                                                   writeIEEE (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
           nvReadBuf               00000BF9        osal_nv_read (OSAL_Nv)
           flashWriteBuf           00000C71        writeWord (OSAL_Nv)
                                                   writeWordM (OSAL_Nv)
           LOCAL                   ADDRESS         
           =====                   =======         
           _notBank2               00000BE6 
           read0                   00000C07 
           read1                   00000C39 
           read4                   00000C30 
           read5                   00000C36 
           read2                   00000C3B 
           ints0                   00000C53 
           read3                   00000C42 
           read7                   00000C66 
           read6                   00000C53 
           xdataWriteBeg           00000CDA 
           xdataWriteEnd           00000CF0 
           ints1                   00000C95 
           copy1                   00000C95 
           ints2                   00000CA7 
           ints3                   00000CB6 
           jump1                   00000CD8 
           wait0                   00000CC3 
           ints4                   00000CCD 
           loop1                   00000CE0 
           loop2                   00000CE2 
           wait1                   00000CE8 

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\DebugTrace.r51
    *************************************************************************

<<<<<<< HEAD
  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B059 - 0003B0ED (0x95 bytes), align: 0
  Segment part 8.             Intra module refs:   debug_str::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debug_str               0003B059 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000013 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B5F - 00001B64 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debug_str::?relay       00001B5F        HalLcdWriteString (hal_lcd)
=======
  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\MTEL.r51
    *************************************************************************
>>>>>>> develop

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\MT_AF.r51
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\MT_NWK.r51
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\MT_ZDO.r51
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\OSAL.r51
  PROGRAM MODULE, NAME : OSAL

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   ChkReset (OnBoard)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   ZDApp_event_loop (ZDApp)
                                                   cspPrepForTxProgram (mac_csp_tx)
                                                   erasePage (OSAL_Nv)
                                                   halAssertHazardLights (hal_assert)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDataTxEnqueue (mac_data)
                                                   macDataTxSend (mac_data)
                                                   macEventLoop (mac_main)
                                                   macLowLevelReset (mac_low_level)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuRfIsr (mac_mcu)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRadioUpdateTxPower (mac_radio)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxHardDisable (mac_rx_onoff)
                                                   macRxOff (mac_rx_onoff)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macRxOn (mac_rx_onoff)
                                                   macRxOnRequest (mac_rx_onoff)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxDoneCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_int_disable
                                                   osal_int_enable
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_msg_dequeue
                                                   osal_msg_enqueue
                                                   osal_msg_enqueue_max
                                                   osal_msg_extract
                                                   osal_msg_receive
                                                   osal_set_event
                                                   osal_start_system
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   rxStartIsr (mac_rx)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 
    -------------------------------------------------------------------------
<<<<<<< HEAD
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   MT_Reset
                                                   ZDApp_event_loop (ZDApp)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   000000C9 
    -------------------------------------------------------------------------
XDATA_AN
  Relative segment, address: XDATA 0000E000 - 0000E007 (0x8 bytes), align: 0
  Segment part 3.             Intra module refs:   MT_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mboxMsg                 0000E000 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE60 - 0000EE6F (0x10 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE70 - 0000EE7F (0x10 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE80 - 0000EE83 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTVersionString         0000EE80 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE84 - 0000EE87 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   MT_ProcessSerialCommand
                                                   osalTimerInit (OSAL_Timers)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          0000EE84 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE88 - 0000EE8B (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   MT_Reset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_53544159     0000EE88 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E4C6 - 0000E4C6 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   MT_ProcessEvent
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_TaskID               0000E4C6        SPIMgr_ProcessZToolData (SPIMgr)
                                                   debug_str (DebugTrace)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E4C7 - 0000E4C7 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   MT_SetDebugThreshold
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debugThreshold          0000E4C7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E4C8 - 0000E4C8 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   MT_SetDebugThreshold
                                                   MT_TaskInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           debugCompId             0000E4C8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E4C9 - 0000E4CA (0x2 bytes), align: 0
  Segment part 18.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           save_cmd                0000E4C9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015944 - 00015961 (0x1e bytes), align: 0
  Segment part 26.            Intra module refs:   MT_TaskInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_TaskInit             00015944 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015962 - 0001599F (0x3e bytes), align: 0
  Segment part 28.            Intra module refs:   MT_IndReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_IndReset             00015962 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000159A0 - 00015A08 (0x69 bytes), align: 0
  Segment part 30.            Intra module refs:   MT_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessEvent         000159A0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A09 - 00015ADE (0xd6 bytes), align: 0
  Segment part 32.            Intra module refs:   MT_BuildSPIMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildSPIMsg          00015A09 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001D ( 00000015 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015ADF - 00015B4E (0x70 bytes), align: 0
  Segment part 34.            Intra module refs:   MT_BuildAndSendZToolResponse::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildAndSendZToolResponse
                                   00015ADF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002D ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B4F - 00015C1F (0xd1 bytes), align: 0
  Segment part 38.            Intra module refs:   MT_ProcessCommand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessCommand       00015B4F 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015C20 - 00015E23 (0x204 bytes), align: 0
  Segment part 40.            Intra module refs:   MT_ProcessDebugMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessDebugMsg      00015C20 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000001D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015E24 - 00015EA1 (0x7e bytes), align: 0
  Segment part 42.            Intra module refs:   MT_ProcessDebugStr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessDebugStr      00015E24 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EA2 - 00015EF2 (0x51 bytes), align: 0
  Segment part 44.            Intra module refs:   MT_ProcessSetNV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessSetNV         00015EA2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015EF3 - 00015FD1 (0xdf bytes), align: 0
  Segment part 46.            Intra module refs:   MT_ProcessGetNV::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetNV         00015EF3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 00000016 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015FD2 - 0001621A (0x249 bytes), align: 0
  Segment part 48.            Intra module refs:   MT_ProcessGetNvInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetNvInfo     00015FD2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 0000001C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001621B - 000163FA (0x1e0 bytes), align: 0
  Segment part 50.            Intra module refs:   MT_ProcessGetDeviceInfo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetDeviceInfo
                                   0001621B 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 00000019 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000163FB - 00016B87 (0x78d bytes), align: 0
  Segment part 52.            Intra module refs:   MT_ProcessSerialCommand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessSerialCommand
                                   000163FB 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000002F )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016B88 - 00016C2F (0xa8 bytes), align: 0
  Segment part 54.            Intra module refs:   MTProcessLedControl::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessLedControl     00016B88 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016C30 - 00016D39 (0x10a bytes), align: 0
  Segment part 56.            Intra module refs:   MTProcessAppMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessAppMsg         00016C30 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 00000015 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016D3A - 00016D60 (0x27 bytes), align: 0
  Segment part 58.            Intra module refs:   MTProcessAppRspMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessAppRspMsg      00016D3A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016D61 - 00016DA2 (0x42 bytes), align: 0
  Segment part 60.            Intra module refs:   MT_RAMRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_RAMRead              00016D61 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DA3 - 00016DD8 (0x36 bytes), align: 0
  Segment part 62.            Intra module refs:   MT_RAMWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_RAMWrite             00016DA3 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DD9 - 00016DF1 (0x19 bytes), align: 0
  Segment part 64.            Intra module refs:   MT_SetDebugThreshold::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_SetDebugThreshold    00016DD9 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DF2 - 00016E1F (0x2e bytes), align: 0
  Segment part 66.            Intra module refs:   MT_Reset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_Reset                00016DF2 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E20 - 00016E5C (0x3d bytes), align: 0
  Segment part 68.            Intra module refs:   MT_SendErrorNotification::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_SendErrorNotification
                                   00016E20 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016E5D - 00016EC2 (0x66 bytes), align: 0
  Segment part 70.            Intra module refs:   MT_ReverseBytes::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ReverseBytes         00016E5D 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002B ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000239D - 000023AC (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023AD - 000023BC (0x10 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023BD - 000023C0 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   MTVersionString
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023C1 - 000023C4 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   __Constant_3e8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023C5 - 000023C8 (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   __Constant_53544159
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B65 - 00001B6A (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_TaskInit::?relay     00001B65        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B6B - 00001B70 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_IndReset::?relay     00001B6B        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B71 - 00001B76 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessEvent::?relay
                                   00001B71        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B77 - 00001B7C (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   MT_BuildAndSendZToolResponse
                                                   MT_ProcessDebugMsg
                                                   MT_ProcessDebugStr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildSPIMsg::?relay
                                   00001B77 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B7D - 00001B82 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   MTProcessAppRspMsg
                                                   MT_IndReset
                                                   MT_ProcessGetDeviceInfo
                                                   MT_ProcessGetNV
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
                                                   MT_SendErrorNotification
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_BuildAndSendZToolResponse::?relay
                                   00001B7D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B83 - 00001B88 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   MT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessCommand::?relay
                                   00001B83 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B89 - 00001B8E (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessDebugMsg::?relay
                                   00001B89 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B8F - 00001B94 (0x6 bytes), align: 0
  Segment part 43.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessDebugStr::?relay
                                   00001B8F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B95 - 00001B9A (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessSetNV::?relay
                                   00001B95 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B9B - 00001BA0 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetNV::?relay
                                   00001B9B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BA1 - 00001BA6 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetNvInfo::?relay
                                   00001BA1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BA7 - 00001BAC (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessGetDeviceInfo::?relay
                                   00001BA7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BAD - 00001BB2 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ProcessSerialCommand::?relay
                                   00001BAD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BB3 - 00001BB8 (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessLedControl::?relay
                                   00001BB3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BB9 - 00001BBE (0x6 bytes), align: 0
  Segment part 57.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessAppMsg::?relay
                                   00001BB9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BBF - 00001BC4 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   MT_ProcessCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MTProcessAppRspMsg::?relay
                                   00001BBF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BC5 - 00001BCA (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_RAMRead::?relay      00001BC5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BCB - 00001BD0 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_RAMWrite::?relay     00001BCB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BD1 - 00001BD6 (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_SetDebugThreshold::?relay
                                   00001BD1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BD7 - 00001BDC (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_Reset::?relay        00001BD7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BDD - 00001BE2 (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   MT_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_SendErrorNotification::?relay
                                   00001BDD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BE3 - 00001BE8 (0x6 bytes), align: 0
  Segment part 71.            Intra module refs:   MT_ProcessGetDeviceInfo
                                                   MT_ProcessGetNvInfo
                                                   MT_ProcessSerialCommand
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MT_ReverseBytes::?relay
                                   00001BE3 

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\MT_AF.r51
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\MT_NWK.r51
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\MT_ZDO.r51
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\OSAL.r51
  PROGRAM MODULE, NAME : OSAL

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000E4CB - 0000E4D4 (0xa bytes), align: 0
  Segment part 7.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E4D5 - 0000E4DE (0xa bytes), align: 0
  Segment part 8.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E4DF - 0000E4E8 (0xa bytes), align: 0
  Segment part 9.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E4E9 - 0000E4EA (0x2 bytes), align: 0
=======
XDATA_Z
  Relative segment, address: XDATA 0000E474 - 0000E47D (0xa bytes), align: 0
  Segment part 7.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E47E - 0000E487 (0xa bytes), align: 0
  Segment part 8.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E488 - 0000E491 (0xa bytes), align: 0
  Segment part 9.             Intra module refs:   _ltoa
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E492 - 0000E493 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 12.            Intra module refs:   osal_init_system
                                                   osal_msg_receive
                                                   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           osal_qHead              0000E4E9 
=======
           osal_qHead              0000E492 
>>>>>>> develop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8D4 - 0001B8E8 (0x15 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen             0001B8D4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8E9 - 0001B945 (0x5d bytes), align: 0
  Segment part 19.            Intra module refs:   osal_memcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy             0001B8E9 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000011 ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B946 - 0001B973 (0x2e bytes), align: 0
  Segment part 21.            Intra module refs:   osal_cpyExtAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_cpyExtAddr         0001B946 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B974 - 0001B9A0 (0x2d bytes), align: 0
  Segment part 23.            Intra module refs:   osal_memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset             0001B974 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B9A1 - 0001BAC4 (0x124 bytes), align: 0
  Segment part 27.            Intra module refs:   osal_build_uint32::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint32       0001B9A1 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BAC5 - 0001BEE5 (0x421 bytes), align: 0
  Segment part 29.            Intra module refs:   _ltoa::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa                   0001BAC5 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000002 ( 00000038 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BEE6 - 0001BF28 (0x43 bytes), align: 0
  Segment part 33.            Intra module refs:   osal_ExtAddrEqual::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ExtAddrEqual       0001BEE6 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF29 - 0001BF36 (0xe bytes), align: 0
  Segment part 35.            Intra module refs:   osal_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand               0001BF29 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF37 - 0001BFA6 (0x70 bytes), align: 0
  Segment part 37.            Intra module refs:   osal_msg_allocate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate       0001BF37 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFA7 - 0001BFEA (0x44 bytes), align: 0
  Segment part 39.            Intra module refs:   osal_msg_deallocate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate     0001BFA7 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BFEB - 0001C070 (0x86 bytes), align: 0
  Segment part 41.            Intra module refs:   osal_msg_send::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send           0001BFEB 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C071 - 0001C0FA (0x8a bytes), align: 0
  Segment part 43.            Intra module refs:   osal_msg_receive::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive        0001C071 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C0FB - 0001C16F (0x75 bytes), align: 0
  Segment part 45.            Intra module refs:   osal_msg_enqueue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue        0001C0FB 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C170 - 0001C1EF (0x80 bytes), align: 0
  Segment part 47.            Intra module refs:   osal_msg_dequeue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_dequeue        0001C170 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C1F0 - 0001C27D (0x8e bytes), align: 0
  Segment part 51.            Intra module refs:   osal_msg_extract::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract        0001C1F0 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C27E - 0001C30B (0x8e bytes), align: 0
  Segment part 53.            Intra module refs:   osal_msg_enqueue_max::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue_max    0001C27E 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C30C - 0001C365 (0x5a bytes), align: 0
  Segment part 55.            Intra module refs:   osal_set_event::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event          0001C30C 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C366 - 0001C377 (0x12 bytes), align: 0
  Segment part 59.            Intra module refs:   osal_int_enable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_enable         0001C366 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C378 - 0001C389 (0x12 bytes), align: 0
  Segment part 61.            Intra module refs:   osal_int_disable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable        0001C378 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C38A - 0001C3AF (0x26 bytes), align: 0
  Segment part 63.            Intra module refs:   osal_init_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system        0001C38A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C3B0 - 0001C4ED (0x13e bytes), align: 0
  Segment part 65.            Intra module refs:   osal_start_system::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system       0001C3B0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 000023C9 - 000023CA (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023CB - 000023CE (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   __Constant_2710
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023CF - 000023D2 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   __Constant_5f5e100
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BE9 - 00001BEE (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen::?relay     00001BE9        HalLcdWriteString (hal_lcd)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   debug_str (DebugTrace)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BEF - 00001BF4 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_cpyExtAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy::?relay     00001BEF        APSDE_DataIndication (APSMEDE_CB)
=======
  Relative segment, address: CODE 000021E2 - 000021E3 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021E4 - 000021E7 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   __Constant_2710
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021E8 - 000021EB (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   __Constant_5f5e100
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AA4 - 00001AA9 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_strlen::?relay     00001AA4        HalLcdWriteStringValue (hal_lcd)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AAA - 00001AAF (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   osal_cpyExtAddr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memcpy::?relay     00001AAA        APSDE_DataIndication (APSMEDE_CB)
>>>>>>> develop
                                                   BindWriteNV (BindingTable)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   Segment part 153 (APSMEDE)
                                                   Segment part 33 (APS)
                                                   Segment part 45 (mac_main)
                                                   Segment part 47 (APSMEDE_CB)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDO_ParseEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   bindAddEntry (BindingTable)
                                                   macScanRxBeacon (mac_scan)
                                                   nwk_BeaconFromNative (nwk)
                                                   sAddrExtCpy (saddr)
                                                   zgInit (ZGlobals)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001BF5 - 00001BFA (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001AB0 - 00001AB5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_cpyExtAddr::?relay
<<<<<<< HEAD
                                   00001BF5        APS_GetBind (APS)
=======
                                   00001AB0        APS_GetBind (APS)
>>>>>>> develop
                                                   AddrMgrExtAddrSet (AddrMgr)
                                                   NIB_init (nwk_globals)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   Segment part 27 (nwk_util)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ParseAddrRsp (ZDObject)
                                                   ZDO_ParseBindUnbindReq (ZDObject)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZMacGetReq (zmac)
                                                   ZMacSetReq (zmac)
                                                   bindingAddrMgsHelperConvert (BindingTable)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   zdpProcessAddrReq (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001BFB - 00001C00 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset::?relay     00001BFB        APSDE_DataReq (APSMEDE)
=======
  Relative segment, address: CODE 00001AB6 - 00001ABB (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_memset::?relay     00001AB6        APSDE_DataReq (APSMEDE)
>>>>>>> develop
                                                   APS_GetBind (APS)
                                                   AddrMgrExtAddrSet (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   InitBindingTable (BindingTable)
                                                   NIB_init (nwk_globals)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   ZMacScanReq (zmac)
                                                   bindRemoveEntry (BindingTable)
                                                   macSecCpy (mac_mgmt)
                                                   nwkNeighborClearEntry (nwk_util)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   osalInitTasks (OSAL_AXD)
                                                   reflectTrack_GetNewEntry (reflecttrack)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C01 - 00001C06 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001ABC - 00001AC1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_build_uint32::?relay
<<<<<<< HEAD
                                   00001C01        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C07 - 00001C0C (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa::?relay           00001C07        HalLcdWriteStringValue (hal_lcd)
                                                   HalLcdWriteValue (hal_lcd)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C0D - 00001C12 (0x6 bytes), align: 0
=======
                                   00001ABC        nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AC2 - 00001AC7 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ltoa::?relay           00001AC2        HalLcdWriteStringValue (hal_lcd)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AC8 - 00001ACD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_ExtAddrEqual::?relay
<<<<<<< HEAD
                                   00001C0D        AddrMgrEntryLookupExt (AddrMgr)
=======
                                   00001AC8        AddrMgrEntryLookupExt (AddrMgr)
>>>>>>> develop
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   Segment part 165 (APSMEDE)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   nwk_getNetworkDesc (nwk)
                                                   zdpProcessAddrReq (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C13 - 00001C18 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand::?relay       00001C13        ZDApp_ProcessNetworkJoin (ZDApp)
=======
  Relative segment, address: CODE 00001ACE - 00001AD3 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_rand::?relay       00001ACE        ZDApp_ProcessNetworkJoin (ZDApp)
>>>>>>> develop
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C19 - 00001C1E (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001AD4 - 00001AD9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_allocate::?relay
<<<<<<< HEAD
                                   00001C19        APSDE_DataIndication (APSMEDE_CB)
=======
                                   00001AD4        APSDE_DataIndication (APSMEDE_CB)
>>>>>>> develop
                                                   APS_CmdInd (APS)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Segment part 122 (nwk_util)
                                                   Segment part 47 (mac_main)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   macAllocTxBuffer (mac_data)
                                                   macDataRxMemAlloc (mac_data)
                                                   nwkBuildDataCnf (nwk)
                                                   nwk_ScanJoiningOrphan (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C1F - 00001C24 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001ADA - 00001ADF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 40.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_deallocate::?relay
<<<<<<< HEAD
                                   00001C1F        APSDE_DataIndication (APSMEDE_CB)
=======
                                   00001ADA        APSDE_DataIndication (APSMEDE_CB)
>>>>>>> develop
                                                   APS_event_loop (APS)
                                                   AXD_ProcessEvent (AXD)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   MAC_CbackEvent (zmac_cb)
                                                   ZDApp_event_loop (ZDApp)
                                                   macApiPending (mac_mgmt)
                                                   macDataReset (mac_data)
                                                   macDataRxMemFree (mac_data)
                                                   macEventLoop (mac_main)
                                                   macMainReset (mac_main)
                                                   macRxCompleteCallback (mac_data)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C25 - 00001C2A (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send::?relay   00001C25        APS_CmdInd (APS)
=======
  Relative segment, address: CODE 00001AE0 - 00001AE5 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_send::?relay   00001AE0        APS_CmdInd (APS)
>>>>>>> develop
                                                   MAC_CbackEvent (zmac_cb)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Segment part 20 (APSMEDE_CB)
                                                   Segment part 33 (mac_data)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   nwkBuildDataCnf (nwk)
                                                   nwk_ScanJoiningOrphan (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C2B - 00001C30 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001AE6 - 00001AEB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_receive::?relay
<<<<<<< HEAD
                                   00001C2B        APS_event_loop (APS)
=======
                                   00001AE6        APS_event_loop (APS)
>>>>>>> develop
                                                   AXD_ProcessEvent (AXD)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   ZDApp_event_loop (ZDApp)
                                                   macEventLoop (mac_main)
                                                   macMainReset (mac_main)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C31 - 00001C36 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001AEC - 00001AF1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 46.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue::?relay
<<<<<<< HEAD
                                   00001C31        macRxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C37 - 00001C3C (0x6 bytes), align: 0
=======
                                   00001AEC        macRxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AF2 - 00001AF7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_dequeue::?relay
<<<<<<< HEAD
                                   00001C37        macDataReset (mac_data)
                                                   macEventLoop (mac_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C3D - 00001C42 (0x6 bytes), align: 0
=======
                                   00001AF2        macDataReset (mac_data)
                                                   macEventLoop (mac_main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AF8 - 00001AFD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 52.            Intra module refs:   osal_msg_receive
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_extract::?relay
<<<<<<< HEAD
                                   00001C3D        macDataTxSend (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C43 - 00001C48 (0x6 bytes), align: 0
=======
                                   00001AF8        macDataTxSend (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001AFE - 00001B03 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_msg_enqueue_max::?relay
<<<<<<< HEAD
                                   00001C43        macDataTxEnqueue (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C49 - 00001C4E (0x6 bytes), align: 0
=======
                                   00001AFE        macDataTxEnqueue (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B04 - 00001B09 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 56.            Intra module refs:   osal_msg_send
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_set_event::?relay
<<<<<<< HEAD
                                   00001C49        HalLedBlink (hal_led)
=======
                                   00001B04        HalLedBlink (hal_led)
>>>>>>> develop
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLME_SetPollRate (nwk_util)
                                                   ZDApp_NetworkInit (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   macSetEvent (mac_main)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   osalTimerUpdate (OSAL_Timers)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C4F - 00001C54 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001B0A - 00001B0F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_enable::?relay
<<<<<<< HEAD
                                   00001C4F        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C55 - 00001C5A (0x6 bytes), align: 0
=======
                                   00001B0A        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B10 - 00001B15 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_int_disable::?relay
<<<<<<< HEAD
                                   00001C55        InitBoard (OnBoard)
=======
                                   00001B10        InitBoard (OnBoard)
>>>>>>> develop
                                                   ZMacInit (zmac)
                                                   main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C5B - 00001C60 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001B16 - 00001B1B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_init_system::?relay
<<<<<<< HEAD
                                   00001C5B        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C61 - 00001C66 (0x6 bytes), align: 0
=======
                                   00001B16        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B1C - 00001B21 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_system::?relay
<<<<<<< HEAD
                                   00001C61        main (ZMain)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE8C - 0000EE8D (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   _ltoa
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE8E - 0000EE91 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   _ltoa
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2710         0000EE8E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE92 - 0000EE95 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   _ltoa
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5f5e100      0000EE92 
=======
                                   00001B1C        main (ZMain)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDF7 - 0000EDF8 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   _ltoa
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDF9 - 0000EDFC (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   _ltoa
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2710         0000EDF9 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EDFD - 0000EE00 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   _ltoa
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5f5e100      0000EDFD 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\OSAL_AXD.r51
  PROGRAM MODULE, NAME : OSAL_AXD

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE96 - 0000EEA3 (0xe bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksArr                0000EE96        osal_start_system (OSAL)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EEA4 - 0000EEA4 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   osalInitTasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksCnt                0000EEA4        osal_msg_send (OSAL)
=======
  Relative segment, address: XDATA 0000EE01 - 0000EE0C (0xc bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksArr                0000EE01        osal_start_system (OSAL)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE0D - 0000EE0D (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   osalInitTasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksCnt                0000EE0D        osal_msg_send (OSAL)
>>>>>>> develop
                                                   osal_set_event (OSAL)
                                                   osal_start_system (OSAL)
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000E4EB - 0000E4EC (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   osalInitTasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksEvents             0000E4EB        osal_set_event (OSAL)
                                                   osal_start_system (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B174 - 0003B1F8 (0x85 bytes), align: 0
  Segment part 11.            Intra module refs:   osalInitTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks           0003B174 
=======
  Relative segment, address: XDATA 0000E494 - 0000E495 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   osalInitTasks
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tasksEvents             0000E494        osal_set_event (OSAL)
                                                   osal_start_system (OSAL)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000388A7 - 00038925 (0x7f bytes), align: 0
  Segment part 11.            Intra module refs:   osalInitTasks::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks           000388A7 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 000023D3 - 000023E0 (0xe bytes), align: 0
  Segment part 7.             Intra module refs:   tasksArr
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023E1 - 000023E1 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   tasksCnt
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C67 - 00001C6C (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks::?relay   00001C67        osal_init_system (OSAL)
=======
  Relative segment, address: CODE 000021EC - 000021F7 (0xc bytes), align: 0
  Segment part 7.             Intra module refs:   tasksArr
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021F8 - 000021F8 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   tasksCnt
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B22 - 00001B27 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalInitTasks::?relay   00001B22        osal_init_system (OSAL)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\OSAL_Memory.r51
  PROGRAM MODULE, NAME : OSAL_Memory

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000E4ED - 0000E4ED (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000E496 - 0000E496 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 7.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           ready                   0000E4ED 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E4EE - 0000E4EF (0x2 bytes), align: 0
=======
           ready                   0000E496 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E497 - 0000E498 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 8.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
                                                   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           ff1                     0000E4EE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E4F0 - 0000E4F1 (0x2 bytes), align: 0
=======
           ff1                     0000E497 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E499 - 0000E49A (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 9.             Intra module refs:   osal_mem_alloc
                                                   osal_mem_init
                                                   osal_mem_kick
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           ff2                     0000E4F0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E4F2 - 0000EB71 (0x680 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           _theHeap                0000E4F2 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EEA5 - 0000EEA6 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           theHeap                 0000EEA5 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A524 - 0003A5A7 (0x84 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_mem_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init           0003A524 
=======
           ff2                     0000E499 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000E49B - 0000EB1A (0x680 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 12
           LOCAL                   ADDRESS         
           =====                   =======         
           _theHeap                0000E49B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE0E - 0000EE0F (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   osal_mem_init
           LOCAL                   ADDRESS         
           =====                   =======         
           theHeap                 0000EE0E 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FA1A - 0002FA9D (0x84 bytes), align: 0
  Segment part 13.            Intra module refs:   osal_mem_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_init           0002FA1A 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A5A8 - 0003A5CF (0x28 bytes), align: 0
  Segment part 15.            Intra module refs:   osal_mem_kick::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick           0003A5A8 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FA9E - 0002FAC5 (0x28 bytes), align: 0
  Segment part 15.            Intra module refs:   osal_mem_kick::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick           0002FA9E 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A5D0 - 0003A735 (0x166 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_mem_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc          0003A5D0 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FAC6 - 0002FC2B (0x166 bytes), align: 0
  Segment part 17.            Intra module refs:   osal_mem_alloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc          0002FAC6 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000010 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A736 - 0003A78F (0x5a bytes), align: 0
  Segment part 19.            Intra module refs:   osal_mem_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free           0003A736 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FC2C - 0002FC85 (0x5a bytes), align: 0
  Segment part 19.            Intra module refs:   osal_mem_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free           0002FC2C 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 000023E2 - 000023E3 (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   theHeap
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C6D - 00001C72 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000021F9 - 000021FA (0x2 bytes), align: 0
  Segment part 12.            Intra module refs:   theHeap
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B28 - 00001B2D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 14.            Intra module refs:   osal_mem_alloc
                                                   osal_mem_free
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           osal_mem_init::?relay   00001C6D        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C73 - 00001C78 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick::?relay   00001C73        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C79 - 00001C7E (0x6 bytes), align: 0
=======
           osal_mem_init::?relay   00001B28        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B2E - 00001B33 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_kick::?relay   00001B2E        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B34 - 00001B39 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 18.            Intra module refs:   osal_mem_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_alloc::?relay
<<<<<<< HEAD
                                   00001C79        AddrMgrInit (AddrMgr)
                                                   HalLcdWriteString (hal_lcd)
=======
                                   00001B34        AddrMgrInit (AddrMgr)
>>>>>>> develop
                                                   HalUARTOpen (hal_uart)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_SendMsg (nwk_util)
                                                   ZDO_ParseAddrRsp (ZDObject)
                                                   ZDO_ParseEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_RegisterForZDOMsg (ZDProfile)
                                                   ZMacScanReq (zmac)
                                                   afRegisterExtended (AF)
                                                   aps_AddGroup (aps_groups)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_AXD)
                                                   osal_msg_allocate (OSAL)
                                                   reflectTrack_GetNewEntry (reflecttrack)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C7F - 00001C84 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free::?relay   00001C7F        AF_DataRequest (AF)
=======
  Relative segment, address: CODE 00001B3A - 00001B3F (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_mem_free::?relay   00001B3A        AF_DataRequest (AF)
>>>>>>> develop
                                                   AXD_ProcessZDOMsgs (AXD)
                                                   MAC_CbackEvent (zmac_cb)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   Segment part 143 (APSMEDE)
                                                   Segment part 56 (nwk_bufs)
                                                   ZDApp_ProcessMsgCBs (ZDApp)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZMacReset (zmac)
                                                   afIncomingData (AF)
                                                   aps_RemoveGroup (aps_groups)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_desc_list_free (nwk)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_msg_deallocate (OSAL)
                                                   reflectTrack_RemoveEntry (reflecttrack)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\OSAL_Nv.r51
  PROGRAM MODULE, NAME : OSAL_Nv

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000AB - 000000AB (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   osal_nv_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FWT                     000000AB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AD - 000000AD (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   erasePage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FADDRH                  000000AD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AE - 000000AE (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   erasePage
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FCTL                    000000AE 
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EB72 - 0000EB87 (0x16 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flashXdataBuf           0000EB72        Segment part 0 (osal_nv_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB88 - 0000EB8B (0x4 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EB1B - 0000EB30 (0x16 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flashXdataBuf           0000EB1B        Segment part 0 (osal_nv_util)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB31 - 0000EB34 (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   compactPage
                                                   erasePage
                                                   initItem
                                                   initPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           pgOff                   0000EB88 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB8C - 0000EB8F (0x4 bytes), align: 0
=======
           pgOff                   0000EB31 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB35 - 0000EB38 (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 12.            Intra module refs:   erasePage
                                                   initItem
                                                   initPage
                                                   setItem
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           pgLost                  0000EB8C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB90 - 0000EB90 (0x1 bytes), align: 0
=======
           pgLost                  0000EB35 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB39 - 0000EB39 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 13.            Intra module refs:   compactPage
                                                   initItem
                                                   initNV
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           pgRes                   0000EB90 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB91 - 0000EB91 (0x1 bytes), align: 0
=======
           pgRes                   0000EB39 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB3A - 0000EB3A (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 14.            Intra module refs:   findItem
                                                   initPage
                                                   osal_nv_read
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           findPg                  0000EB91 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB92 - 0000EB92 (0x1 bytes), align: 0
=======
           findPg                  0000EB3A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB3B - 0000EB3B (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 15.            Intra module refs:   erasePage
                                                   osal_nv_item_init
                                                   osal_nv_write
                                                   writeIEEE
                                                   writeWord
                                                   writeWordM
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           failF                   0000EB92 
=======
           failF                   0000EB3B 
>>>>>>> develop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014001 - 000141E8 (0x1e8 bytes), align: 0
  Segment part 16.            Intra module refs:   initNV::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           initNV                  00014001 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000025 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000141E9 - 0001423D (0x55 bytes), align: 0
  Segment part 18.            Intra module refs:   setPageUse::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           setPageUse              000141E9 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001D ( 00000011 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001423E - 000144D7 (0x29a bytes), align: 0
  Segment part 20.            Intra module refs:   initPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           initPage                0001423E 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001D ( 0000001C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000144D8 - 000145A0 (0xc9 bytes), align: 0
  Segment part 22.            Intra module refs:   erasePage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           erasePage               000144D8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001D ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000145A1 - 000147C6 (0x226 bytes), align: 0
  Segment part 24.            Intra module refs:   compactPage::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           compactPage             000145A1 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000025 ( 0000001C )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000147C7 - 00014838 (0x72 bytes), align: 0
  Segment part 26.            Intra module refs:   findItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           findItem                000147C7 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000025 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014839 - 000149E6 (0x1ae bytes), align: 0
  Segment part 28.            Intra module refs:   initItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           initItem                00014839 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000027 ( 00000017 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000149E7 - 00014AD5 (0xef bytes), align: 0
  Segment part 30.            Intra module refs:   setItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           setItem                 000149E7 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000025 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014AD6 - 00014B7B (0xa6 bytes), align: 0
  Segment part 32.            Intra module refs:   calcChkB::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           calcChkB                00014AD6 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001B ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014B7C - 00014C21 (0xa6 bytes), align: 0
  Segment part 34.            Intra module refs:   calcChkF::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           calcChkF                00014B7C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000025 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C22 - 00014C72 (0x51 bytes), align: 0
  Segment part 36.            Intra module refs:   writeWord::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWord               00014C22 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001B ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014C73 - 00014CC9 (0x57 bytes), align: 0
  Segment part 38.            Intra module refs:   writeWordM::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWordM              00014C73 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014CCA - 00014D32 (0x69 bytes), align: 0
  Segment part 40.            Intra module refs:   writeWordH::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeWordH              00014CCA 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000025 ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014D33 - 00014F34 (0x202 bytes), align: 0
  Segment part 42.            Intra module refs:   writeBuf::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeBuf                00014D33 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000027 ( 00000014 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00014F35 - 000150FE (0x1ca bytes), align: 0
  Segment part 44.            Intra module refs:   xferBuf::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           xferBuf                 00014F35 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000029 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000150FF - 0001530F (0x211 bytes), align: 0
  Segment part 46.            Intra module refs:   writeItem::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem               000150FF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000017 ( 0000001D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015310 - 000153A5 (0x96 bytes), align: 0
  Segment part 48.            Intra module refs:   writeIEEE::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           writeIEEE               00015310 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000025 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000153A6 - 000153B5 (0x10 bytes), align: 0
  Segment part 50.            Intra module refs:   osal_nv_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_init            000153A6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000153B6 - 0001542B (0x76 bytes), align: 0
  Segment part 52.            Intra module refs:   osal_nv_item_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_item_init       000153B6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000002 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001542C - 00015853 (0x428 bytes), align: 0
  Segment part 56.            Intra module refs:   osal_nv_write::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_write           0001542C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000004 ( 00000029 )
               stack 4 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015854 - 000158D6 (0x83 bytes), align: 0
  Segment part 58.            Intra module refs:   osal_nv_read::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_read            00015854 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000004 ( 00000012 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001C85 - 00001C8A (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001B40 - 00001B45 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 17.            Intra module refs:   initNV
                                                   osal_nv_init
                                                   osal_nv_item_init
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           initNV::?relay          00001C85 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C8B - 00001C90 (0x6 bytes), align: 0
=======
           initNV::?relay          00001B40 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B46 - 00001B4B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 19.            Intra module refs:   compactPage
                                                   initNV
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           setPageUse::?relay      00001C8B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C91 - 00001C96 (0x6 bytes), align: 0
=======
           setPageUse::?relay      00001B46 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B4C - 00001B51 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 21.            Intra module refs:   findItem
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           initPage::?relay        00001C91 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C97 - 00001C9C (0x6 bytes), align: 0
=======
           initPage::?relay        00001B4C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B52 - 00001B57 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 23.            Intra module refs:   compactPage
                                                   initNV
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           erasePage::?relay       00001C97 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C9D - 00001CA2 (0x6 bytes), align: 0
=======
           erasePage::?relay       00001B52 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B58 - 00001B5D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 25.            Intra module refs:   initItem
                                                   initNV
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           compactPage::?relay     00001C9D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CA3 - 00001CA8 (0x6 bytes), align: 0
=======
           compactPage::?relay     00001B58 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B5E - 00001B63 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 27.            Intra module refs:   findItem
                                                   initPage
                                                   osal_nv_item_init
                                                   osal_nv_read
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           findItem::?relay        00001CA3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CA9 - 00001CAE (0x6 bytes), align: 0
=======
           findItem::?relay        00001B5E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B64 - 00001B69 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 29.            Intra module refs:   osal_nv_item_init
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           initItem::?relay        00001CA9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CAF - 00001CB4 (0x6 bytes), align: 0
=======
           initItem::?relay        00001B64 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B6A - 00001B6F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 31.            Intra module refs:   compactPage
                                                   initPage
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           setItem::?relay         00001CAF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CB5 - 00001CBA (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           calcChkB::?relay        00001CB5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CBB - 00001CC0 (0x6 bytes), align: 0
=======
           setItem::?relay         00001B6A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B70 - 00001B75 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
           calcChkB::?relay        00001B70 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B76 - 00001B7B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   compactPage
                                                   initPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           calcChkF::?relay        00001CBB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CC1 - 00001CC6 (0x6 bytes), align: 0
=======
           calcChkF::?relay        00001B76 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B7C - 00001B81 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 37.            Intra module refs:   setItem
                                                   setPageUse
                                                   writeBuf
                                                   writeItem
                                                   writeWordH
                                                   xferBuf
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           writeWord::?relay       00001CC1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CC7 - 00001CCC (0x6 bytes), align: 0
=======
           writeWord::?relay       00001B7C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B82 - 00001B87 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.            Intra module refs:   erasePage
                                                   initNV
                                                   writeBuf
                                                   writeIEEE
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           writeWordM::?relay      00001CC7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CCD - 00001CD2 (0x6 bytes), align: 0
=======
           writeWordM::?relay      00001B82 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B88 - 00001B8D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 41.            Intra module refs:   compactPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           writeWordH::?relay      00001CCD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CD3 - 00001CD8 (0x6 bytes), align: 0
=======
           writeWordH::?relay      00001B88 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B8E - 00001B93 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 43.            Intra module refs:   compactPage
                                                   osal_nv_write
                                                   writeItem
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           writeBuf::?relay        00001CD3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CD9 - 00001CDE (0x6 bytes), align: 0
=======
           writeBuf::?relay        00001B8E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B94 - 00001B99 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 45.            Intra module refs:   compactPage
                                                   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           xferBuf::?relay         00001CD9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CDF - 00001CE4 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   initItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem::?relay       00001CDF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CE5 - 00001CEA (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           writeIEEE::?relay       00001CE5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CEB - 00001CF0 (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_init::?relay    00001CEB        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CF1 - 00001CF6 (0x6 bytes), align: 0
=======
           xferBuf::?relay         00001B94 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001B9A - 00001B9F (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   initItem
           LOCAL                   ADDRESS         
           =====                   =======         
           writeItem::?relay       00001B9A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BA0 - 00001BA5 (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   osal_nv_write
           LOCAL                   ADDRESS         
           =====                   =======         
           writeIEEE::?relay       00001BA0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BA6 - 00001BAB (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_init::?relay    00001BA6        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BAC - 00001BB1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_item_init::?relay
<<<<<<< HEAD
                                   00001CF1        BindInitNV (BindingTable)
=======
                                   00001BAC        BindInitNV (BindingTable)
>>>>>>> develop
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   zgItemInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001CF7 - 00001CFC (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_item_len::?relay
                                   00001CF7        MT_ProcessGetNV (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   MT_ProcessSetNV (MTEL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CFD - 00001D02 (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_write::?relay   00001CFD        BindSetDefaultNV (BindingTable)
=======
  Relative segment, address: CODE 00001BB2 - 00001BB7 (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_write::?relay   00001BB2        BindSetDefaultNV (BindingTable)
>>>>>>> develop
                                                   BindWriteNV (BindingTable)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   zgItemInit (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001D03 - 00001D08 (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_read::?relay    00001D03        BindRestoreFromNV (BindingTable)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNV (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
=======
  Relative segment, address: CODE 00001BB8 - 00001BBD (0x6 bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_nv_read::?relay    00001BB8        BindRestoreFromNV (BindingTable)
>>>>>>> develop
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   zgItemInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\OSAL_PwrMgr.r51
  PROGRAM MODULE, NAME : OSAL_PwrMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EB93 - 0000EB99 (0x7 bytes), align: 0
  Segment part 6.             Intra module refs:   osal_pwrmgr_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pwrmgr_attribute        0000EB93 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B3A6 - 0003B3C0 (0x1b bytes), align: 0
  Segment part 7.             Intra module refs:   osal_pwrmgr_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init        0003B3A6 
=======
  Relative segment, address: XDATA 0000EB3C - 0000EB42 (0x7 bytes), align: 0
  Segment part 6.             Intra module refs:   osal_pwrmgr_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pwrmgr_attribute        0000EB3C 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038AE8 - 00038B02 (0x1b bytes), align: 0
  Segment part 7.             Intra module refs:   osal_pwrmgr_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init        00038AE8 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001D09 - 00001D0E (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001BBE - 00001BC3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_pwrmgr_init::?relay
<<<<<<< HEAD
                                   00001D09        osal_init_system (OSAL)
=======
                                   00001BBE        osal_init_system (OSAL)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\OSAL_Tasks.r51
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\OSAL_Timers.r51
  PROGRAM MODULE, NAME : OSAL_Timers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EB9A - 0000EB9B (0x2 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EB43 - 0000EB44 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 7.             Intra module refs:   osalAddTimer
                                                   osalDeleteTimer
                                                   osalFindTimer
                                                   osalTimerUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           timerHead               0000EB9A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB9C - 0000EB9F (0x4 bytes), align: 0
=======
           timerHead               0000EB43 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB45 - 0000EB48 (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 8.             Intra module refs:   osalTimerInit
                                                   osal_timer_hw_setup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           tmr_count               0000EB9C 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBA0 - 0000EBA1 (0x2 bytes), align: 0
=======
           tmr_count               0000EB45 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB49 - 0000EB4A (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 9.             Intra module refs:   osalTimerInit
                                                   osal_update_timers
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           tmr_decr_time           0000EBA0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBA2 - 0000EBA2 (0x1 bytes), align: 0
=======
           tmr_decr_time           0000EB49 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB4B - 0000EB4B (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 10.            Intra module refs:   osalTimerInit
                                                   osal_start_timerEx
                                                   osal_timer_activate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           timerActive             0000EBA2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBA3 - 0000EBA6 (0x4 bytes), align: 0
=======
           timerActive             0000EB4B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB4C - 0000EB4F (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   osalTimerInit
                                                   osalTimerUpdate
                                                   osal_GetSystemClock
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           osal_systemClock        0000EBA3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E17D - 0002E1BB (0x3f bytes), align: 0
  Segment part 16.            Intra module refs:   osalTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit           0002E17D 
=======
           osal_systemClock        0000EB4C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002BFED - 0002C02B (0x3f bytes), align: 0
  Segment part 16.            Intra module refs:   osalTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit           0002BFED 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E1BC - 0002E2C8 (0x10d bytes), align: 0
  Segment part 18.            Intra module refs:   osalAddTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer            0002E1BC 
=======
  Relative segment, address: CODE 0002C02C - 0002C138 (0x10d bytes), align: 0
  Segment part 18.            Intra module refs:   osalAddTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer            0002C02C 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000010 ( 00000012 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E2C9 - 0002E318 (0x50 bytes), align: 0
  Segment part 20.            Intra module refs:   osalFindTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer           0002E2C9 
=======
  Relative segment, address: CODE 0002C139 - 0002C188 (0x50 bytes), align: 0
  Segment part 20.            Intra module refs:   osalFindTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalFindTimer           0002C139 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000012 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E319 - 0002E3D5 (0xbd bytes), align: 0
  Segment part 22.            Intra module refs:   osalDeleteTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer         0002E319 
=======
  Relative segment, address: CODE 0002C189 - 0002C245 (0xbd bytes), align: 0
  Segment part 22.            Intra module refs:   osalDeleteTimer::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer         0002C189 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E3D6 - 0002E436 (0x61 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_start_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx      0002E3D6 
=======
  Relative segment, address: CODE 0002C246 - 0002C2A6 (0x61 bytes), align: 0
  Segment part 24.            Intra module refs:   osal_start_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx      0002C246 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E437 - 0002E487 (0x51 bytes), align: 0
  Segment part 26.            Intra module refs:   osal_stop_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx       0002E437 
=======
  Relative segment, address: CODE 0002C2A7 - 0002C2F7 (0x51 bytes), align: 0
  Segment part 26.            Intra module refs:   osal_stop_timerEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx       0002C2A7 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E488 - 0002E4DA (0x53 bytes), align: 0
  Segment part 28.            Intra module refs:   osal_get_timeoutEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx      0002E488 
=======
  Relative segment, address: CODE 0002C2F8 - 0002C34A (0x53 bytes), align: 0
  Segment part 28.            Intra module refs:   osal_get_timeoutEx::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx      0002C2F8 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E4DB - 0002E4F0 (0x16 bytes), align: 0
  Segment part 30.            Intra module refs:   osal_timer_activate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_activate     0002E4DB 
=======
  Relative segment, address: CODE 0002C34B - 0002C360 (0x16 bytes), align: 0
  Segment part 30.            Intra module refs:   osal_timer_activate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_activate     0002C34B 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000010 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E4F1 - 0002E519 (0x29 bytes), align: 0
  Segment part 34.            Intra module refs:   osal_timer_hw_setup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_hw_setup     0002E4F1 
=======
  Relative segment, address: CODE 0002C361 - 0002C389 (0x29 bytes), align: 0
  Segment part 34.            Intra module refs:   osal_timer_hw_setup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_hw_setup     0002C361 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E51A - 0002E65B (0x142 bytes), align: 0
  Segment part 38.            Intra module refs:   osalTimerUpdate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           osalTimerUpdate         0002E51A 
=======
  Relative segment, address: CODE 0002C38A - 0002C4CB (0x142 bytes), align: 0
  Segment part 38.            Intra module refs:   osalTimerUpdate::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           osalTimerUpdate         0002C38A 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000013 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E65C - 0002E671 (0x16 bytes), align: 0
  Segment part 40.            Intra module refs:   osal_update_timers::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_update_timers      0002E65C 
=======
  Relative segment, address: CODE 0002C4CC - 0002C4E1 (0x16 bytes), align: 0
  Segment part 40.            Intra module refs:   osal_update_timers::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_update_timers      0002C4CC 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002E672 - 0002E68B (0x1a bytes), align: 0
  Segment part 42.            Intra module refs:   osal_GetSystemClock::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock     0002E672 
=======
  Relative segment, address: CODE 0002C4E2 - 0002C4FB (0x1a bytes), align: 0
  Segment part 42.            Intra module refs:   osal_GetSystemClock::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock     0002C4E2 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EEA7 - 0000EEAA (0x4 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EE10 - 0000EE13 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   osalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e8          0000EE10 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021FB - 000021FE (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   __Constant_3e8
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE14 - 0000EE17 (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 14.            Intra module refs:   NLDE_DataIndSend (nwk_util)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ZDO_StartDevice (ZDObject)
                                                   halAssertHazardLights (hal_assert)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           __Constant_0            0000EEA7 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023E4 - 000023E7 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   __Constant_0
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D0F - 00001D14 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit::?relay   00001D0F        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D15 - 00001D1A (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer::?relay    00001D15 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D1B - 00001D20 (0x6 bytes), align: 0
=======
           __Constant_0            0000EE14 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000021FF - 00002202 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   __Constant_0
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BC4 - 00001BC9 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalTimerInit::?relay   00001BC4        osal_init_system (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BCA - 00001BCF (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalAddTimer::?relay    00001BCA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BD0 - 00001BD5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 21.            Intra module refs:   osalAddTimer
                                                   osal_get_timeoutEx
                                                   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           osalFindTimer::?relay   00001D1B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D21 - 00001D26 (0x6 bytes), align: 0
=======
           osalFindTimer::?relay   00001BD0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BD6 - 00001BDB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 23.            Intra module refs:   osal_stop_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osalDeleteTimer::?relay
<<<<<<< HEAD
                                   00001D21 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D27 - 00001D2C (0x6 bytes), align: 0
=======
                                   00001BD6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BDC - 00001BE1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_start_timerEx::?relay
<<<<<<< HEAD
                                   00001D27        AXD_ProcessEvent (AXD)
=======
                                   00001BDC        AXD_ProcessEvent (AXD)
>>>>>>> develop
                                                   HalKeyConfig (hal_key)
                                                   HalLedUpdate (hal_led)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_SetPollRate (nwk_util)
                                                   Segment part 40 (nwk)
                                                   ZDApp_NVUpdate (ZDApp)
                                                   ZDApp_NetworkInit (ZDApp)
                                                   ZDApp_ResetTimerStart (ZDApp)
                                                   ZDO_StartDevice (ZDObject)
                                                   halProcessKeyInterrupt (hal_key)
                                                   nwk_event_loop (nwk)
                                                   rxCB_Loopback (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001D2D - 00001D32 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001BE2 - 00001BE7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_stop_timerEx::?relay
<<<<<<< HEAD
                                   00001D2D        HalKeyConfig (hal_key)
=======
                                   00001BE2        HalKeyConfig (hal_key)
>>>>>>> develop
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   Segment part 83 (nwk_util)
                                                   nwk_event_loop (nwk)
                                                   rxCB_Loopback (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001D33 - 00001D38 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001BE8 - 00001BED (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_get_timeoutEx::?relay
<<<<<<< HEAD
                                   00001D33        AddrMgrWriteNVRequest (ZDApp)
=======
                                   00001BE8        AddrMgrWriteNVRequest (ZDApp)
>>>>>>> develop
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   Segment part 29 (nwk_bufs)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001D39 - 00001D3E (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001BEE - 00001BF3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 31.            Intra module refs:   osalTimerInit
                                                   osal_start_timerEx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_activate::?relay
<<<<<<< HEAD
                                   00001D39 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D3F - 00001D44 (0x6 bytes), align: 0
=======
                                   00001BEE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BF4 - 00001BF9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   osal_timer_activate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_timer_hw_setup::?relay
<<<<<<< HEAD
                                   00001D3F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D45 - 00001D4A (0x6 bytes), align: 0
=======
                                   00001BF4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001BFA - 00001BFF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.            Intra module refs:   osal_update_timers
           LOCAL                   ADDRESS         
           =====                   =======         
           osalTimerUpdate::?relay
<<<<<<< HEAD
                                   00001D45 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D4B - 00001D50 (0x6 bytes), align: 0
=======
                                   00001BFA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C00 - 00001C05 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_update_timers::?relay
<<<<<<< HEAD
                                   00001D4B        Onboard_TimerCallBack (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D51 - 00001D56 (0x6 bytes), align: 0
=======
                                   00001C00        Onboard_TimerCallBack (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C06 - 00001C0B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           osal_GetSystemClock::?relay
<<<<<<< HEAD
                                   00001D51        HalLedBlink (hal_led)
=======
                                   00001C06        HalLedBlink (hal_led)
>>>>>>> develop
                                                   HalLedUpdate (hal_led)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\OnBoard.r51
  PROGRAM MODULE, NAME : OnBoard

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   ChkReset
                                                   halAssertHazardLights (hal_assert)
                                                   macSleepWakeUp (mac_sleep)
                                                   main (ZMain)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEP                   000000BE 
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EBA7 - 0000EBA7 (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EB50 - 0000EB50 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 8.             Intra module refs:   InitBoard
                                                   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           OnboardKeyIntEnable     0000EBA7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBA8 - 0000EBA8 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardTimerIntEnable   0000EBA8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBA9 - 0000EBB0 (0x8 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aExtendedAddress        0000EBA9        ZMacGetReq (zmac)
=======
           OnboardKeyIntEnable     0000EB50 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB51 - 0000EB51 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnboardTimerIntEnable   0000EB51 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB52 - 0000EB59 (0x8 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           aExtendedAddress        0000EB52        ZMacGetReq (zmac)
>>>>>>> develop
                                                   ZMacReset (zmac)
                                                   ZMacSetReq (zmac)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EEAB - 0000EEAB (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EE18 - 0000EE18 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   OnBoard_SendKeys
                                                   RegisterForKeys
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           registeredKeysTaskID    0000EEAB 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039DB7 - 00039E0F (0x59 bytes), align: 0
  Segment part 13.            Intra module refs:   InitBoard::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard               00039DB7 
=======
           registeredKeysTaskID    0000EE18 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F52D - 0002F582 (0x56 bytes), align: 0
  Segment part 13.            Intra module refs:   InitBoard::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard               0002F52D 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039E10 - 00039E66 (0x57 bytes), align: 0
  Segment part 15.            Intra module refs:   ChkReset::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ChkReset                00039E10 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F583 - 0002F5D9 (0x57 bytes), align: 0
  Segment part 15.            Intra module refs:   ChkReset::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ChkReset                0002F583 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039E67 - 00039E86 (0x20 bytes), align: 0
  Segment part 17.            Intra module refs:   RegisterForKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys         00039E67 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F5DA - 0002F5F9 (0x20 bytes), align: 0
  Segment part 17.            Intra module refs:   RegisterForKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys         0002F5DA 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039E87 - 00039EE1 (0x5b bytes), align: 0
  Segment part 19.            Intra module refs:   OnBoard_SendKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys        00039E87 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F5FA - 0002F654 (0x5b bytes), align: 0
  Segment part 19.            Intra module refs:   OnBoard_SendKeys::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys        0002F5FA 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039EE2 - 00039F13 (0x32 bytes), align: 0
  Segment part 21.            Intra module refs:   OnBoard_KeyCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback     00039EE2 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F655 - 0002F686 (0x32 bytes), align: 0
  Segment part 21.            Intra module refs:   OnBoard_KeyCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback     0002F655 
>>>>>>> develop
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039F14 - 00039FD4 (0xc1 bytes), align: 0
  Segment part 25.            Intra module refs:   _itoa::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa                   00039F14 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F687 - 0002F747 (0xc1 bytes), align: 0
  Segment part 25.            Intra module refs:   _itoa::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa                   0002F687 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000014 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039FD5 - 00039FF9 (0x25 bytes), align: 0
  Segment part 27.            Intra module refs:   Onboard_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand            00039FD5 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F748 - 0002F76C (0x25 bytes), align: 0
  Segment part 27.            Intra module refs:   Onboard_rand::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand            0002F748 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039FFA - 0003A017 (0x1e bytes), align: 0
  Segment part 29.            Intra module refs:   Onboard_wait::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_wait            00039FFA 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F76D - 0002F78A (0x1e bytes), align: 0
  Segment part 29.            Intra module refs:   Onboard_wait::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_wait            0002F76D 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A018 - 0003A033 (0x1c bytes), align: 0
  Segment part 31.            Intra module refs:   Onboard_TimerCallBack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_TimerCallBack   0003A018 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F78B - 0002F7A6 (0x1c bytes), align: 0
  Segment part 31.            Intra module refs:   Onboard_TimerCallBack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_TimerCallBack   0002F78B 
>>>>>>> develop
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 000023E8 - 000023E8 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   registeredKeysTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D57 - 00001D5C (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard::?relay       00001D57        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D5D - 00001D62 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   InitBoard
           LOCAL                   ADDRESS         
           =====                   =======         
           ChkReset::?relay        00001D5D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D63 - 00001D68 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00002203 - 00002203 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   registeredKeysTaskID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C0C - 00001C11 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitBoard::?relay       00001C0C        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C12 - 00001C17 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   InitBoard
           LOCAL                   ADDRESS         
           =====                   =======         
           ChkReset::?relay        00001C12 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C18 - 00001C1D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegisterForKeys::?relay
<<<<<<< HEAD
                                   00001D63        AXD_Init (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D69 - 00001D6E (0x6 bytes), align: 0
=======
                                   00001C18        AXD_Init (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C1E - 00001C23 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 20.            Intra module refs:   OnBoard_KeyCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_SendKeys::?relay
<<<<<<< HEAD
                                   00001D69        MT_ProcessSerialCommand (MTEL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D6F - 00001D74 (0x6 bytes), align: 0
=======
                                   00001C1E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C24 - 00001C29 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OnBoard_KeyCallback::?relay
<<<<<<< HEAD
                                   00001D6F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D75 - 00001D7A (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa::?relay           00001D75        _ltoa (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D7B - 00001D80 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand::?relay    00001D7B        osal_rand (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D81 - 00001D86 (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   ChkReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_wait::?relay    00001D81        zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D87 - 00001D8C (0x6 bytes), align: 0
=======
                                   00001C24 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C2A - 00001C2F (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _itoa::?relay           00001C2A        _ltoa (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C30 - 00001C35 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_rand::?relay    00001C30        osal_rand (OSAL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C36 - 00001C3B (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   ChkReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_wait::?relay    00001C36        zmain_ext_addr (ZMain)
                                                   zmain_vdd_check (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C3C - 00001C41 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 32.            Intra module refs:   InitBoard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Onboard_TimerCallBack::?relay
<<<<<<< HEAD
                                   00001D87 
=======
                                   00001C3C 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\ReadAXD.r51
  PROGRAM MODULE, NAME : ReadAXD

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFFD - 0002FFFF (0x3 bytes), align: 0
  Segment part 6.             Intra module refs:   zb_HandleOsalEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zb_HandleOsalEvent      0002FFFD 
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001D8D - 00001D92 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001C42 - 00001C47 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zb_HandleOsalEvent::?relay
<<<<<<< HEAD
                                   00001D8D        AXD_ProcessEvent (AXD)
=======
                                   00001C42        AXD_ProcessEvent (AXD)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\SPIMgr.r51
<<<<<<< HEAD
  PROGRAM MODULE, NAME : SPIMgr

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000EBB1 - 0000EBB1 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   SPIMgr_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           App_TaskID              0000EBB1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBB2 - 0000EBB2 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           state                   0000EBB2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBB3 - 0000EBB4 (0x2 bytes), align: 0
  Segment part 8.             Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CMD_Token               0000EBB3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBB5 - 0000EBB5 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LEN_Token               0000EBB5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBB6 - 0000EBB6 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FSC_Token               0000EBB6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBB7 - 0000EBB8 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI_Msg                 0000EBB7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBB9 - 0000EBB9 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tempDataLen             0000EBB9 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038A8C - 00038B1E (0x93 bytes), align: 0
  Segment part 13.            Intra module refs:   SPIMgr_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_Init             00038A8C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001D )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038B1F - 00038B47 (0x29 bytes), align: 0
  Segment part 17.            Intra module refs:   SPIMgr_CalcFCS::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_CalcFCS          00038B1F 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038B48 - 00038D76 (0x22f bytes), align: 0
  Segment part 19.            Intra module refs:   SPIMgr_ProcessZToolData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_ProcessZToolData
                                   00038B48 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D93 - 00001D98 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_Init::?relay     00001D93        MT_TaskInit (MTEL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D99 - 00001D9E (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   SPIMgr_ProcessZToolData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_CalcFCS::?relay
                                   00001D99        MT_BuildSPIMsg (MTEL)
                                                   MT_ProcessCommand (MTEL)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D9F - 00001DA4 (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   SPIMgr_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPIMgr_ProcessZToolData::?relay
                                   00001D9F 

=======
>>>>>>> develop
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\ZDApp.r51
  PROGRAM MODULE, NAME : ZDApp

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   000000C9 
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EEAC - 0000EEAC (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdoDiscCounter          0000EEAC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBBA - 0000EBC2 (0x9 bytes), align: 0
  Segment part 11.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppNwkAddr            0000EBBA        ZDO_ProcessMatchDescReq (ZDObject)
=======
  Relative segment, address: XDATA 0000EE19 - 0000EE19 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdoDiscCounter          0000EE19 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB5A - 0000EB62 (0x9 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppNwkAddr            0000EB5A        ZDO_ProcessMatchDescReq (ZDObject)
>>>>>>> develop
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   zdpProcessAddrReq (ZDProfile)
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EEAD - 0000EEAD (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           continueJoining         0000EEAD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBC3 - 0000EBC3 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _tmpRejoinState         0000EBC3        NLME_ReJoinRequest (NLMEDE)
                                                   nwk_beacon_notify_ind_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBC4 - 0000EBC4 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   AddrMgrWriteNVRequest
                                                   Segment part 24
=======
  Relative segment, address: XDATA 0000EE1A - 0000EE1A (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           continueJoining         0000EE1A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB63 - 0000EB63 (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _tmpRejoinState         0000EB63        NLME_ReJoinRequest (NLMEDE)
                                                   nwk_beacon_notify_ind_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB64 - 0000EB64 (0x1 bytes), align: 0
  Segment part 14.            Intra module refs:   AddrMgrWriteNVRequest
                                                   Segment part 23
>>>>>>> develop
                                                   ZDApp_Init
                                                   ZDApp_NVUpdate
                                                   ZDApp_NetworkInit
                                                   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
                                                   ZDApp_RegisterCBs
                                                   ZDApp_ResetTimerStart
                                                   ZDApp_event_loop
                                                   ZDO_JoinConfirmCB
                                                   ZDO_NetworkDiscoveryConfirmCB
                                                   ZDO_SyncIndicationCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           ZDAppTaskID             0000EBC4        Segment part 20 (APSMEDE_CB)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBC5 - 0000EBC5 (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDO_JoinConfirmCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkStatus               0000EBC5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBC6 - 0000EBC6 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   ZDApp_LeaveCtrlInit
=======
           ZDAppTaskID             0000EB64        Segment part 20 (APSMEDE_CB)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB65 - 0000EB65 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDO_JoinConfirmCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwkStatus               0000EB65 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB66 - 0000EB66 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   ZDApp_LeaveCtrlInit
>>>>>>> develop
                                                   ZDApp_LeaveCtrlSet
                                                   ZDApp_LeaveCtrlStartup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           ZDApp_LeaveCtrl         0000EBC6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EEAE - 0000EEAE (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   ZDAppCheckForHoldKey
=======
           ZDApp_LeaveCtrl         0000EB66 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE1B - 0000EE1B (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   ZDAppCheckForHoldKey
>>>>>>> develop
                                                   ZDApp_Init
                                                   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
                                                   ZDApp_event_loop
                                                   ZDOInitDevice
                                                   ZDO_JoinConfirmCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           devState                0000EEAE        MT_ProcessGetDeviceInfo (MTEL)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBC7 - 0000EBC7 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   ZDApp_ProcessNetworkJoin
=======
           devState                0000EE1B        ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB67 - 0000EB67 (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   ZDApp_ProcessNetworkJoin
>>>>>>> develop
                                                   ZDApp_ProcessOSALMsg
                                                   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           devStartMode            0000EBC7 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBC8 - 0000EBC8 (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           retryCnt                0000EBC8 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EEAF - 0000EEB4 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_epDesc            0000EEAF        fillAndSend (ZDProfile)
=======
           devStartMode            0000EB67 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB68 - 0000EB68 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   ZDApp_ProcessNetworkJoin
                                                   ZDApp_ProcessOSALMsg
           LOCAL                   ADDRESS         
           =====                   =======         
           retryCnt                0000EB68 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE1C - 0000EE21 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_epDesc            0000EE1C        fillAndSend (ZDProfile)
>>>>>>> develop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AC70 - 0001ACE5 (0x76 bytes), align: 0
  Segment part 24.            Intra module refs:   ZDApp_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_Init              0001AC70 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ACE6 - 0001ACF2 (0xd bytes), align: 0
  Segment part 26.            Intra module refs:   ZDApp_SecInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SecInit           0001ACE6 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ACF3 - 0001ADCC (0xda bytes), align: 0
  Segment part 28.            Intra module refs:   ZDApp_event_loop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_event_loop        0001ACF3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001ADCD - 0001AE59 (0x8d bytes), align: 0
  Segment part 30.            Intra module refs:   ZDOInitDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDOInitDevice           0001ADCD 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE5A - 0001AE5C (0x3 bytes), align: 0
  Segment part 34.            Intra module refs:   ZDAppDetermineDeviceType::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppDetermineDeviceType
                                   0001AE5A 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE5D - 0001AE5F (0x3 bytes), align: 0
  Segment part 38.            Intra module refs:   ZDApp_SaveNetworkStateEvt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SaveNetworkStateEvt
                                   0001AE5D 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE60 - 0001AE78 (0x19 bytes), align: 0
  Segment part 44.            Intra module refs:   ZDAppCheckForHoldKey::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppCheckForHoldKey    0001AE60 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001AE79 - 0001B001 (0x189 bytes), align: 0
  Segment part 46.            Intra module refs:   ZDApp_ProcessOSALMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessOSALMsg    0001AE79 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B002 - 0001B0A3 (0xa2 bytes), align: 0
  Segment part 48.            Intra module refs:   ZDApp_ProcessMsgCBs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessMsgCBs     0001B002 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000021 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0A4 - 0001B0DE (0x3b bytes), align: 0
  Segment part 50.            Intra module refs:   ZDApp_RegisterCBs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_RegisterCBs       0001B0A4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B0DF - 0001B293 (0x1b5 bytes), align: 0
  Segment part 52.            Intra module refs:   ZDApp_ProcessNetworkJoin::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessNetworkJoin
                                   0001B0DF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B294 - 0001B2B1 (0x1e bytes), align: 0
  Segment part 54.            Intra module refs:   ZDApp_ResetTimerStart::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ResetTimerStart   0001B294 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B2B2 - 0001B305 (0x54 bytes), align: 0
  Segment part 58.            Intra module refs:   ZDApp_LeaveCtrlInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlInit     0001B2B2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B306 - 0001B349 (0x44 bytes), align: 0
  Segment part 60.            Intra module refs:   ZDApp_LeaveCtrlSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlSet      0001B306 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B34A - 0001B3B8 (0x6f bytes), align: 0
  Segment part 64.            Intra module refs:   ZDApp_LeaveCtrlStartup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlStartup
                                   0001B34A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B3B9 - 0001B3CE (0x16 bytes), align: 0
  Segment part 66.            Intra module refs:   ZDApp_LeaveReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveReset        0001B3B9 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B3CF - 0001B3E7 (0x19 bytes), align: 0
  Segment part 68.            Intra module refs:   ZDApp_LeaveUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveUpdate       0001B3CF 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B3E8 - 0001B460 (0x79 bytes), align: 0
  Segment part 72.            Intra module refs:   ZDApp_SendMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SendMsg           0001B3E8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001E ( 00000013 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B461 - 0001B5D9 (0x179 bytes), align: 0
  Segment part 74.            Intra module refs:   ZDO_NetworkDiscoveryConfirmCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_NetworkDiscoveryConfirmCB
                                   0001B461 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001E )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B5DA - 0001B625 (0x4c bytes), align: 0
  Segment part 78.            Intra module refs:   ZDO_JoinConfirmCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_JoinConfirmCB       0001B5DA 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B626 - 0001B659 (0x34 bytes), align: 0
  Segment part 80.            Intra module refs:   ZDO_LeaveCnf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveCnf            0001B626 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B65A - 0001B6FF (0xa6 bytes), align: 0
  Segment part 82.            Intra module refs:   ZDO_LeaveInd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveInd            0001B65A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B700 - 0001B721 (0x22 bytes), align: 0
  Segment part 84.            Intra module refs:   ZDO_SyncIndicationCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_SyncIndicationCB    0001B700 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B722 - 0001B724 (0x3 bytes), align: 0
  Segment part 86.            Intra module refs:   ZDO_PollConfirmCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_PollConfirmCB       0001B722 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B725 - 0001B74D (0x29 bytes), align: 0
  Segment part 88.            Intra module refs:   AddrMgrWriteNVRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrWriteNVRequest   0001B725 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B74E - 0001B7E9 (0x9c bytes), align: 0
  Segment part 90.            Intra module refs:   ZDApp_InMsgCB::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_InMsgCB           0001B74E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B7EA - 0001B81F (0x36 bytes), align: 0
  Segment part 94.            Intra module refs:   ZDApp_NetworkInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NetworkInit       0001B7EA 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B820 - 0001B8B8 (0x99 bytes), align: 0
  Segment part 104.           Intra module refs:   ZDApp_NodeProfileSync::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NodeProfileSync   0001B820 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B8B9 - 0001B8D3 (0x1b bytes), align: 0
  Segment part 108.           Intra module refs:   ZDApp_NVUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NVUpdate          0001B8B9 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 000023E9 - 000023E9 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   zdoDiscCounter
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023EA - 000023EA (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   continueJoining
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023EB - 000023EB (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   devState
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023EC - 000023F1 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   ZDApp_epDesc
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DA5 - 00001DAA (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_Init::?relay      00001DA5        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DAB - 00001DB0 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SecInit::?relay   00001DAB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DB1 - 00001DB6 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_event_loop::?relay
                                   00001DB1        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DB7 - 00001DBC (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDOInitDevice::?relay   00001DB7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DBD - 00001DC2 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppDetermineDeviceType::?relay
                                   00001DBD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DC3 - 00001DC8 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SaveNetworkStateEvt::?relay
                                   00001DC3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DC9 - 00001DCE (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppCheckForHoldKey::?relay
                                   00001DC9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DCF - 00001DD4 (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessOSALMsg::?relay
                                   00001DCF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DD5 - 00001DDA (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessMsgCBs::?relay
                                   00001DD5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DDB - 00001DE0 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_RegisterCBs::?relay
                                   00001DDB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DE1 - 00001DE6 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessNetworkJoin::?relay
                                   00001DE1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DE7 - 00001DEC (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   ZDApp_LeaveReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ResetTimerStart::?relay
                                   00001DE7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DED - 00001DF2 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlInit::?relay
                                   00001DED 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DF3 - 00001DF8 (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   ZDApp_LeaveReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlSet::?relay
                                   00001DF3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DF9 - 00001DFE (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlStartup::?relay
                                   00001DF9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DFF - 00001E04 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   ZDO_LeaveCnf
=======
  Relative segment, address: CODE 00002204 - 00002204 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   zdoDiscCounter
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002205 - 00002205 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   continueJoining
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002206 - 00002206 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   devState
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002207 - 0000220C (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   ZDApp_epDesc
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C48 - 00001C4D (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_Init::?relay      00001C48        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C4E - 00001C53 (0x6 bytes), align: 0
  Segment part 27.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SecInit::?relay   00001C4E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C54 - 00001C59 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_event_loop::?relay
                                   00001C54        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C5A - 00001C5F (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDOInitDevice::?relay   00001C5A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C60 - 00001C65 (0x6 bytes), align: 0
  Segment part 35.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppDetermineDeviceType::?relay
                                   00001C60 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C66 - 00001C6B (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_SaveNetworkStateEvt::?relay
                                   00001C66 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C6C - 00001C71 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDAppCheckForHoldKey::?relay
                                   00001C6C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C72 - 00001C77 (0x6 bytes), align: 0
  Segment part 47.            Intra module refs:   ZDApp_event_loop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessOSALMsg::?relay
                                   00001C72 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C78 - 00001C7D (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessMsgCBs::?relay
                                   00001C78 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C7E - 00001C83 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   ZDApp_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_RegisterCBs::?relay
                                   00001C7E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C84 - 00001C89 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ProcessNetworkJoin::?relay
                                   00001C84 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C8A - 00001C8F (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   ZDApp_LeaveReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_ResetTimerStart::?relay
                                   00001C8A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C90 - 00001C95 (0x6 bytes), align: 0
  Segment part 59.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlInit::?relay
                                   00001C90 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C96 - 00001C9B (0x6 bytes), align: 0
  Segment part 61.            Intra module refs:   ZDApp_LeaveReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlSet::?relay
                                   00001C96 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001C9C - 00001CA1 (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveCtrlStartup::?relay
                                   00001C9C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CA2 - 00001CA7 (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   ZDO_LeaveCnf
>>>>>>> develop
                                                   ZDO_LeaveInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveReset::?relay
<<<<<<< HEAD
                                   00001DFF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E05 - 00001E0A (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   ZDO_LeaveInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveUpdate::?relay
                                   00001E05 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E0B - 00001E10 (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   ZDO_JoinConfirmCB
=======
                                   00001CA2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CA8 - 00001CAD (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   ZDO_LeaveInd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_LeaveUpdate::?relay
                                   00001CA8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CAE - 00001CB3 (0x6 bytes), align: 0
  Segment part 73.            Intra module refs:   ZDO_JoinConfirmCB
>>>>>>> develop
                                                   ZDO_NetworkDiscoveryConfirmCB
                                                   ZDO_SyncIndicationCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           ZDApp_SendMsg::?relay   00001E0B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E11 - 00001E16 (0x6 bytes), align: 0
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_NetworkDiscoveryConfirmCB::?relay
                                   00001E11        NLME_NetworkDiscoveryConfirm (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E17 - 00001E1C (0x6 bytes), align: 0
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_JoinConfirmCB::?relay
                                   00001E17        NLME_JoinConfirm (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E1D - 00001E22 (0x6 bytes), align: 0
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveCnf::?relay    00001E1D        NLME_LeaveCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E23 - 00001E28 (0x6 bytes), align: 0
  Segment part 84.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveInd::?relay    00001E23        NLME_LeaveInd (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E29 - 00001E2E (0x6 bytes), align: 0
  Segment part 86.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_SyncIndicationCB::?relay
                                   00001E29        NLME_SyncIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E2F - 00001E34 (0x6 bytes), align: 0
  Segment part 88.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_PollConfirmCB::?relay
                                   00001E2F        NLME_PollConfirm (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E35 - 00001E3A (0x6 bytes), align: 0
  Segment part 90.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrWriteNVRequest::?relay
                                   00001E35        AddrMgrEntryDataSave (AddrMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E3B - 00001E40 (0x6 bytes), align: 0
  Segment part 92.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_InMsgCB::?relay   00001E3B        ZDP_IncomingData (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E41 - 00001E46 (0x6 bytes), align: 0
  Segment part 96.            Intra module refs:   ZDApp_ProcessNetworkJoin
=======
           ZDApp_SendMsg::?relay   00001CAE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CB4 - 00001CB9 (0x6 bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_NetworkDiscoveryConfirmCB::?relay
                                   00001CB4        NLME_NetworkDiscoveryConfirm (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CBA - 00001CBF (0x6 bytes), align: 0
  Segment part 79.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_JoinConfirmCB::?relay
                                   00001CBA        NLME_JoinConfirm (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CC0 - 00001CC5 (0x6 bytes), align: 0
  Segment part 81.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveCnf::?relay    00001CC0        NLME_LeaveCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CC6 - 00001CCB (0x6 bytes), align: 0
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_LeaveInd::?relay    00001CC6        NLME_LeaveInd (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CCC - 00001CD1 (0x6 bytes), align: 0
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_SyncIndicationCB::?relay
                                   00001CCC        NLME_SyncIndication (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CD2 - 00001CD7 (0x6 bytes), align: 0
  Segment part 87.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_PollConfirmCB::?relay
                                   00001CD2        NLME_PollConfirm (NLMEDE_CB)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CD8 - 00001CDD (0x6 bytes), align: 0
  Segment part 89.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddrMgrWriteNVRequest::?relay
                                   00001CD8        AddrMgrEntryDataSave (AddrMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CDE - 00001CE3 (0x6 bytes), align: 0
  Segment part 91.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_InMsgCB::?relay   00001CDE        ZDP_IncomingData (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CE4 - 00001CE9 (0x6 bytes), align: 0
  Segment part 95.            Intra module refs:   ZDApp_ProcessNetworkJoin
>>>>>>> develop
                                                   ZDApp_ProcessOSALMsg
                                                   ZDOInitDevice
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NetworkInit::?relay
<<<<<<< HEAD
                                   00001E41 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E47 - 00001E4C (0x6 bytes), align: 0
  Segment part 106.           Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NodeProfileSync::?relay
                                   00001E47 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E4D - 00001E52 (0x6 bytes), align: 0
  Segment part 110.           Intra module refs:   AddrMgrWriteNVRequest
=======
                                   00001CE4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CEA - 00001CEF (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   ZDApp_ProcessOSALMsg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NodeProfileSync::?relay
                                   00001CEA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CF0 - 00001CF5 (0x6 bytes), align: 0
  Segment part 109.           Intra module refs:   AddrMgrWriteNVRequest
>>>>>>> develop
                                                   ZDO_JoinConfirmCB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDApp_NVUpdate::?relay
<<<<<<< HEAD
                                   00001E4D        ZDO_ProcessBindUnbindReq (ZDObject)
=======
                                   00001CF0        ZDO_ProcessBindUnbindReq (ZDObject)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\ZDConfig.r51
  PROGRAM MODULE, NAME : ZDConfig

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EEB5 - 0000EEBE (0xa bytes), align: 0
=======
  Relative segment, address: XDATA 0000EE22 - 0000EE2B (0xa bytes), align: 0
>>>>>>> develop
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Config_Node_Descriptor
<<<<<<< HEAD
                                   0000EEB5        NIB_init (nwk_globals)
=======
                                   0000EE22        NIB_init (nwk_globals)
>>>>>>> develop
                                                   ZDApp_NodeProfileSync (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EEBF - 0000EEC0 (0x2 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EE2C - 0000EE2D (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Config_Power_Descriptor
<<<<<<< HEAD
                                   0000EEBF        ZDO_ProcessPowerDescReq (ZDObject)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023F2 - 000023FB (0xa bytes), align: 0
  Segment part 7.             Intra module refs:   ZDO_Config_Node_Descriptor
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000023FC - 000023FD (0x2 bytes), align: 0
=======
                                   0000EE2C        ZDO_ProcessPowerDescReq (ZDObject)
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000220D - 00002216 (0xa bytes), align: 0
  Segment part 7.             Intra module refs:   ZDO_Config_Node_Descriptor
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002217 - 00002218 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 9.             Intra module refs:   ZDO_Config_Power_Descriptor

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\ZDObject.r51
  PROGRAM MODULE, NAME : ZDObject

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EBC9 - 0000EBFC (0x34 bytes), align: 0
  Segment part 22.            Intra module refs:   ZDO_ProcessActiveEPReq
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDOBuildBuf             0000EBC9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBFD - 0000EBFE (0x2 bytes), align: 0
  Segment part 23.            Intra module refs:   ZDO_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDO_EDBind              0000EBFD 
=======
  Relative segment, address: XDATA 0000EB69 - 0000EB9C (0x34 bytes), align: 0
  Segment part 6.             Intra module refs:   ZDO_ProcessActiveEPReq
                                                   ZDO_ProcessMatchDescReq
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDOBuildBuf             0000EB69 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB9D - 0000EB9E (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   ZDO_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDO_EDBind              0000EB9D 
>>>>>>> develop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016D98 - 00016DAF (0x18 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDO_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Init                00016D98 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DB0 - 00016DC2 (0x13 bytes), align: 0
  Segment part 12.            Intra module refs:   ZDODeviceSetup::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDODeviceSetup          00016DB0 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016DC3 - 00016EAB (0xe9 bytes), align: 0
  Segment part 14.            Intra module refs:   ZDO_StartDevice::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_StartDevice         00016DC3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016EAC - 00016F4F (0xa4 bytes), align: 0
  Segment part 16.            Intra module refs:   ZDO_UpdateNwkStatus::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_UpdateNwkStatus     00016EAC 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016F50 - 00016FE1 (0x92 bytes), align: 0
  Segment part 22.            Intra module refs:   ZDO_AnyClusterMatches::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_AnyClusterMatches   00016F50 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000024 ( 0000000D )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016FE2 - 0001709E (0xbd bytes), align: 0
  Segment part 24.            Intra module refs:   ZDO_ProcessNodeDescReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessNodeDescReq
                                   00016FE2 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001709F - 0001715B (0xbd bytes), align: 0
  Segment part 26.            Intra module refs:   ZDO_ProcessPowerDescReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessPowerDescReq
                                   0001709F 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001715C - 00017243 (0xe8 bytes), align: 0
  Segment part 28.            Intra module refs:   ZDO_ProcessSimpleDescReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessSimpleDescReq
                                   0001715C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017244 - 00017318 (0xd5 bytes), align: 0
  Segment part 30.            Intra module refs:   ZDO_ProcessActiveEPReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessActiveEPReq
                                   00017244 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017319 - 0001737F (0x67 bytes), align: 0
  Segment part 32.            Intra module refs:   ZDO_ConvertOTAClusters::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ConvertOTAClusters
                                   00017319 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000022 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017380 - 00017AD4 (0x755 bytes), align: 0
  Segment part 34.            Intra module refs:   ZDO_ProcessMatchDescReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessMatchDescReq
                                   00017380 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000029 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017AD5 - 00017D22 (0x24e bytes), align: 0
  Segment part 36.            Intra module refs:   ZDO_ProcessBindUnbindReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessBindUnbindReq
                                   00017AD5 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D23 - 00017D6E (0x4c bytes), align: 0
  Segment part 38.            Intra module refs:   ZDO_UpdateAddrManager::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_UpdateAddrManager   00017D23 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000017 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017D6F - 00017E83 (0x115 bytes), align: 0
  Segment part 46.            Intra module refs:   ZDO_ParseBindUnbindReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ParseBindUnbindReq
                                   00017D6F 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00017E84 - 00018026 (0x1a3 bytes), align: 0
  Segment part 48.            Intra module refs:   ZDO_ParseAddrRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ParseAddrRsp        00017E84 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00018027 - 00018117 (0xf1 bytes), align: 0
  Segment part 56.            Intra module refs:   ZDO_ParseEPListRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ParseEPListRsp      00018027 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000014 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
XDATA_ID
  Relative segment, address: CODE 000023FE - 0000240D (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000240E - 0000241A (0xd bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000241B - 00002429 (0xf bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000242A - 00002432 (0x9 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002433 - 0000243E (0xc bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E53 - 00001E58 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Init::?relay        00001E53        ZDApp_Init (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E59 - 00001E5E (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   ZDO_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDODeviceSetup::?relay
                                   00001E59 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E5F - 00001E64 (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_StartDevice::?relay
                                   00001E5F        ZDApp_event_loop (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E65 - 00001E6A (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_UpdateNwkStatus::?relay
                                   00001E65        ZDApp_event_loop (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E6B - 00001E70 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   ZDO_ProcessMatchDescReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_AnyClusterMatches::?relay
                                   00001E6B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E71 - 00001E76 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessNodeDescReq::?relay
                                   00001E71        zdpMsgProcs (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E77 - 00001E7C (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessPowerDescReq::?relay
                                   00001E77        zdpMsgProcs (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E7D - 00001E82 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessSimpleDescReq::?relay
                                   00001E7D        zdpMsgProcs (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E83 - 00001E88 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessActiveEPReq::?relay
                                   00001E83        zdpMsgProcs (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E89 - 00001E8E (0x6 bytes), align: 0
  Segment part 49.            Intra module refs:   ZDO_ProcessMatchDescReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ConvertOTAClusters::?relay
                                   00001E89 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E8F - 00001E94 (0x6 bytes), align: 0
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessMatchDescReq::?relay
                                   00001E8F        zdpMsgProcs (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E95 - 00001E9A (0x6 bytes), align: 0
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessBindUnbindReq::?relay
                                   00001E95        ZDApp_ProcessMsgCBs (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E9B - 00001EA0 (0x6 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_UpdateAddrManager::?relay
                                   00001E9B        ZDApp_ProcessMsgCBs (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EA1 - 00001EA6 (0x6 bytes), align: 0
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ParseBindUnbindReq::?relay
                                   00001EA1        ZDApp_ProcessMsgCBs (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EA7 - 00001EAC (0x6 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ParseAddrRsp::?relay
                                   00001EA7        ZDApp_ProcessMsgCBs (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EAD - 00001EB2 (0x6 bytes), align: 0
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ParseEPListRsp::?relay
                                   00001EAD        AXD_ProcessZDOMsgs (AXD)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EEC1 - 0000EED0 (0x10 bytes), align: 0
  Segment part 6.             Intra module refs:   ZDO_StartDevice
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EED1 - 0000EEDD (0xd bytes), align: 0
  Segment part 8.             Intra module refs:   ZDO_StartDevice
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EEDE - 0000EEEC (0xf bytes), align: 0
  Segment part 16.            Intra module refs:   ZDO_ProcessMatchDescReq
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EEED - 0000EEF5 (0x9 bytes), align: 0
  Segment part 18.            Intra module refs:   ZDO_ProcessMatchDescReq
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EEF6 - 0000EF01 (0xc bytes), align: 0
  Segment part 20.            Intra module refs:   ZDO_ProcessMatchDescReq
=======
BANK_RELAYS
  Relative segment, address: CODE 00001CF6 - 00001CFB (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_Init::?relay        00001CF6        ZDApp_Init (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001CFC - 00001D01 (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   ZDO_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDODeviceSetup::?relay
                                   00001CFC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D02 - 00001D07 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_StartDevice::?relay
                                   00001D02        ZDApp_event_loop (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D08 - 00001D0D (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_UpdateNwkStatus::?relay
                                   00001D08        ZDApp_event_loop (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D0E - 00001D13 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   ZDO_ProcessMatchDescReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_AnyClusterMatches::?relay
                                   00001D0E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D14 - 00001D19 (0x6 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessNodeDescReq::?relay
                                   00001D14        zdpMsgProcs (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D1A - 00001D1F (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessPowerDescReq::?relay
                                   00001D1A        zdpMsgProcs (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D20 - 00001D25 (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessSimpleDescReq::?relay
                                   00001D20        zdpMsgProcs (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D26 - 00001D2B (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessActiveEPReq::?relay
                                   00001D26        zdpMsgProcs (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D2C - 00001D31 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   ZDO_ProcessMatchDescReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ConvertOTAClusters::?relay
                                   00001D2C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D32 - 00001D37 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessMatchDescReq::?relay
                                   00001D32        zdpMsgProcs (ZDProfile)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D38 - 00001D3D (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ProcessBindUnbindReq::?relay
                                   00001D38        ZDApp_ProcessMsgCBs (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D3E - 00001D43 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_UpdateAddrManager::?relay
                                   00001D3E        ZDApp_ProcessMsgCBs (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D44 - 00001D49 (0x6 bytes), align: 0
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ParseBindUnbindReq::?relay
                                   00001D44        ZDApp_ProcessMsgCBs (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D4A - 00001D4F (0x6 bytes), align: 0
  Segment part 49.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ParseAddrRsp::?relay
                                   00001D4A        ZDApp_ProcessMsgCBs (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D50 - 00001D55 (0x6 bytes), align: 0
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_ParseEPListRsp::?relay
                                   00001D50        AXD_ProcessZDOMsgs (AXD)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\ZDProfile.r51
  PROGRAM MODULE, NAME : ZDProfile

  SEGMENTS IN THE MODULE
  ======================
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 000027F2 - 000027F2 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   fillAndSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_AF_ENDPOINT         000027F2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBFF - 0000EBFF (0x1 bytes), align: 0
=======
  Relative segment, address: CODE 0000254F - 0000254F (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   fillAndSend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_AF_ENDPOINT         0000254F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EB9F - 0000EB9F (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 7.             Intra module refs:   ZDP_EndDeviceBindReq
                                                   ZDP_MatchDescReq
                                                   ZDP_NwkAddrReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           ZDP_TransID             0000EBFF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC00 - 0000EC4F (0x50 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 10
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_Buf                 0000EC00 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF02 - 0000EF03 (0x2 bytes), align: 0
=======
           ZDP_TransID             0000EB9F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBA0 - 0000EBEF (0x50 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 10
           LOCAL                   ADDRESS         
           =====                   =======         
           ZDP_Buf                 0000EBA0 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE2E - 0000EE2F (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 9.             Intra module refs:   ZDP_EPRsp
                                                   ZDP_EndDeviceBindReq
                                                   ZDP_GenericRsp
                                                   ZDP_MatchDescReq
                                                   ZDP_NodeDescMsg
                                                   ZDP_NwkAddrReq
                                                   ZDP_PowerDescMsg
                                                   ZDP_SendData
                                                   ZDP_SimpleDescMsg
                                                   fillAndSend
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           ZDP_TmpBuf              0000EF02 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC50 - 0000EC50 (0x1 bytes), align: 0
=======
           ZDP_TmpBuf              0000EE2E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBF0 - 0000EBF0 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   ZDP_EPRsp
                                                   ZDP_SendData
                                                   fillAndSend
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           ZDP_TxOptions           0000EC50 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC51 - 0000EC52 (0x2 bytes), align: 0
=======
           ZDP_TxOptions           0000EBF0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBF1 - 0000EBF2 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 12.            Intra module refs:   ZDO_RegisterForZDOMsg
                                                   ZDO_SendMsgCBs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           zdoMsgCBs               0000EC51 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000027F3 - 00002812 (0x20 bytes), align: 0
  Segment part 13.            Intra module refs:   ZDP_IncomingData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdpMsgProcs             000027F3 
=======
           zdoMsgCBs               0000EBF1 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002550 - 0000256F (0x20 bytes), align: 0
  Segment part 13.            Intra module refs:   ZDP_IncomingData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdpMsgProcs             00002550 
>>>>>>> develop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000158D7 - 000159B2 (0xdc bytes), align: 0
  Segment part 14.            Intra module refs:   fillAndSend::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           fillAndSend             000158D7 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001B ( 0000001D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000159B3 - 00015A83 (0xd1 bytes), align: 0
  Segment part 16.            Intra module refs:   ZDP_SendData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_SendData            000159B3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000005 ( 00000014 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015A84 - 00015B42 (0xbf bytes), align: 0
  Segment part 18.            Intra module refs:   ZDP_NwkAddrReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_NwkAddrReq          00015A84 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015B43 - 00015D6B (0x229 bytes), align: 0
  Segment part 22.            Intra module refs:   ZDP_MatchDescReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_MatchDescReq        00015B43 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000008 ( 00000015 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015D6C - 00015F72 (0x207 bytes), align: 0
  Segment part 24.            Intra module refs:   zdpProcessAddrReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdpProcessAddrReq       00015D6C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000015 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00015F73 - 00016151 (0x1df bytes), align: 0
  Segment part 26.            Intra module refs:   ZDP_NodeDescMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_NodeDescMsg         00015F73 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000002 ( 00000013 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016152 - 0001623D (0xec bytes), align: 0
  Segment part 28.            Intra module refs:   ZDP_PowerDescMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_PowerDescMsg        00016152 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000002 ( 00000014 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001623E - 00016581 (0x344 bytes), align: 0
  Segment part 30.            Intra module refs:   ZDP_SimpleDescMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_SimpleDescMsg       0001623E 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000013 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016582 - 000166A7 (0x126 bytes), align: 0
  Segment part 32.            Intra module refs:   ZDP_EPRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_EPRsp               00016582 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000007 ( 00000017 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000166A8 - 00016748 (0xa1 bytes), align: 0
  Segment part 34.            Intra module refs:   ZDP_GenericRsp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_GenericRsp          000166A8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000004 ( 00000013 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016749 - 00016998 (0x250 bytes), align: 0
  Segment part 36.            Intra module refs:   ZDP_EndDeviceBindReq::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_EndDeviceBindReq    00016749 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000015 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016999 - 00016A7A (0xe2 bytes), align: 0
  Segment part 38.            Intra module refs:   ZDO_RegisterForZDOMsg::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_RegisterForZDOMsg   00016999 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000012 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016A7B - 00016BF6 (0x17c bytes), align: 0
  Segment part 42.            Intra module refs:   ZDO_SendMsgCBs::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_SendMsgCBs          00016A7B 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001D ( 00000015 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00016BF7 - 00016D97 (0x1a1 bytes), align: 0
  Segment part 44.            Intra module refs:   ZDP_IncomingData::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_IncomingData        00016BF7 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 0000243F - 00002440 (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDP_TmpBuf
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EB3 - 00001EB8 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00002219 - 0000221A (0x2 bytes), align: 0
  Segment part 10.            Intra module refs:   ZDP_TmpBuf
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D56 - 00001D5B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 15.            Intra module refs:   ZDP_EPRsp
                                                   ZDP_EndDeviceBindReq
                                                   ZDP_GenericRsp
                                                   ZDP_MatchDescReq
                                                   ZDP_NodeDescMsg
                                                   ZDP_NwkAddrReq
                                                   ZDP_PowerDescMsg
                                                   ZDP_SendData
                                                   ZDP_SimpleDescMsg
                                                   zdpProcessAddrReq
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           fillAndSend::?relay     00001EB3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EB9 - 00001EBE (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_SendData::?relay    00001EB9        ZDO_ProcessBindUnbindReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EBF - 00001EC4 (0x6 bytes), align: 0
=======
           fillAndSend::?relay     00001D56 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D5C - 00001D61 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_SendData::?relay    00001D5C        ZDO_ProcessBindUnbindReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D62 - 00001D67 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_NwkAddrReq::?relay
<<<<<<< HEAD
                                   00001EBF        ZDO_ProcessBindUnbindReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EC5 - 00001ECA (0x6 bytes), align: 0
=======
                                   00001D62        ZDO_ProcessBindUnbindReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D68 - 00001D6D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_MatchDescReq::?relay
<<<<<<< HEAD
                                   00001EC5        AXD_HandleKeys (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001ECB - 00001ED0 (0x6 bytes), align: 0
=======
                                   00001D68        AXD_HandleKeys (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D6E - 00001D73 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 25.            Intra module refs:   zdpMsgProcs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zdpProcessAddrReq::?relay
<<<<<<< HEAD
                                   00001ECB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001ED1 - 00001ED6 (0x6 bytes), align: 0
=======
                                   00001D6E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D74 - 00001D79 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_NodeDescMsg::?relay
<<<<<<< HEAD
                                   00001ED1        ZDO_ProcessNodeDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001ED7 - 00001EDC (0x6 bytes), align: 0
=======
                                   00001D74        ZDO_ProcessNodeDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D7A - 00001D7F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_PowerDescMsg::?relay
<<<<<<< HEAD
                                   00001ED7        ZDO_ProcessPowerDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EDD - 00001EE2 (0x6 bytes), align: 0
=======
                                   00001D7A        ZDO_ProcessPowerDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D80 - 00001D85 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_SimpleDescMsg::?relay
<<<<<<< HEAD
                                   00001EDD        ZDO_ProcessSimpleDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EE3 - 00001EE8 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_EPRsp::?relay       00001EE3        ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EE9 - 00001EEE (0x6 bytes), align: 0
=======
                                   00001D80        ZDO_ProcessSimpleDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D86 - 00001D8B (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_EPRsp::?relay       00001D86        ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D8C - 00001D91 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_GenericRsp::?relay
<<<<<<< HEAD
                                   00001EE9        ZDApp_InMsgCB (ZDApp)
=======
                                   00001D8C        ZDApp_InMsgCB (ZDApp)
>>>>>>> develop
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001EEF - 00001EF4 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001D92 - 00001D97 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_EndDeviceBindReq::?relay
<<<<<<< HEAD
                                   00001EEF        AXD_HandleKeys (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EF5 - 00001EFA (0x6 bytes), align: 0
=======
                                   00001D92        AXD_HandleKeys (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D98 - 00001D9D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_RegisterForZDOMsg::?relay
<<<<<<< HEAD
                                   00001EF5        AXD_Init (AXD)
                                                   ZDApp_RegisterCBs (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EFB - 00001F00 (0x6 bytes), align: 0
=======
                                   00001D98        AXD_Init (AXD)
                                                   ZDApp_RegisterCBs (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001D9E - 00001DA3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 43.            Intra module refs:   ZDP_IncomingData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDO_SendMsgCBs::?relay
<<<<<<< HEAD
                                   00001EFB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F01 - 00001F06 (0x6 bytes), align: 0
=======
                                   00001D9E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DA4 - 00001DA9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDP_IncomingData::?relay
<<<<<<< HEAD
                                   00001F01        ZDApp_ProcessOSALMsg (ZDApp)
=======
                                   00001DA4        ZDApp_ProcessOSALMsg (ZDApp)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\ZDSecMgr.r51
  PROGRAM MODULE, NAME : ZDSecMgr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B38A - 0003B397 (0xe bytes), align: 0
  Segment part 6.             Intra module refs:   ZDSecMgrInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrInit            0003B38A 
=======
  Relative segment, address: CODE 00038ACC - 00038AD9 (0xe bytes), align: 0
  Segment part 6.             Intra module refs:   ZDSecMgrInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrInit            00038ACC 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B398 - 0003B3A5 (0xe bytes), align: 0
  Segment part 8.             Intra module refs:   ZDSecMgrConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrConfig          0003B398 
=======
  Relative segment, address: CODE 00038ADA - 00038AE7 (0xe bytes), align: 0
  Segment part 8.             Intra module refs:   ZDSecMgrConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrConfig          00038ADA 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001F07 - 00001F0C (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrInit::?relay    00001F07        ZDApp_SecInit (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F0D - 00001F12 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001DAA - 00001DAF (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrInit::?relay    00001DAA        ZDApp_SecInit (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DB0 - 00001DB5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 9.             Intra module refs:   ZDSecMgrInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZDSecMgrConfig::?relay
<<<<<<< HEAD
                                   00001F0D 
=======
                                   00001DB0 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\ZGlobals.r51
  PROGRAM MODULE, NAME : ZGlobals

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EF04 - 0000EF05 (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPollRate              0000EF04        NLME_SetPollRate (nwk_util)
=======
  Relative segment, address: XDATA 0000EE30 - 0000EE31 (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPollRate              0000EE30        NLME_SetPollRate (nwk_util)
>>>>>>> develop
                                                   Segment part 40 (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_set_poll_evt (nwk)
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EF06 - 0000EF07 (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgQueuedPollRate        0000EF06        NLME_SetQueuedPollRate (nwk_util)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF08 - 0000EF09 (0x2 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgResponsePollRate      0000EF08        NLME_ReJoinRequest (NLMEDE)
=======
  Relative segment, address: XDATA 0000EE32 - 0000EE33 (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgQueuedPollRate        0000EE32        NLME_SetQueuedPollRate (nwk_util)
                                                   nwk_event_loop (nwk)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE34 - 0000EE35 (0x2 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgResponsePollRate      0000EE34        NLME_ReJoinRequest (NLMEDE)
>>>>>>> develop
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   NLME_SetResponseRate (nwk_util)
                                                   nwk_data_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EF0A - 0000EF0B (0x2 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgRejoinPollRate        0000EF0A        NLME_ReJoinRequest (NLMEDE)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF0C - 0000EF0C (0x1 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxDataRetries        0000EF0C        nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF0D - 0000EF0D (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EE36 - 0000EE37 (0x2 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgRejoinPollRate        0000EE36        NLME_ReJoinRequest (NLMEDE)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE38 - 0000EE38 (0x1 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxDataRetries        0000EE38        nwk_MacDataBuffersAdd (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE39 - 0000EE39 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxPollFailureRetries
<<<<<<< HEAD
                                   0000EF0D        RTG_UpdateNeighborEntry (nwk_util)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF0E - 0000EF11 (0x4 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgDefaultChannelList    0000EF0E        ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF12 - 0000EF12 (0x1 bytes), align: 0
=======
                                   0000EE39        RTG_UpdateNeighborEntry (nwk_util)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE3A - 0000EE3D (0x4 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgDefaultChannelList    0000EE3A        ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE3E - 0000EE3E (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgDefaultStartingScanDuration
<<<<<<< HEAD
                                   0000EF12        ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF13 - 0000EF13 (0x1 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgStackProfile          0000EF13        ZDApp_NodeProfileSync (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF14 - 0000EF14 (0x1 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgIndirectMsgTimeout    0000EF14        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC53 - 0000EC53 (0x1 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgSecurityLevel         0000EC53        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF15 - 0000EF15 (0x1 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgRouteExpiryTime       0000EF15        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC54 - 0000EC5B (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgExtendedPANID         0000EC54        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF16 - 0000EF16 (0x1 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxBcastRetires       0000EF16        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF17 - 0000EF17 (0x1 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPassiveAckTimeout     0000EF17        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF18 - 0000EF18 (0x1 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgBcastDeliveryTime     0000EF18        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF19 - 0000EF19 (0x1 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApscMaxFrameRetries   0000EF19        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF1A - 0000EF1B (0x2 bytes), align: 0
=======
                                   0000EE3E        ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDO_StartDevice (ZDObject)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE3F - 0000EE3F (0x1 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgStackProfile          0000EE3F        ZDApp_NodeProfileSync (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE40 - 0000EE40 (0x1 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgIndirectMsgTimeout    0000EE40        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBF3 - 0000EBF3 (0x1 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgSecurityLevel         0000EBF3        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE41 - 0000EE41 (0x1 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgRouteExpiryTime       0000EE41        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBF4 - 0000EBFB (0x8 bytes), align: 0
  Segment part 29.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgExtendedPANID         0000EBF4        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE42 - 0000EE42 (0x1 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgMaxBcastRetires       0000EE42        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE43 - 0000EE43 (0x1 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPassiveAckTimeout     0000EE43        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE44 - 0000EE44 (0x1 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgBcastDeliveryTime     0000EE44        NIB_init (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE45 - 0000EE45 (0x1 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApscMaxFrameRetries   0000EE45        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE46 - 0000EE47 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApscAckWaitDurationPolled
<<<<<<< HEAD
                                   0000EF1A        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF1C - 0000EF1D (0x2 bytes), align: 0
=======
                                   0000EE46        NLDE_DataCnf (NLMEDE_CB)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE48 - 0000EE49 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgApsDefaultMaxBindingTime
<<<<<<< HEAD
                                   0000EF1C        APS_Init (APS)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC5C - 0000EC6B (0x10 bytes), align: 0
  Segment part 52.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPreConfigKey          0000EC5C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF1E - 0000EF1F (0x2 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgConfigPANID           0000EF1E        ZDO_NetworkDiscoveryConfirmCB (ZDApp)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002813 - 00002818 (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   zgInit
           LOCAL                   ADDRESS         
           =====                   =======         
           zgItemTable             00002813 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039871 - 000398F6 (0x86 bytes), align: 0
  Segment part 63.            Intra module refs:   zgItemInit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           zgItemInit              00039871 
=======
                                   0000EE48        APS_Init (APS)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EBFC - 0000EC0B (0x10 bytes), align: 0
  Segment part 52.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgPreConfigKey          0000EBFC 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE4A - 0000EE4B (0x2 bytes), align: 0
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgConfigPANID           0000EE4A        ZDO_NetworkDiscoveryConfirmCB (ZDApp)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002570 - 00002575 (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   zgInit
           LOCAL                   ADDRESS         
           =====                   =======         
           zgItemTable             00002570 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED6A - 0002EDEF (0x86 bytes), align: 0
  Segment part 63.            Intra module refs:   zgItemInit::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           zgItemInit              0002ED6A 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000D ( 00000014 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000398F7 - 00039A00 (0x10a bytes), align: 0
  Segment part 65.            Intra module refs:   zgInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgInit                  000398F7 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EDF0 - 0002EEF9 (0x10a bytes), align: 0
  Segment part 65.            Intra module refs:   zgInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgInit                  0002EDF0 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039A01 - 00039A75 (0x75 bytes), align: 0
  Segment part 67.            Intra module refs:   zgReadStartupOptions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgReadStartupOptions    00039A01 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EEFA - 0002EF6E (0x75 bytes), align: 0
  Segment part 67.            Intra module refs:   zgReadStartupOptions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgReadStartupOptions    0002EEFA 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 0000000F )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039A76 - 00039B15 (0xa0 bytes), align: 0
  Segment part 69.            Intra module refs:   zgWriteStartupOptions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgWriteStartupOptions   00039A76 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EF6F - 0002F00E (0xa0 bytes), align: 0
  Segment part 69.            Intra module refs:   zgWriteStartupOptions::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgWriteStartupOptions   0002EF6F 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 00000011 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 00002441 - 00002442 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   zgPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002443 - 00002444 (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   zgQueuedPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002445 - 00002446 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   zgResponsePollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002447 - 00002448 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   zgRejoinPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002449 - 00002449 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   zgMaxDataRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000244A - 0000244A (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   zgMaxPollFailureRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000244B - 0000244E (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   zgDefaultChannelList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000244F - 0000244F (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   zgDefaultStartingScanDuration
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002450 - 00002450 (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   zgStackProfile
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002451 - 00002451 (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   zgIndirectMsgTimeout
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002452 - 00002452 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   zgRouteExpiryTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002453 - 00002453 (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   zgMaxBcastRetires
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002454 - 00002454 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   zgPassiveAckTimeout
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002455 - 00002455 (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   zgBcastDeliveryTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002456 - 00002456 (0x1 bytes), align: 0
  Segment part 45.            Intra module refs:   zgApscMaxFrameRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002457 - 00002458 (0x2 bytes), align: 0
  Segment part 47.            Intra module refs:   zgApscAckWaitDurationPolled
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002459 - 0000245A (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   zgApsDefaultMaxBindingTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000245B - 0000245C (0x2 bytes), align: 0
  Segment part 55.            Intra module refs:   zgConfigPANID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F13 - 00001F18 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   zgInit
           LOCAL                   ADDRESS         
           =====                   =======         
           zgItemInit::?relay      00001F13 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F19 - 00001F1E (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgInit::?relay          00001F19        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F1F - 00001F24 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000221B - 0000221C (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   zgPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000221D - 0000221E (0x2 bytes), align: 0
  Segment part 9.             Intra module refs:   zgQueuedPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000221F - 00002220 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   zgResponsePollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002221 - 00002222 (0x2 bytes), align: 0
  Segment part 13.            Intra module refs:   zgRejoinPollRate
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002223 - 00002223 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   zgMaxDataRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002224 - 00002224 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   zgMaxPollFailureRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002225 - 00002228 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   zgDefaultChannelList
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002229 - 00002229 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   zgDefaultStartingScanDuration
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000222A - 0000222A (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   zgStackProfile
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000222B - 0000222B (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   zgIndirectMsgTimeout
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000222C - 0000222C (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   zgRouteExpiryTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000222D - 0000222D (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   zgMaxBcastRetires
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000222E - 0000222E (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   zgPassiveAckTimeout
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000222F - 0000222F (0x1 bytes), align: 0
  Segment part 35.            Intra module refs:   zgBcastDeliveryTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002230 - 00002230 (0x1 bytes), align: 0
  Segment part 45.            Intra module refs:   zgApscMaxFrameRetries
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002231 - 00002232 (0x2 bytes), align: 0
  Segment part 47.            Intra module refs:   zgApscAckWaitDurationPolled
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002233 - 00002234 (0x2 bytes), align: 0
  Segment part 51.            Intra module refs:   zgApsDefaultMaxBindingTime
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002235 - 00002236 (0x2 bytes), align: 0
  Segment part 55.            Intra module refs:   zgConfigPANID
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DB6 - 00001DBB (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   zgInit
           LOCAL                   ADDRESS         
           =====                   =======         
           zgItemInit::?relay      00001DB6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DBC - 00001DC1 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgInit::?relay          00001DBC        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DC2 - 00001DC7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 68.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgReadStartupOptions::?relay
<<<<<<< HEAD
                                   00001F1F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F25 - 00001F2A (0x6 bytes), align: 0
=======
                                   00001DC2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DC8 - 00001DCD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 70.            Intra module refs:   zgInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zgWriteStartupOptions::?relay
<<<<<<< HEAD
                                   00001F25 
=======
                                   00001DC8 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\ZMain.r51
  PROGRAM MODULE, NAME : ZMain

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000081 - 00000081 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   zmain_ram_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SP                      00000081 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008F - 0000008F (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   HalKeyInit (hal_key)
                                                   halAssertHazardLights (hal_assert)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0INP                   0000008F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   HalLedOnOff (hal_led)
                                                   I2C_Check_ack (adxl345)
                                                   I2C_Start_1 (adxl345)
                                                   I2C_Stop_1 (adxl345)
                                                   ReadI2CByte_1 (adxl345)
                                                   Sendack (adxl345)
                                                   WriteI2CByte_1 (adxl345)
                                                   halAssertHazardLights (hal_assert)
                                                   zmain_vdd_check
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   halAssertHazardLights (hal_assert)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON                  000000C6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   I2C_Check_ack (adxl345)
                                                   I2C_Start_1 (adxl345)
                                                   I2C_Stop_1 (adxl345)
                                                   Init_ADXL345 (adxl345)
                                                   ReadI2CByte_1 (adxl345)
                                                   Sendack (adxl345)
                                                   WriteI2CByte_1 (adxl345)
                                                   halAssertHazardLights (hal_assert)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   halAssertHazardLights (hal_assert)
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00000CF0 - 00000D6B (0x7c bytes), align: 0
  Segment part 17.
=======
  Relative segment, address: CODE 00000CF0 - 00000D68 (0x79 bytes), align: 0
  Segment part 13.
>>>>>>> develop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00000CF0        ?call_main (?cmain)
               calls direct
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00000D6C - 00000DD0 (0x65 bytes), align: 0
  Segment part 18.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_vdd_check         00000D6C 
=======
  Relative segment, address: CODE 00000D69 - 00000DCD (0x65 bytes), align: 0
  Segment part 14.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_vdd_check         00000D69 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00000DD1 - 00000EC7 (0xf7 bytes), align: 0
  Segment part 19.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_ext_addr          00000DD1 
=======
  Relative segment, address: CODE 00000DCE - 00000EEA (0x11d bytes), align: 0
  Segment part 15.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_ext_addr          00000DCE 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000012 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00000EC8 - 00000F94 (0xcd bytes), align: 0
  Segment part 20.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_dev_info          00000EC8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000F95 - 00000FF3 (0x5f bytes), align: 0
  Segment part 21.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_ram_init          00000F95 
=======
  Relative segment, address: CODE 00000EEB - 00000EEB (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_dev_info          00000EEB 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000EEC - 00000F4A (0x5f bytes), align: 0
  Segment part 17.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_ram_init          00000EEC 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
<<<<<<< HEAD
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000FF4 - 00001005 (0x12 bytes), align: 0
  Segment part 22.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           zmain_lcd_init          00000FF4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000245D - 0000246A (0xe bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 13
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000246B - 0000247B (0x11 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 15
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF20 - 0000EF2D (0xe bytes), align: 0
  Segment part 13.            Intra module refs:   zmain_dev_info
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF2E - 0000EF3E (0x11 bytes), align: 0
  Segment part 15.            Intra module refs:   zmain_lcd_init
=======
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\adxl345.r51
  PROGRAM MODULE, NAME : adxl345

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EC6C - 0000EC73 (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   Multiple_Read_ADXL345
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BUFFER                  0000EC6C        AXD_SendTheMessage (AXD)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002CBD2 - 0002CC3D (0x6c bytes), align: 0
  Segment part 29.            Intra module refs:   Delay::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay                   0002CBD2 
=======
  Relative segment, address: XDATA 0000EC0C - 0000EC13 (0x8 bytes), align: 0
  Segment part 20.            Intra module refs:   Multiple_Read_ADXL345
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BUFFER                  0000EC0C        AXD_SendTheMessage (AXD)
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002AA4B - 0002AAB6 (0x6c bytes), align: 0
  Segment part 29.            Intra module refs:   Delay::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay                   0002AA4B 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CC3E - 0002CC78 (0x3b bytes), align: 0
  Segment part 31.            Intra module refs:   Delay_1u::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay_1u                0002CC3E 
=======
  Relative segment, address: CODE 0002AAB7 - 0002AAF1 (0x3b bytes), align: 0
  Segment part 31.            Intra module refs:   Delay_1u::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Delay_1u                0002AAB7 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CC79 - 0002CCAA (0x32 bytes), align: 0
  Segment part 35.            Intra module refs:   I2C_Start_1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Start_1             0002CC79 
=======
  Relative segment, address: CODE 0002AAF2 - 0002AB23 (0x32 bytes), align: 0
  Segment part 35.            Intra module refs:   I2C_Start_1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Start_1             0002AAF2 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CCAB - 0002CCE3 (0x39 bytes), align: 0
  Segment part 37.            Intra module refs:   I2C_Stop_1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Stop_1              0002CCAB 
=======
  Relative segment, address: CODE 0002AB24 - 0002AB5C (0x39 bytes), align: 0
  Segment part 37.            Intra module refs:   I2C_Stop_1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Stop_1              0002AB24 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CCE4 - 0002CD20 (0x3d bytes), align: 0
  Segment part 39.            Intra module refs:   Sendack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Sendack                 0002CCE4 
=======
  Relative segment, address: CODE 0002AB5D - 0002AB99 (0x3d bytes), align: 0
  Segment part 39.            Intra module refs:   Sendack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Sendack                 0002AB5D 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CD21 - 0002CD5A (0x3a bytes), align: 0
  Segment part 41.            Intra module refs:   I2C_Check_ack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Check_ack           0002CD21 
=======
  Relative segment, address: CODE 0002AB9A - 0002ABD3 (0x3a bytes), align: 0
  Segment part 41.            Intra module refs:   I2C_Check_ack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Check_ack           0002AB9A 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CD5B - 0002CDA3 (0x49 bytes), align: 0
  Segment part 43.            Intra module refs:   WriteI2CByte_1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WriteI2CByte_1          0002CD5B 
=======
  Relative segment, address: CODE 0002ABD4 - 0002AC1C (0x49 bytes), align: 0
  Segment part 43.            Intra module refs:   WriteI2CByte_1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WriteI2CByte_1          0002ABD4 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CDA4 - 0002CDFA (0x57 bytes), align: 0
  Segment part 45.            Intra module refs:   ReadI2CByte_1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReadI2CByte_1           0002CDA4 
=======
  Relative segment, address: CODE 0002AC1D - 0002AC73 (0x57 bytes), align: 0
  Segment part 45.            Intra module refs:   ReadI2CByte_1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReadI2CByte_1           0002AC1D 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CDFB - 0002CE1D (0x23 bytes), align: 0
  Segment part 47.            Intra module refs:   Single_Write_ADXL345::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Single_Write_ADXL345    0002CDFB 
=======
  Relative segment, address: CODE 0002AC74 - 0002AC96 (0x23 bytes), align: 0
  Segment part 47.            Intra module refs:   Single_Write_ADXL345::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Single_Write_ADXL345    0002AC74 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CE1E - 0002CE5C (0x3f bytes), align: 0
  Segment part 51.            Intra module refs:   Init_ADXL345::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Init_ADXL345            0002CE1E 
=======
  Relative segment, address: CODE 0002AC97 - 0002ACD5 (0x3f bytes), align: 0
  Segment part 51.            Intra module refs:   Init_ADXL345::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Init_ADXL345            0002AC97 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CE5D - 0002CED0 (0x74 bytes), align: 0
  Segment part 53.            Intra module refs:   Multiple_Read_ADXL345::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Multiple_Read_ADXL345   0002CE5D 
=======
  Relative segment, address: CODE 0002ACD6 - 0002AD49 (0x74 bytes), align: 0
  Segment part 53.            Intra module refs:   Multiple_Read_ADXL345::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Multiple_Read_ADXL345   0002ACD6 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002CED1 - 0002D164 (0x294 bytes), align: 0
  Segment part 55.            Intra module refs:   displayXYZ::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           displayXYZ              0002CED1 
=======
  Relative segment, address: CODE 0002AD4A - 0002AFDD (0x294 bytes), align: 0
  Segment part 55.            Intra module refs:   displayXYZ::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           displayXYZ              0002AD4A 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000015 )
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 0000247C - 00002480 (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002481 - 00002485 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002486 - 0000248A (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000248B - 0000248F (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002490 - 00002494 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002495 - 00002499 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000249A - 0000249D (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   __Constant_4079999a
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F2B - 00001F30 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00002237 - 0000223B (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000223C - 00002240 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002241 - 00002245 (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002246 - 0000224A (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000224B - 0000224F (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002250 - 00002254 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002255 - 00002258 (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   __Constant_4079999a
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DCE - 00001DD3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 30.            Intra module refs:   Multiple_Read_ADXL345
                                                   Sendack
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           Delay::?relay           00001F2B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F31 - 00001F36 (0x6 bytes), align: 0
=======
           Delay::?relay           00001DCE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DD4 - 00001DD9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 32.            Intra module refs:   I2C_Check_ack
                                                   I2C_Start_1
                                                   I2C_Stop_1
                                                   ReadI2CByte_1
                                                   Sendack
                                                   WriteI2CByte_1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           Delay_1u::?relay        00001F31 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F37 - 00001F3C (0x6 bytes), align: 0
=======
           Delay_1u::?relay        00001DD4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DDA - 00001DDF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.            Intra module refs:   Multiple_Read_ADXL345
                                                   Single_Write_ADXL345
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           I2C_Start_1::?relay     00001F37 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F3D - 00001F42 (0x6 bytes), align: 0
=======
           I2C_Start_1::?relay     00001DDA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DE0 - 00001DE5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.            Intra module refs:   Multiple_Read_ADXL345
                                                   Single_Write_ADXL345
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           I2C_Stop_1::?relay      00001F3D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F43 - 00001F48 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   Multiple_Read_ADXL345
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Sendack::?relay         00001F43 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F49 - 00001F4E (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   WriteI2CByte_1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Check_ack::?relay   00001F49 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F4F - 00001F54 (0x6 bytes), align: 0
=======
           I2C_Stop_1::?relay      00001DE0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DE6 - 00001DEB (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   Multiple_Read_ADXL345
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Sendack::?relay         00001DE6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DEC - 00001DF1 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   WriteI2CByte_1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           I2C_Check_ack::?relay   00001DEC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DF2 - 00001DF7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.            Intra module refs:   Multiple_Read_ADXL345
                                                   Single_Write_ADXL345
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WriteI2CByte_1::?relay
<<<<<<< HEAD
                                   00001F4F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F55 - 00001F5A (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   Multiple_Read_ADXL345
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReadI2CByte_1::?relay   00001F55 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F5B - 00001F60 (0x6 bytes), align: 0
=======
                                   00001DF2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DF8 - 00001DFD (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   Multiple_Read_ADXL345
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReadI2CByte_1::?relay   00001DF8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001DFE - 00001E03 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 48.            Intra module refs:   Init_ADXL345
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Single_Write_ADXL345::?relay
<<<<<<< HEAD
                                   00001F5B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F61 - 00001F66 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Init_ADXL345::?relay    00001F61        AXD_Init (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F67 - 00001F6C (0x6 bytes), align: 0
=======
                                   00001DFE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E04 - 00001E09 (0x6 bytes), align: 0
  Segment part 52.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Init_ADXL345::?relay    00001E04        AXD_Init (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E0A - 00001E0F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Multiple_Read_ADXL345::?relay
<<<<<<< HEAD
                                   00001F67        AXD_SendTheMessage (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F6D - 00001F72 (0x6 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           displayXYZ::?relay      00001F6D        AXD_SendTheMessage (AXD)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF3F - 0000EF43 (0x5 bytes), align: 0
  Segment part 8.             Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF44 - 0000EF48 (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF49 - 0000EF4D (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF4E - 0000EF52 (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF53 - 0000EF57 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF58 - 0000EF5C (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF5D - 0000EF60 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   displayXYZ
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_4079999a     0000EF5D 
=======
                                   00001E0A        AXD_SendTheMessage (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E10 - 00001E15 (0x6 bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           displayXYZ::?relay      00001E10        AXD_SendTheMessage (AXD)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE4C - 0000EE50 (0x5 bytes), align: 0
  Segment part 8.             Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE51 - 0000EE55 (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE56 - 0000EE5A (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE5B - 0000EE5F (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE60 - 0000EE64 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE65 - 0000EE69 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   displayXYZ
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE6A - 0000EE6D (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   displayXYZ
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_4079999a     0000EE6A 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\chipcon_banked_code_support.r51
  LIBRARY MODULE, NAME : ?BANKED_CODE_SUPPORT

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000086 - 000000CC (0x47 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL                  00000086        ?call_main (?cmain)
           ?BRET                   0000009A        ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   APSME_CmdPktNM (APSMEDE)
                                                   Delay (adxl345)
                                                   Delay_1u (adxl345)
                                                   HalAdcCheckVdd (hal_adc)
                                                   HalAdcInit (hal_adc)
                                                   HalDmaInit (hal_dma)
                                                   HalDriverInit (hal_drivers)
                                                   HalKeyInit (hal_key)
                                                   HalLcdInit (hal_lcd)
                                                   HalLcdWriteString (hal_lcd)
                                                   HalLedInit (hal_led)
                                                   HalLedOnOff (hal_led)
                                                   HalTimerInit (hal_timer)
                                                   HalTimerTick (hal_timer)
                                                   Hal_Init (hal_drivers)
                                                   Hal_ProcessPoll (hal_drivers)
                                                   I2C_Check_ack (adxl345)
                                                   I2C_Start_1 (adxl345)
                                                   I2C_Stop_1 (adxl345)
                                                   Init_ADXL345 (adxl345)
                                                   MAC_CbackCheckPending (zmac_cb)
                                                   NIB_init (nwk_globals)
                                                   NLME_GetCoordExtAddr (nwk_util)
                                                   NLME_GetExtAddr (nwk_util)
                                                   NLME_RemoveChild (nwk_util)
                                                   Onboard_wait (OnBoard)
                                                   RegisterForKeys (OnBoard)
                                                   Segment part 142 (APSMEDE)
                                                   Segment part 16 (hal_aes)
                                                   Segment part 20 (NLMEDE)
                                                   Segment part 24 (NLMEDE_CB)
                                                   Segment part 24 (reflecttrack)
                                                   Segment part 25 (aps_groups)
                                                   Segment part 33 (nwk)
                                                   Segment part 34 (mac_main)
                                                   Segment part 34 (mac_scan)
                                                   Segment part 39 (nwk_bufs)
                                                   Segment part 45 (APS)
                                                   Segment part 47 (mac_data)
                                                   Segment part 48 (AddrMgr)
                                                   Segment part 64 (mac_mgmt)
                                                   Segment part 72 (mac_device)
                                                   Segment part 8 (APSMEDE_CB)
                                                   Segment part 82 (ssp)
                                                   Segment part 9 (mac_pwr)
                                                   Segment part 93 (nwk_util)
                                                   Segment part 94 (BindingTable)
                                                   Segment part 97 (APSMEDE)
                                                   ZDAppCheckForHoldKey (ZDApp)
                                                   ZDAppDetermineDeviceType (ZDApp)
                                                   ZDApp_NVUpdate (ZDApp)
                                                   ZDApp_RegisterCBs (ZDApp)
                                                   ZDApp_SaveNetworkStateEvt (ZDApp)
                                                   ZDODeviceSetup (ZDObject)
                                                   ZDO_Init (ZDObject)
                                                   ZDO_PollConfirmCB (ZDApp)
                                                   ZDSecMgrConfig (ZDSecMgr)
                                                   ZDSecMgrInit (ZDSecMgr)
                                                   afFindEndPointDescList (AF)
                                                   afGetDescCB (AF)
                                                   afInit (AF)
                                                   afNumEndPoints (AF)
                                                   cspPrepForTxProgram (mac_csp_tx)
                                                   getZMacDynamicSize (zmac_cb)
                                                   halAssertHandler (hal_assert)
                                                   halProcessTimer1 (hal_timer)
                                                   halProcessTimer3 (hal_timer)
                                                   halProcessTimer4 (hal_timer)
                                                   halTimerRemap (hal_timer)
                                                   halTimerSetChannelMode (hal_timer)
                                                   halTimerSetOpMode (hal_timer)
                                                   halTimerSetPrescale (hal_timer)
                                                   macApiPwrOnReq (mac_pwr)
                                                   macBackoffTimerReset (mac_backoff_timer)
                                                   macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxCancelAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxIntIsr (mac_csp_tx)
                                                   macCspTxPrepCsmaSlotted (mac_csp_tx)
                                                   macCspTxPrepCsmaUnslotted (mac_csp_tx)
                                                   macCspTxPrepSlotted (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   macFrameDuration (mac_data)
                                                   macLowLevelInit (mac_low_level)
                                                   macLowLevelReset (mac_low_level)
                                                   macMcuInit (mac_mcu)
                                                   macMcuRandomByte (mac_mcu)
                                                   macMcuRecordMaxRssiStart (mac_mcu)
                                                   macMcuRecordMaxRssiStop (mac_mcu)
                                                   macMcuTimerCapture (mac_mcu)
                                                   macNoAction (mac_mgmt)
                                                   macPibIndex (mac_pib)
                                                   macPibReset (mac_pib)
                                                   macRadioEnergyDetectStart (mac_radio)
                                                   macRadioInit (mac_radio)
                                                   macRadioRandomByte (mac_radio)
                                                   macRadioReset (mac_radio)
                                                   macRadioSetPanID (mac_radio)
                                                   macRadioSetShortAddr (mac_radio)
                                                   macRadioStopScan (mac_radio)
                                                   macRadioUpdateTxPower (mac_radio)
                                                   macRxAckTxDoneCallback (mac_rx)
                                                   macRxHaltCleanup (mac_rx)
                                                   macRxInit (mac_rx)
                                                   macRxOff (mac_rx_onoff)
                                                   macRxOn (mac_rx_onoff)
                                                   macRxOnOffInit (mac_rx_onoff)
                                                   macRxRadioPowerUpInit (mac_rx)
                                                   macRxThresholdIsr (mac_rx)
                                                   macRxTxReset (mac_rx)
                                                   macSleepWakeUp (mac_sleep)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxFrameRetransmit (mac_tx)
                                                   macTxInit (mac_tx)
                                                   mcuRecordMaxRssiIsr (mac_mcu)
                                                   nwk_Status (nwk_globals)
                                                   nwk_globals_init (nwk_globals)
                                                   osal_init_system (OSAL)
                                                   osal_int_disable (OSAL)
                                                   osal_int_enable (OSAL)
                                                   osal_mem_kick (OSAL_Memory)
                                                   osal_pwrmgr_init (OSAL_PwrMgr)
                                                   osal_rand (OSAL)
                                                   osal_update_timers (OSAL_Timers)
                                                   radioComputeED (mac_radio)
                                                   rxDiscardFrame (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxDone (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
                                                   rxPayloadIsr (mac_rx)
                                                   rxPostRxUpdates (mac_rx)
                                                   rxPrepPayload (mac_rx)
                                                   strlen (?strlen)
                                                   txCsmaGo (mac_tx)
                                                   txGo (mac_tx)
                                                   zb_HandleOsalEvent (ReadAXD)
           ?BDISPATCH              000000A8        AF_DataRequest::?relay (AF)
                                                   APSDE_DataCnf::?relay (APSMEDE_CB)
                                                   APSDE_DataConfirm::?relay (APSMEDE_CB)
                                                   APSDE_DataIndication::?relay (APSMEDE_CB)
                                                   APSDE_DataReq::?relay (APSMEDE)
                                                   APSDE_DataReqMTU::?relay (APSMEDE)
                                                   APSDE_FrameAlloc::?relay (APSMEDE)
                                                   APSDE_FrameBlkFree::?relay (APSMEDE)
                                                   APSDE_FrameBlkInit::?relay (APSMEDE)
                                                   APSDE_FrameHdrInit::?relay (APSMEDE)
                                                   APSDE_FrameHdrSet::?relay (APSMEDE)
                                                   APSDE_FrameSend::?relay (APSMEDE)
                                                   APSDE_ParseMsg::?relay (aps_util)
                                                   APSME_BindRequest::?relay (APSMEDE)
                                                   APSME_CmdPkt::?relay (APSMEDE)
                                                   APSME_CmdPktNM::?relay (APSMEDE)
                                                   APSME_FrameSecApplyExtNM::?relay (APSMEDE)
                                                   APSME_FrameSecApplyNM::?relay (APSMEDE)
                                                   APSME_FrameSecInit::?relay (APSMEDE)
                                                   APSME_FrameSecNM::?relay (APSMEDE)
                                                   APSME_FrameSecRemoveNM::?relay (APSMEDE)
                                                   APSME_FrameSecSetupNM::?relay (APSMEDE)
                                                   APSME_FrameSecurityRemove::?relay (APSMEDE)
                                                   APSME_LookupNwkAddr::?relay (APSMEDE)
                                                   APSME_SecurityNM::?relay (APSMEDE)
                                                   APSME_UnBindRequest::?relay (APSMEDE)
                                                   APS_CmdInd::?relay (APS)
                                                   APS_DataConfirmReflect::?relay (APS)
                                                   APS_DataIndReflect::?relay (APS)
                                                   APS_GetBind::?relay (APS)
                                                   APS_Init::?relay (APS)
                                                   APS_ReReflect::?relay (APS)
                                                   APS_Reflect::?relay (APS)
                                                   APS_ReflectMonitor::?relay (APS)
                                                   APS_ReflectorInit::?relay (APS)
                                                   APS_UnBind::?relay (APS)
                                                   APS_event_loop::?relay (APS)
                                                   AXD_HandleKeys::?relay (AXD)
                                                   AXD_Init::?relay (AXD)
                                                   AXD_ProcessEvent::?relay (AXD)
                                                   AXD_ProcessZDOMsgs::?relay (AXD)
                                                   AXD_SendTheMessage::?relay (AXD)
                                                   AddrMgrEntryAdd::?relay (AddrMgr)
                                                   AddrMgrEntryAddRef::?relay (AddrMgr)
                                                   AddrMgrEntryDataSave::?relay (AddrMgr)
                                                   AddrMgrEntryGet::?relay (AddrMgr)
                                                   AddrMgrEntryLookupExt::?relay (AddrMgr)
                                                   AddrMgrEntryLookupNwk::?relay (AddrMgr)
                                                   AddrMgrEntrySet::?relay (AddrMgr)
                                                   AddrMgrEntryUpdate::?relay (AddrMgr)
                                                   AddrMgrEntryUpdateEx::?relay (AddrMgr)
                                                   AddrMgrEntryValidate::?relay (AddrMgr)
                                                   AddrMgrExtAddrSet::?relay (AddrMgr)
                                                   AddrMgrExtAddrValid::?relay (AddrMgr)
                                                   AddrMgrInit::?relay (AddrMgr)
                                                   AddrMgrNwkAddrLookup::?relay (AddrMgr)
                                                   AddrMgrWriteNVRequest::?relay (ZDApp)
                                                   BindInitNV::?relay (BindingTable)
                                                   BindRestoreFromNV::?relay (BindingTable)
                                                   BindSetDefaultNV::?relay (BindingTable)
                                                   BindWriteNV::?relay (BindingTable)
                                                   ChkReset::?relay (OnBoard)
                                                   Delay::?relay (adxl345)
                                                   Delay_1u::?relay (adxl345)
                                                   GetBindingTableEntry::?relay (BindingTable)
                                                   HalAdcCheckVdd::?relay (hal_adc)
                                                   HalAdcInit::?relay (hal_adc)
                                                   HalAdcRead::?relay (hal_adc)
                                                   HalAesInit::?relay (hal_aes)
                                                   HalDmaInit::?relay (hal_dma)
                                                   HalDriverInit::?relay (hal_drivers)
                                                   HalKeyConfig::?relay (hal_key)
                                                   HalKeyInit::?relay (hal_key)
                                                   HalKeyPoll::?relay (hal_key)
                                                   HalKeyRead::?relay (hal_key)
                                                   HalLcdInit::?relay (hal_lcd)
                                                   HalLcdWriteString::?relay (hal_lcd)
                                                   HalLcdWriteStringValue::?relay (hal_lcd)
                                                   HalLedBlink::?relay (hal_led)
                                                   HalLedInit::?relay (hal_led)
                                                   HalLedOnOff::?relay (hal_led)
                                                   HalLedSet::?relay (hal_led)
                                                   HalLedUpdate::?relay (hal_led)
                                                   HalTimerConfig::?relay (hal_timer)
                                                   HalTimerInit::?relay (hal_timer)
                                                   HalTimerInterruptEnable::?relay (hal_timer)
                                                   HalTimerStart::?relay (hal_timer)
                                                   HalTimerStop::?relay (hal_timer)
                                                   HalTimerTick::?relay (hal_timer)
                                                   HalUARTOpen::?relay (hal_uart)
                                                   HalUARTRead::?relay (hal_uart)
                                                   HalUARTWrite::?relay (hal_uart)
                                                   Hal_Init::?relay (hal_drivers)
                                                   Hal_ProcessEvent::?relay (hal_drivers)
                                                   Hal_ProcessPoll::?relay (hal_drivers)
                                                   I2C_Check_ack::?relay (adxl345)
                                                   I2C_Start_1::?relay (adxl345)
                                                   I2C_Stop_1::?relay (adxl345)
                                                   InitBindingTable::?relay (BindingTable)
                                                   InitBoard::?relay (OnBoard)
                                                   Init_ADXL345::?relay (adxl345)
                                                   MAC_CbackCheckPending::?relay (zmac_cb)
                                                   MAC_CbackEvent::?relay (zmac_cb)
                                                   MAC_Init::?relay (mac_mgmt)
                                                   MAC_InitDevice::?relay (mac_device)
                                                   MAC_McpsDataAlloc::?relay (mac_data)
                                                   MAC_McpsDataReq::?relay (mac_data)
                                                   MAC_MlmeAssociateReq::?relay (mac_device)
                                                   MAC_MlmeGetReq::?relay (mac_pib)
                                                   MAC_MlmePollReq::?relay (mac_device)
                                                   MAC_MlmeResetReq::?relay (mac_mgmt)
                                                   MAC_MlmeScanReq::?relay (mac_scan)
                                                   MAC_MlmeSetReq::?relay (mac_pib)
                                                   MAC_MlmeSyncReq::?relay (mac_mgmt)
                                                   Multiple_Read_ADXL345::?relay (adxl345)
                                                   NIB_init::?relay (nwk_globals)
                                                   NLDE_BuildFrameControl::?relay (nwk_util)
                                                   NLDE_BuildMsg::?relay (nwk_util)
                                                   NLDE_CheckFrameSecurity::?relay (nwk_util)
                                                   NLDE_DataCnf::?relay (NLMEDE_CB)
                                                   NLDE_DataIndSend::?relay (nwk_util)
                                                   NLDE_DataIndication::?relay (NLMEDE_CB)
                                                   NLDE_DataReq::?relay (NLMEDE)
                                                   NLDE_DataReqAlloc::?relay (NLMEDE)
                                                   NLDE_DataReqSend::?relay (nwk_util)
                                                   NLDE_FrameDataLoad::?relay (APSMEDE)
                                                   NLDE_GetHandle::?relay (nwk_util)
                                                   NLDE_ParseFrameControl::?relay (nwk_util)
                                                   NLDE_ParseMsg2::?relay (nwk_util)
                                                   NLDE_ParseMsg::?relay (nwk_util)
                                                   NLDE_SendMsg::?relay (nwk_util)
                                                   NLME_CmdCnf::?relay (nwk_util)
                                                   NLME_CmdDataReqAlloc::?relay (nwk_util)
                                                   NLME_DeviceJoiningInit::?relay (NLMEDE)
                                                   NLME_GetCoordExtAddr::?relay (nwk_util)
                                                   NLME_GetCoordShortAddr::?relay (nwk_util)
                                                   NLME_GetExtAddr::?relay (nwk_util)
                                                   NLME_GetNeighborIndex::?relay (nwk_util)
                                                   NLME_GetNeighborLinkInfo::?relay (nwk_util)
                                                   NLME_GetProtocolVersion::?relay (nwk_util)
                                                   NLME_GetRequest::?relay (NLMEDE)
                                                   NLME_GetShortAddr::?relay (nwk_util)
                                                   NLME_IsAddressBroadcast::?relay (nwk_util)
                                                   NLME_JoinConfirm::?relay (NLMEDE_CB)
                                                   NLME_JoinRequest::?relay (NLMEDE)
                                                   NLME_LeaveCmdCnf::?relay (nwk_util)
                                                   NLME_LeaveCmdProcess::?relay (nwk_util)
                                                   NLME_LeaveCnf::?relay (NLMEDE_CB)
                                                   NLME_LeaveInd::?relay (NLMEDE_CB)
                                                   NLME_NetworkDiscoveryConfirm::?relay (NLMEDE_CB)
                                                   NLME_NetworkDiscoveryRequest::?relay (NLMEDE)
                                                   NLME_OrphanJoinRequest::?relay (NLMEDE)
                                                   NLME_PollConfirm::?relay (NLMEDE_CB)
                                                   NLME_ReJoinRequest::?relay (NLMEDE)
                                                   NLME_RejoinRspCmdProcess::?relay (nwk_util)
                                                   NLME_RemoveChild::?relay (nwk_util)
                                                   NLME_SetBroadcastFilter::?relay (nwk_util)
                                                   NLME_SetPollRate::?relay (nwk_util)
                                                   NLME_SetQueuedPollRate::?relay (nwk_util)
                                                   NLME_SetResponseRate::?relay (nwk_util)
                                                   NLME_SyncIndication::?relay (NLMEDE_CB)
                                                   NwkPollReq::?relay (nwk)
                                                   OnBoard_KeyCallback::?relay (OnBoard)
                                                   OnBoard_SendKeys::?relay (OnBoard)
                                                   Onboard_TimerCallBack::?relay (OnBoard)
                                                   Onboard_rand::?relay (OnBoard)
                                                   Onboard_wait::?relay (OnBoard)
                                                   RTG_UpdateNeighborEntry::?relay (nwk_util)
                                                   ReadI2CByte_1::?relay (adxl345)
                                                   RegisterForKeys::?relay (OnBoard)
                                                   SSP_GetMicLen::?relay (ssp)
                                                   SSP_NwkSecurity::?relay (ssp)
                                                   Sendack::?relay (adxl345)
                                                   Single_Write_ADXL345::?relay (adxl345)
                                                   WriteI2CByte_1::?relay (adxl345)
                                                   ZDAppCheckForHoldKey::?relay (ZDApp)
                                                   ZDAppDetermineDeviceType::?relay (ZDApp)
                                                   ZDApp_InMsgCB::?relay (ZDApp)
                                                   ZDApp_Init::?relay (ZDApp)
                                                   ZDApp_LeaveCtrlInit::?relay (ZDApp)
                                                   ZDApp_LeaveCtrlSet::?relay (ZDApp)
                                                   ZDApp_LeaveCtrlStartup::?relay (ZDApp)
                                                   ZDApp_LeaveReset::?relay (ZDApp)
                                                   ZDApp_LeaveUpdate::?relay (ZDApp)
                                                   ZDApp_NVUpdate::?relay (ZDApp)
                                                   ZDApp_NetworkInit::?relay (ZDApp)
                                                   ZDApp_NodeProfileSync::?relay (ZDApp)
                                                   ZDApp_ProcessMsgCBs::?relay (ZDApp)
                                                   ZDApp_ProcessNetworkJoin::?relay (ZDApp)
                                                   ZDApp_ProcessOSALMsg::?relay (ZDApp)
                                                   ZDApp_RegisterCBs::?relay (ZDApp)
                                                   ZDApp_ResetTimerStart::?relay (ZDApp)
                                                   ZDApp_SaveNetworkStateEvt::?relay (ZDApp)
                                                   ZDApp_SecInit::?relay (ZDApp)
                                                   ZDApp_SendMsg::?relay (ZDApp)
                                                   ZDApp_event_loop::?relay (ZDApp)
                                                   ZDODeviceSetup::?relay (ZDObject)
                                                   ZDOInitDevice::?relay (ZDApp)
                                                   ZDO_AnyClusterMatches::?relay (ZDObject)
                                                   ZDO_ConvertOTAClusters::?relay (ZDObject)
                                                   ZDO_Init::?relay (ZDObject)
                                                   ZDO_JoinConfirmCB::?relay (ZDApp)
                                                   ZDO_LeaveCnf::?relay (ZDApp)
                                                   ZDO_LeaveInd::?relay (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB::?relay (ZDApp)
                                                   ZDO_ParseAddrRsp::?relay (ZDObject)
                                                   ZDO_ParseBindUnbindReq::?relay (ZDObject)
                                                   ZDO_ParseEPListRsp::?relay (ZDObject)
                                                   ZDO_PollConfirmCB::?relay (ZDApp)
                                                   ZDO_ProcessActiveEPReq::?relay (ZDObject)
                                                   ZDO_ProcessBindUnbindReq::?relay (ZDObject)
                                                   ZDO_ProcessMatchDescReq::?relay (ZDObject)
                                                   ZDO_ProcessNodeDescReq::?relay (ZDObject)
                                                   ZDO_ProcessPowerDescReq::?relay (ZDObject)
                                                   ZDO_ProcessSimpleDescReq::?relay (ZDObject)
                                                   ZDO_RegisterForZDOMsg::?relay (ZDProfile)
                                                   ZDO_SendMsgCBs::?relay (ZDProfile)
                                                   ZDO_StartDevice::?relay (ZDObject)
                                                   ZDO_SyncIndicationCB::?relay (ZDApp)
                                                   ZDO_UpdateAddrManager::?relay (ZDObject)
                                                   ZDO_UpdateNwkStatus::?relay (ZDObject)
                                                   ZDP_EPRsp::?relay (ZDProfile)
                                                   ZDP_EndDeviceBindReq::?relay (ZDProfile)
                                                   ZDP_GenericRsp::?relay (ZDProfile)
                                                   ZDP_IncomingData::?relay (ZDProfile)
                                                   ZDP_MatchDescReq::?relay (ZDProfile)
                                                   ZDP_NodeDescMsg::?relay (ZDProfile)
                                                   ZDP_NwkAddrReq::?relay (ZDProfile)
                                                   ZDP_PowerDescMsg::?relay (ZDProfile)
                                                   ZDP_SendData::?relay (ZDProfile)
                                                   ZDP_SimpleDescMsg::?relay (ZDProfile)
                                                   ZDSecMgrConfig::?relay (ZDSecMgr)
                                                   ZDSecMgrInit::?relay (ZDSecMgr)
                                                   _itoa::?relay (OnBoard)
                                                   _ltoa::?relay (OSAL)
                                                   aesDmaInit::?relay (hal_aes)
                                                   afBuildMSGIncoming::?relay (AF)
                                                   afCopyAddress::?relay (AF)
                                                   afDataConfirm::?relay (AF)
                                                   afDataReqMTU::?relay (AF)
                                                   afEndPoints::?relay (AF)
                                                   afFindEndPointDesc::?relay (AF)
                                                   afFindEndPointDescList::?relay (AF)
                                                   afFindSimpleDesc::?relay (AF)
                                                   afGetDescCB::?relay (AF)
                                                   afIncomingData::?relay (AF)
                                                   afInit::?relay (AF)
                                                   afNumEndPoints::?relay (AF)
                                                   afRegister::?relay (AF)
                                                   afRegisterExtended::?relay (AF)
                                                   apsAckFindMatchCB::?relay (aps_util)
                                                   apsGenerateAck::?relay (aps_util)
                                                   apsProcessAck::?relay (aps_util)
                                                   aps_AddGroup::?relay (aps_groups)
                                                   aps_CountAllGroups::?relay (aps_groups)
                                                   aps_FindGroup::?relay (aps_groups)
                                                   aps_FindGroupForEndpoint::?relay (aps_groups)
                                                   aps_GroupsWriteNV::?relay (aps_groups)
                                                   aps_RemoveGroup::?relay (aps_groups)
                                                   bindAddClusterIdToList::?relay (BindingTable)
                                                   bindAddEntry::?relay (BindingTable)
                                                   bindAddrIndexGet::?relay (BindingTable)
                                                   bindAddrMgrLocalLoad::?relay (BindingTable)
                                                   bindFind::?relay (BindingTable)
                                                   bindFindEmpty::?relay (BindingTable)
                                                   bindFindExisting::?relay (BindingTable)
                                                   bindIsClusterIDinList::?relay (BindingTable)
                                                   bindNumOfEntries::?relay (BindingTable)
                                                   bindNumReflections::?relay (BindingTable)
                                                   bindRemoveClusterIdFromList::?relay (BindingTable)
                                                   bindRemoveDev::?relay (BindingTable)
                                                   bindRemoveEntry::?relay (BindingTable)
                                                   bindingAddrMgsHelperConvert::?relay (BindingTable)
                                                   bindingAddrMgsHelperConvertShort::?relay (BindingTable)
                                                   bindingAddrMgsHelperFind::?relay (BindingTable)
                                                   calcChkB::?relay (OSAL_Nv)
                                                   calcChkF::?relay (OSAL_Nv)
                                                   compactPage::?relay (OSAL_Nv)
                                                   cspPrepForTxProgram::?relay (mac_csp_tx)
<<<<<<< HEAD
                                                   debug_str::?relay (DebugTrace)
=======
>>>>>>> develop
                                                   displayXYZ::?relay (adxl345)
                                                   erasePage::?relay (OSAL_Nv)
                                                   fillAndSend::?relay (ZDProfile)
                                                   findItem::?relay (OSAL_Nv)
                                                   getZMacDynamicSize::?relay (zmac_cb)
                                                   halAssertHandler::?relay (hal_assert)
                                                   halAssertHazardLights::?relay (hal_assert)
                                                   halProcessKeyInterrupt::?relay (hal_key)
                                                   halProcessTimer1::?relay (hal_timer)
                                                   halProcessTimer3::?relay (hal_timer)
                                                   halProcessTimer4::?relay (hal_timer)
                                                   halTimerRemap::?relay (hal_timer)
                                                   halTimerSendCallBack::?relay (hal_timer)
                                                   halTimerSetChannelMode::?relay (hal_timer)
                                                   halTimerSetCount::?relay (hal_timer)
                                                   halTimerSetOpMode::?relay (hal_timer)
                                                   halTimerSetPrescale::?relay (hal_timer)
                                                   initItem::?relay (OSAL_Nv)
                                                   initNV::?relay (OSAL_Nv)
                                                   initPage::?relay (OSAL_Nv)
                                                   macAllocTxBuffer::?relay (mac_data)
                                                   macApiAssociateReq::?relay (mac_device)
                                                   macApiBadState::?relay (mac_mgmt)
                                                   macApiDataReq::?relay (mac_data)
                                                   macApiDisassociateReq::?relay (mac_mgmt)
                                                   macApiPending::?relay (mac_mgmt)
                                                   macApiPollReq::?relay (mac_device)
                                                   macApiPwrOnReq::?relay (mac_pwr)
                                                   macApiScanReq::?relay (mac_scan)
                                                   macApiUnsupported::?relay (mac_mgmt)
                                                   macAssocDataReq::?relay (mac_device)
                                                   macAssocDataReqComplete::?relay (mac_device)
                                                   macAssocDataRxInd::?relay (mac_device)
                                                   macAssocFailed::?relay (mac_device)
                                                   macAssocFrameResponseTimeout::?relay (mac_device)
                                                   macAssocRxDisassoc::?relay (mac_device)
                                                   macAssociateCnf::?relay (mac_device)
                                                   macBackoffTimerCancelTrigger::?relay (mac_backoff_timer)
                                                   macBackoffTimerCapture::?relay (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr::?relay (mac_backoff_timer)
                                                   macBackoffTimerCount::?relay (mac_backoff_timer)
                                                   macBackoffTimerInit::?relay (mac_backoff_timer)
                                                   macBackoffTimerReset::?relay (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback::?relay (mac_timer)
                                                   macBackoffTimerSetRollover::?relay (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger::?relay (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback::?relay (mac_timer)
                                                   macBuildBeaconNotifyInd::?relay (mac_mgmt)
                                                   macBuildCommonReq::?relay (mac_mgmt)
                                                   macBuildDataFrame::?relay (mac_data)
                                                   macBuildDisassociateReq::?relay (mac_mgmt)
                                                   macBuildHeader::?relay (mac_mgmt)
                                                   macCbackForEvent::?relay (mac_main)
                                                   macCheckSched::?relay (mac_data)
                                                   macCommStatusInd::?relay (mac_mgmt)
                                                   macConflictSyncLossInd::?relay (mac_mgmt)
                                                   macCoordAddrCmp::?relay (mac_mgmt)
                                                   macCspForceTxDoneIfPending::?relay (mac_csp_tx)
                                                   macCspTxCancelAckTimeoutCallback::?relay (mac_csp_tx)
                                                   macCspTxGoCsma::?relay (mac_csp_tx)
                                                   macCspTxGoSlotted::?relay (mac_csp_tx)
                                                   macCspTxIntIsr::?relay (mac_csp_tx)
                                                   macCspTxPrepCsmaSlotted::?relay (mac_csp_tx)
                                                   macCspTxPrepCsmaUnslotted::?relay (mac_csp_tx)
                                                   macCspTxPrepSlotted::?relay (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback::?relay (mac_csp_tx)
                                                   macCspTxStopIsr::?relay (mac_csp_tx)
                                                   macDataReset::?relay (mac_data)
                                                   macDataRxInd::?relay (mac_data)
                                                   macDataRxMemAlloc::?relay (mac_data)
                                                   macDataRxMemFree::?relay (mac_data)
                                                   macDataSend::?relay (mac_data)
                                                   macDataTxComplete::?relay (mac_data)
                                                   macDataTxEnqueue::?relay (mac_data)
                                                   macDataTxSend::?relay (mac_data)
                                                   macDataTxTimeAvailable::?relay (mac_data)
                                                   macDefaultAction::?relay (mac_mgmt)
                                                   macDeviceReset::?relay (mac_device)
                                                   macDisassocComplete::?relay (mac_mgmt)
                                                   macEventLoop::?relay (mac_main)
                                                   macExecute::?relay (mac_main)
                                                   macFrameDuration::?relay (mac_data)
                                                   macGetCoordAddress::?relay (mac_mgmt)
                                                   macGetMyAddrMode::?relay (mac_mgmt)
                                                   macLowLevelInit::?relay (mac_low_level)
                                                   macLowLevelReset::?relay (mac_low_level)
                                                   macMainReset::?relay (mac_main)
                                                   macMcuAndT2PEROF2::?relay (mac_mcu)
                                                   macMcuInit::?relay (mac_mcu)
                                                   macMcuOrT2PEROF2::?relay (mac_mcu)
                                                   macMcuOverflowCapture::?relay (mac_mcu)
                                                   macMcuOverflowCount::?relay (mac_mcu)
                                                   macMcuOverflowSetCompare::?relay (mac_mcu)
                                                   macMcuOverflowSetCount::?relay (mac_mcu)
                                                   macMcuRandomByte::?relay (mac_mcu)
                                                   macMcuRecordMaxRssiStart::?relay (mac_mcu)
                                                   macMcuRecordMaxRssiStop::?relay (mac_mcu)
                                                   macMcuTimerCapture::?relay (mac_mcu)
                                                   macMemReadRxFifo::?relay (mac_mem)
                                                   macMemWriteRam::?relay (mac_mem)
                                                   macMemWriteTxFifo::?relay (mac_mem)
                                                   macNoAction::?relay (mac_mgmt)
                                                   macPanConflictComplete::?relay (mac_device)
                                                   macPibIndex::?relay (mac_pib)
                                                   macPibReset::?relay (mac_pib)
                                                   macPollCnf::?relay (mac_device)
                                                   macPollDataReqComplete::?relay (mac_device)
                                                   macPollDataRxInd::?relay (mac_device)
                                                   macPollFrameResponseTimeout::?relay (mac_device)
                                                   macPollRxAssocRsp::?relay (mac_device)
                                                   macPollRxDisassoc::?relay (mac_device)
                                                   macPwrReset::?relay (mac_pwr)
                                                   macRadioComputeLQI::?relay (mac_radio)
                                                   macRadioEnergyDetectStart::?relay (mac_radio)
                                                   macRadioEnergyDetectStop::?relay (mac_radio)
                                                   macRadioInit::?relay (mac_radio)
                                                   macRadioRandomByte::?relay (mac_radio)
                                                   macRadioReset::?relay (mac_radio)
                                                   macRadioSetChannel::?relay (mac_radio)
                                                   macRadioSetIEEEAddr::?relay (mac_radio)
                                                   macRadioSetPanCoordinator::?relay (mac_radio)
                                                   macRadioSetPanID::?relay (mac_radio)
                                                   macRadioSetShortAddr::?relay (mac_radio)
                                                   macRadioSetTxPower::?relay (mac_radio)
                                                   macRadioStartScan::?relay (mac_radio)
                                                   macRadioStopScan::?relay (mac_radio)
                                                   macRadioUpdateChannel::?relay (mac_radio)
                                                   macRadioUpdateTxPower::?relay (mac_radio)
                                                   macRxAckTxDoneCallback::?relay (mac_rx)
                                                   macRxAssocRsp::?relay (mac_device)
                                                   macRxBeacon::?relay (mac_mgmt)
                                                   macRxCheckPendingCallback::?relay (mac_data)
                                                   macRxCompleteCallback::?relay (mac_data)
                                                   macRxCoordRealign::?relay (mac_device)
                                                   macRxDisable::?relay (mac_rx_onoff)
                                                   macRxDisassoc::?relay (mac_mgmt)
                                                   macRxEnable::?relay (mac_rx_onoff)
                                                   macRxHaltCleanup::?relay (mac_rx)
                                                   macRxHardDisable::?relay (mac_rx_onoff)
                                                   macRxInit::?relay (mac_rx)
                                                   macRxOff::?relay (mac_rx_onoff)
                                                   macRxOffRequest::?relay (mac_rx_onoff)
                                                   macRxOn::?relay (mac_rx_onoff)
                                                   macRxOnOffInit::?relay (mac_rx_onoff)
                                                   macRxOnRequest::?relay (mac_rx_onoff)
                                                   macRxPromiscuousMode::?relay (mac_rx)
                                                   macRxRadioPowerUpInit::?relay (mac_rx)
                                                   macRxSoftEnable::?relay (mac_rx_onoff)
                                                   macRxThresholdIsr::?relay (mac_rx)
                                                   macRxTxReset::?relay (mac_rx)
                                                   macScanCnfInit::?relay (mac_scan)
                                                   macScanComplete::?relay (mac_scan)
                                                   macScanFailedInProgress::?relay (mac_scan)
                                                   macScanNextChan::?relay (mac_scan)
                                                   macScanRxBeacon::?relay (mac_scan)
                                                   macScanRxCoordRealign::?relay (mac_scan)
                                                   macScanStartTimer::?relay (mac_scan)
                                                   macSecCpy::?relay (mac_mgmt)
                                                   macSendDataMsg::?relay (mac_main)
                                                   macSendMsg::?relay (mac_main)
                                                   macSetEvent::?relay (mac_main)
                                                   macSetSched::?relay (mac_data)
                                                   macSleepWakeUp::?relay (mac_sleep)
                                                   macStartFrameResponseTimer::?relay (mac_device)
                                                   macStartResponseTimer::?relay (mac_device)
                                                   macStateIdle::?relay (mac_main)
                                                   macStateScanning::?relay (mac_main)
                                                   macTaskInit::?relay (mac_main)
                                                   macTimer::?relay (mac_timer)
                                                   macTimerAddTimer::?relay (mac_timer)
                                                   macTimerCancel::?relay (mac_timer)
                                                   macTimerRecalcUnaligned::?relay (mac_timer)
                                                   macTimerRemoveTimer::?relay (mac_timer)
                                                   macTimerUpdateBackoffTimer::?relay (mac_timer)
                                                   macTxAckNotReceivedCallback::?relay (mac_tx)
                                                   macTxAckReceivedCallback::?relay (mac_tx)
                                                   macTxChannelBusyCallback::?relay (mac_tx)
                                                   macTxCompleteCallback::?relay (mac_data)
                                                   macTxDoneCallback::?relay (mac_tx)
                                                   macTxFrame::?relay (mac_tx)
                                                   macTxFrameRetransmit::?relay (mac_tx)
                                                   macTxInit::?relay (mac_tx)
                                                   macTxStartQueuedFrame::?relay (mac_tx)
                                                   macTxTimestampCallback::?relay (mac_tx)
                                                   mcuRecordMaxRssiIsr::?relay (mac_mcu)
                                                   memset::?relay (?memset)
                                                   nwkBuildDataCnf::?relay (nwk)
                                                   nwkDB_Add::?relay (nwk_bufs)
                                                   nwkDB_CountTypes::?relay (nwk_bufs)
                                                   nwkDB_CreateHdr::?relay (nwk_bufs)
                                                   nwkDB_DeleteRecAll::?relay (nwk_bufs)
                                                   nwkDB_FindHandle::?relay (nwk_bufs)
                                                   nwkDB_FindMatch::?relay (nwk_bufs)
                                                   nwkDB_FindNextType::?relay (nwk_bufs)
                                                   nwkDB_RemoveFromList::?relay (nwk_bufs)
                                                   nwkDB_UserDataLoad::?relay (nwk_util)
                                                   nwkNeighborClearEntry::?relay (nwk_util)
                                                   nwkNeighborInitTable::?relay (nwk_util)
                                                   nwkSimulateDataCnf::?relay (nwk)
                                                   nwk_BeaconFromNative::?relay (nwk)
                                                   nwk_MacDataBuffersAdd::?relay (nwk_bufs)
                                                   nwk_MacDataBuffersDealloc::?relay (nwk_bufs)
                                                   nwk_MacDataBuffersFull::?relay (nwk_bufs)
                                                   nwk_ScanJoiningOrphan::?relay (nwk)
                                                   nwk_SendNextDataBuf::?relay (nwk_bufs)
                                                   nwk_Status::?relay (nwk_globals)
                                                   nwk_associate_cnf_processing::?relay (nwk)
                                                   nwk_beacon_notify_ind_processing::?relay (nwk)
                                                   nwk_data_cnf_processing::?relay (nwk)
                                                   nwk_data_ind_processing::?relay (nwk)
                                                   nwk_data_req_send::?relay (nwk)
                                                   nwk_desc_list_free::?relay (nwk)
                                                   nwk_event_loop::?relay (nwk)
                                                   nwk_getNetworkDesc::?relay (nwk)
                                                   nwk_globals_init::?relay (nwk_globals)
                                                   nwk_init::?relay (nwk)
                                                   nwk_scan_cnf_processing::?relay (nwk)
                                                   nwk_set_poll_evt::?relay (nwk)
                                                   nwkbufs_init::?relay (nwk_bufs)
                                                   osalAddTimer::?relay (OSAL_Timers)
                                                   osalDeleteTimer::?relay (OSAL_Timers)
                                                   osalFindTimer::?relay (OSAL_Timers)
                                                   osalInitTasks::?relay (OSAL_AXD)
                                                   osalTimerInit::?relay (OSAL_Timers)
                                                   osalTimerUpdate::?relay (OSAL_Timers)
                                                   osal_ExtAddrEqual::?relay (OSAL)
                                                   osal_GetSystemClock::?relay (OSAL_Timers)
                                                   osal_build_uint32::?relay (OSAL)
                                                   osal_cpyExtAddr::?relay (OSAL)
                                                   osal_get_timeoutEx::?relay (OSAL_Timers)
                                                   osal_init_system::?relay (OSAL)
                                                   osal_int_disable::?relay (OSAL)
                                                   osal_int_enable::?relay (OSAL)
                                                   osal_mem_alloc::?relay (OSAL_Memory)
                                                   osal_mem_free::?relay (OSAL_Memory)
                                                   osal_mem_init::?relay (OSAL_Memory)
                                                   osal_mem_kick::?relay (OSAL_Memory)
                                                   osal_memcpy::?relay (OSAL)
                                                   osal_memset::?relay (OSAL)
                                                   osal_msg_allocate::?relay (OSAL)
                                                   osal_msg_deallocate::?relay (OSAL)
                                                   osal_msg_dequeue::?relay (OSAL)
                                                   osal_msg_enqueue::?relay (OSAL)
                                                   osal_msg_enqueue_max::?relay (OSAL)
                                                   osal_msg_extract::?relay (OSAL)
                                                   osal_msg_receive::?relay (OSAL)
                                                   osal_msg_send::?relay (OSAL)
                                                   osal_nv_init::?relay (OSAL_Nv)
                                                   osal_nv_item_init::?relay (OSAL_Nv)
                                                   osal_nv_read::?relay (OSAL_Nv)
                                                   osal_nv_write::?relay (OSAL_Nv)
                                                   osal_pwrmgr_init::?relay (OSAL_PwrMgr)
                                                   osal_rand::?relay (OSAL)
                                                   osal_set_event::?relay (OSAL)
                                                   osal_start_system::?relay (OSAL)
                                                   osal_start_timerEx::?relay (OSAL_Timers)
                                                   osal_stop_timerEx::?relay (OSAL_Timers)
                                                   osal_strlen::?relay (OSAL)
                                                   osal_timer_activate::?relay (OSAL_Timers)
                                                   osal_timer_hw_setup::?relay (OSAL_Timers)
                                                   osal_update_timers::?relay (OSAL_Timers)
                                                   radioComputeED::?relay (mac_radio)
                                                   reflectTrack_AddNewEntry::?relay (reflecttrack)
                                                   reflectTrack_AddToEnd::?relay (reflecttrack)
                                                   reflectTrack_FindHandle::?relay (reflecttrack)
                                                   reflectTrack_GetNewEntry::?relay (reflecttrack)
                                                   reflectTrack_NumEntries::?relay (reflecttrack)
                                                   reflectTrack_RemoveEntry::?relay (reflecttrack)
                                                   reflectTrack_RemoveEntryNotify::?relay (APS)
                                                   reflectTrack_UpdateOption::?relay (reflecttrack)
                                                   reflectTracking_GetMaxIndirectAdjusted::?relay (reflecttrack)
                                                   reflectTracking_GetMaxSimultaneousAdjusted::?relay (reflecttrack)
                                                   rxAddrIsr::?relay (mac_rx)
                                                   rxCB_Loopback::?relay (AXD)
                                                   rxDiscardFrame::?relay (mac_rx)
                                                   rxDiscardIsr::?relay (mac_rx)
                                                   rxDone::?relay (mac_rx)
                                                   rxFcsIsr::?relay (mac_rx)
                                                   rxHaltCleanupFinalStep::?relay (mac_rx)
                                                   rxPayloadIsr::?relay (mac_rx)
                                                   rxPostRxUpdates::?relay (mac_rx)
                                                   rxPrepPayload::?relay (mac_rx)
                                                   rxStartIsr::?relay (mac_rx)
                                                   sAddrCmp::?relay (saddr)
                                                   sAddrCpy::?relay (saddr)
                                                   sAddrExtCmp::?relay (saddr)
                                                   sAddrExtCpy::?relay (saddr)
                                                   setItem::?relay (OSAL_Nv)
                                                   setPageUse::?relay (OSAL_Nv)
                                                   strcat::?relay (?strcat)
                                                   strcpy::?relay (?strcpy)
                                                   strlen::?relay (?strlen)
                                                   txComplete::?relay (mac_tx)
                                                   txCsmaGo::?relay (mac_tx)
                                                   txCsmaPrep::?relay (mac_tx)
                                                   txGo::?relay (mac_tx)
                                                   writeBuf::?relay (OSAL_Nv)
                                                   writeIEEE::?relay (OSAL_Nv)
                                                   writeItem::?relay (OSAL_Nv)
                                                   writeWord::?relay (OSAL_Nv)
                                                   writeWordH::?relay (OSAL_Nv)
                                                   writeWordM::?relay (OSAL_Nv)
                                                   xferBuf::?relay (OSAL_Nv)
                                                   zb_HandleOsalEvent::?relay (ReadAXD)
                                                   zdpProcessAddrReq::?relay (ZDProfile)
                                                   zgInit::?relay (ZGlobals)
                                                   zgItemInit::?relay (ZGlobals)
                                                   zgReadStartupOptions::?relay (ZGlobals)
                                                   zgWriteStartupOptions::?relay (ZGlobals)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\chipcon_cexit.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000CD - 000000D1 (0x5 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    000000CD        ?call_main (?cmain)
           ?ROM_MONITOR_NOPS       000000CD 

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\chipcon_cstartup.r51
  PROGRAM MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 00000040, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           00000040 
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 0000E000, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           0000E000 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
           LOCAL                   ADDRESS         
           =====                   =======         
           ?reset_vector           00000000 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000D2 - 000000D7 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   ?reset_vector
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         000000D2        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               000000D5 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000D8 - 000000DD (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              000000D8        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000DE - 000000DE (0x1 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        000000DE        Absolute parts (?BANKED_CODE_SUPPORT)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000DF - 000000E1 (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __call_main             000000DF 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_BindRequest (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APSME_UnBindRequest (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_DataIndReflect (APS)
                                                   APS_GetBind (APS)
                                                   APS_ReReflect (APS)
                                                   APS_Reflect (APS)
                                                   APS_ReflectMonitor (APS)
                                                   APS_UnBind (APS)
                                                   APS_event_loop (APS)
                                                   AXD_HandleKeys (AXD)
                                                   AXD_ProcessEvent (AXD)
                                                   AXD_ProcessZDOMsgs (AXD)
                                                   AXD_SendTheMessage (AXD)
                                                   AddrMgrEntryAdd (AddrMgr)
                                                   AddrMgrEntryAddRef (AddrMgr)
                                                   AddrMgrEntryGet (AddrMgr)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrEntryLookupNwk (AddrMgr)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrExtAddrValid (AddrMgr)
                                                   AddrMgrWriteNVRequest (ZDApp)
                                                   BindInitNV (BindingTable)
                                                   BindRestoreFromNV (BindingTable)
                                                   BindSetDefaultNV (BindingTable)
                                                   BindWriteNV (BindingTable)
                                                   GetBindingTableEntry (BindingTable)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalKeyRead (hal_key)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTWrite (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBindingTable (BindingTable)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   Multiple_Read_ADXL345 (adxl345)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_ParseFrameControl (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_TimerCallBack (OnBoard)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 111 (BindingTable)
                                                   Segment part 112 (BindingTable)
                                                   Segment part 122 (nwk_util)
                                                   Segment part 123 (nwk_util)
                                                   Segment part 125 (nwk_util)
                                                   Segment part 13 (NLMEDE_CB)
                                                   Segment part 130 (nwk_util)
                                                   Segment part 132 (APSMEDE)
                                                   Segment part 150 (APSMEDE)
                                                   Segment part 151 (APSMEDE)
                                                   Segment part 18 (mac_pib)
                                                   Segment part 182 (APSMEDE)
                                                   Segment part 20 (mac_pib)
                                                   Segment part 22 (nwk)
                                                   Segment part 27 (nwk_util)
                                                   Segment part 30 (AddrMgr)
                                                   Segment part 31 (mac_timer)
                                                   Segment part 32 (nwk_util)
                                                   Segment part 39 (NLMEDE)
                                                   Segment part 40 (APS)
                                                   Segment part 40 (nwk_util)
                                                   Segment part 42 (APS)
                                                   Segment part 43 (BindingTable)
                                                   Segment part 44 (mac_timer)
                                                   Segment part 45 (BindingTable)
                                                   Segment part 46 (APSMEDE_CB)
                                                   Segment part 46 (mac_mgmt)
                                                   Segment part 47 (NLMEDE)
                                                   Segment part 47 (mac_main)
                                                   Segment part 47 (nwk_util)
                                                   Segment part 48 (mac_main)
                                                   Segment part 49 (mac_main)
                                                   Segment part 49 (nwk)
                                                   Segment part 50 (BindingTable)
                                                   Segment part 51 (BindingTable)
                                                   Segment part 52 (BindingTable)
                                                   Segment part 54 (mac_main)
                                                   Segment part 56 (BindingTable)
                                                   Segment part 57 (BindingTable)
                                                   Segment part 59 (AddrMgr)
                                                   Segment part 62 (AddrMgr)
                                                   Segment part 62 (NLMEDE)
                                                   Segment part 63 (nwk_util)
                                                   Segment part 64 (BindingTable)
                                                   Segment part 64 (nwk_util)
                                                   Segment part 65 (BindingTable)
                                                   Segment part 65 (NLMEDE)
                                                   Segment part 65 (nwk_util)
                                                   Segment part 66 (nwk_util)
                                                   Segment part 67 (AddrMgr)
                                                   Segment part 69 (APS)
                                                   Segment part 70 (APS)
                                                   Segment part 72 (BindingTable)
                                                   Segment part 75 (AddrMgr)
                                                   Segment part 77 (APS)
                                                   Segment part 78 (nwk)
                                                   Segment part 79 (BindingTable)
                                                   Segment part 8 (aps_util)
                                                   Segment part 80 (AddrMgr)
                                                   Segment part 82 (APS)
                                                   Segment part 82 (AddrMgr)
                                                   Segment part 83 (BindingTable)
                                                   Segment part 87 (nwk)
                                                   Segment part 89 (mac_data)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_LeaveUpdate (ZDApp)
                                                   ZDApp_NodeProfileSync (ZDApp)
                                                   ZDApp_ProcessMsgCBs (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_ConvertOTAClusters (ZDObject)
                                                   ZDO_JoinConfirmCB (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ParseAddrRsp (ZDObject)
                                                   ZDO_ParseBindUnbindReq (ZDObject)
                                                   ZDO_ParseEPListRsp (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_RegisterForZDOMsg (ZDProfile)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_SyncIndicationCB (ZDApp)
                                                   ZDO_UpdateAddrManager (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   ZMacGetReq (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSetReq (zmac)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   afBuildMSGIncoming (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afFindEndPointDesc (AF)
                                                   afFindSimpleDesc (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   bindAddEntry (BindingTable)
                                                   bindAddrMgrLocalLoad (BindingTable)
                                                   bindFind (BindingTable)
                                                   bindFindEmpty (BindingTable)
                                                   bindFindExisting (BindingTable)
                                                   bindNumOfEntries (BindingTable)
                                                   bindNumReflections (BindingTable)
                                                   bindRemoveClusterIdFromList (BindingTable)
                                                   bindRemoveDev (BindingTable)
                                                   bindingAddrMgsHelperConvert (BindingTable)
                                                   calcChkB (OSAL_Nv)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
<<<<<<< HEAD
                                                   debug_str (DebugTrace)
=======
>>>>>>> develop
                                                   displayXYZ (adxl345)
                                                   erasePage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSendCallBack (hal_timer)
                                                   halTimerSetCount (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiScanReq (mac_scan)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDataTxSend (mac_data)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macFrameDuration (mac_data)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRxAssocRsp (mac_device)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_ExtAddrEqual (OSAL)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_build_uint32 (OSAL)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_memcpy (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_deallocate (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_max (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_start_system (OSAL)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   reflectTrack_AddNewEntry (reflecttrack)
                                                   reflectTrack_GetNewEntry (reflecttrack)
                                                   rxAddrIsr (mac_rx)
                                                   rxCB_Loopback (AXD)
                                                   rxFcsIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrCmp (saddr)
                                                   sAddrCpy (saddr)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   strcat (?strcat)
                                                   strcpy (?strcpy)
                                                   txCsmaPrep (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeIEEE (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   writeWordM (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgItemInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_ram_init (ZMain)
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000010 - 00000011 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000010        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?PUSH_XSTACK8_C (?PUSH_XSTACK8_C)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSME_BindRequest (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APS_DataIndReflect (APS)
                                                   APS_GetBind (APS)
                                                   APS_Reflect (APS)
                                                   AXD_HandleKeys (AXD)
                                                   AXD_Init (AXD)
                                                   AXD_ProcessEvent (AXD)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   BindRestoreFromNV (BindingTable)
                                                   BindSetDefaultNV (BindingTable)
                                                   BindWriteNV (BindingTable)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MAC_CbackEvent (zmac_cb)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_GetCoordShortAddr (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NwkPollReq (nwk)
                                                   Segment part 0 (osal_nv_util)
                                                   Segment part 107 (BindingTable)
                                                   Segment part 13 (APSMEDE_CB)
                                                   Segment part 141 (nwk_util)
                                                   Segment part 142 (nwk_util)
                                                   Segment part 149 (APSMEDE)
                                                   Segment part 15 (APSMEDE_CB)
                                                   Segment part 17 (mac_device)
                                                   Segment part 187 (APSMEDE)
                                                   Segment part 199 (APSMEDE)
                                                   Segment part 23 (aps_util)
                                                   Segment part 234 (APSMEDE)
                                                   Segment part 268 (APSMEDE)
                                                   Segment part 287 (APSMEDE)
                                                   Segment part 30 (mac_scan)
                                                   Segment part 31 (mac_scan)
                                                   Segment part 43 (nwk)
                                                   Segment part 48 (nwk)
                                                   Segment part 49 (mac_main)
                                                   Segment part 49 (nwk)
                                                   Segment part 52 (NLMEDE)
                                                   Segment part 54 (APS)
                                                   Segment part 55 (mac_main)
                                                   Segment part 58 (APS)
                                                   Segment part 75 (BindingTable)
                                                   Segment part 80 (mac_mgmt)
                                                   Segment part 86 (AddrMgr)
                                                   Segment part 87 (mac_mgmt)
                                                   Segment part 98 (BindingTable)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_ProcessMsgCBs (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ParseEPListRsp (ZDObject)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_RegisterForZDOMsg (ZDProfile)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_UpdateAddrManager (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacReset (zmac)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   bindAddEntry (BindingTable)
                                                   bindAddrIndexGet (BindingTable)
                                                   bindAddrMgrLocalLoad (BindingTable)
                                                   bindingAddrMgsHelperConvert (BindingTable)
                                                   bindingAddrMgsHelperConvertShort (BindingTable)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   displayXYZ (adxl345)
                                                   erasePage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSetCount (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_nv_write (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeIEEE (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_adc.r51
  PROGRAM MODULE, NAME : hal_adc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   HalAdcCheckVdd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B4 - 000000B4 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   HalAdcInit
                                                   HalAdcRead
                                                   macMcuRandomByte (mac_mcu)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON1                 000000B4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B5 - 000000B5 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   HalAdcInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON2                 000000B5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   HalAdcCheckVdd
                                                   HalAdcInit
                                                   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON3                 000000B6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   HalAdcCheckVdd
                                                   HalAdcInit
                                                   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCL                    000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   HalAdcCheckVdd
                                                   HalAdcInit
                                                   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCH                    000000BB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HalAdcRead
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  000000F2 
    -------------------------------------------------------------------------
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002819 - 0000282A (0x12 bytes), align: 0
  Segment part 13.            Intra module refs:   HalAdcCheckVdd
           LOCAL                   ADDRESS         
           =====                   =======         
           HalAdcVddLimit          00002819 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A955 - 0003A9B7 (0x63 bytes), align: 0
  Segment part 14.            Intra module refs:   HalAdcInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit              0003A955 
=======
  Relative segment, address: CODE 00002576 - 00002587 (0x12 bytes), align: 0
  Segment part 13.            Intra module refs:   HalAdcCheckVdd
           LOCAL                   ADDRESS         
           =====                   =======         
           HalAdcVddLimit          00002576 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000381C5 - 00038227 (0x63 bytes), align: 0
  Segment part 14.            Intra module refs:   HalAdcInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit              000381C5 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000001 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003A9B8 - 0003AA9D (0xe6 bytes), align: 0
  Segment part 16.            Intra module refs:   HalAdcRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead              0003A9B8 
=======
  Relative segment, address: CODE 00038228 - 0003830D (0xe6 bytes), align: 0
  Segment part 16.            Intra module refs:   HalAdcRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead              00038228 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AA9E - 0003AB0E (0x71 bytes), align: 0
  Segment part 18.            Intra module refs:   HalAdcCheckVdd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcCheckVdd          0003AA9E 
=======
  Relative segment, address: CODE 0003830E - 0003837E (0x71 bytes), align: 0
  Segment part 18.            Intra module refs:   HalAdcCheckVdd::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcCheckVdd          0003830E 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001F73 - 00001F78 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit::?relay      00001F73        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F79 - 00001F7E (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead::?relay      00001F79        HalKeyPoll (hal_key)
=======
  Relative segment, address: CODE 00001E16 - 00001E1B (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcInit::?relay      00001E16        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E1C - 00001E21 (0x6 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcRead::?relay      00001E1C        HalKeyPoll (hal_key)
>>>>>>> develop
                                                   HalKeyRead (hal_key)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001F7F - 00001F84 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001E22 - 00001E27 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalAdcCheckVdd::?relay
<<<<<<< HEAD
                                   00001F7F        erasePage (OSAL_Nv)
=======
                                   00001E22        erasePage (OSAL_Nv)
>>>>>>> develop
                                                   writeWord (OSAL_Nv)
                                                   writeWordM (OSAL_Nv)
                                                   zmain_vdd_check (ZMain)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_assert.r51
  PROGRAM MODULE, NAME : hal_assert

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   HalKeyPoll (hal_key)
                                                   HalKeyRead (hal_key)
                                                   halAssertHazardLights
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   00000080 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   cspPrepForTxProgram (mac_csp_tx)
                                                   halAssertHazardLights
                                                   macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxCancelAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxIntIsr (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   macMcuRfIsr (mac_mcu)
                                                   macRxRadioPowerUpInit (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   txGo (mac_tx)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIM                    00000091 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   HalLedOnOff (hal_led)
                                                   halAssertHazardLights
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   000000A0 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003A790 - 0003A79D (0xe bytes), align: 0
  Segment part 23.            Intra module refs:   halAssertHandler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHandler        0003A790 
=======
  Relative segment, address: CODE 00038000 - 0003800D (0xe bytes), align: 0
  Segment part 23.            Intra module refs:   halAssertHandler::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHandler        00038000 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003A79E - 0003A954 (0x1b7 bytes), align: 0
  Segment part 25.            Intra module refs:   halAssertHazardLights::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHazardLights   0003A79E 
=======
  Relative segment, address: CODE 0003800E - 000381C4 (0x1b7 bytes), align: 0
  Segment part 25.            Intra module refs:   halAssertHazardLights::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHazardLights   0003800E 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000015 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EC74 - 0000EC74 (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EC14 - 0000EC14 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 16.            Intra module refs:   halAssertHazardLights
           LOCAL                   ADDRESS         
           =====                   =======         
           halAssertHazardLights{7}{8}{18}::escape
<<<<<<< HEAD
                                   0000EC74 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF61 - 0000EF64 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   halAssertHazardLights
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5800         0000EF61 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000249E - 000024A1 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   __Constant_5800
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF65 - 0000EF68 (0x4 bytes), align: 0
=======
                                   0000EC14 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE6E - 0000EE71 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   halAssertHazardLights
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_5800         0000EE6E 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002259 - 0000225C (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   __Constant_5800
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE72 - 0000EE75 (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 21.            Intra module refs:   halAssertHazardLights
                                                   macScanStartTimer (mac_scan)
                                                   nwk_data_ind_processing (nwk)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           __Constant_1            0000EF65 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024A2 - 000024A5 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   __Constant_1
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F85 - 00001F8A (0x6 bytes), align: 0
=======
           __Constant_1            0000EE72 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000225D - 00002260 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   __Constant_1
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E28 - 00001E2D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHandler::?relay
<<<<<<< HEAD
                                   00001F85        cspPrepForTxProgram (mac_csp_tx)
=======
                                   00001E28        cspPrepForTxProgram (mac_csp_tx)
>>>>>>> develop
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
                                                   macLowLevelReset (mac_low_level)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuInit (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxPromiscuousMode (mac_rx)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macSleepWakeUp (mac_sleep)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTxChannelBusyCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardFrame (mac_rx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001F8B - 00001F90 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001E2E - 00001E33 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.            Intra module refs:   halAssertHandler
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halAssertHazardLights::?relay
<<<<<<< HEAD
                                   00001F8B 
=======
                                   00001E2E 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_dma.r51
  PROGRAM MODULE, NAME : hal_dma

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D2 - 000000D2 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGL                000000D2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D3 - 000000D3 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA1CFGH                000000D3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D4 - 000000D4 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGL                000000D4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D5 - 000000D5 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMA0CFGH                000000D5 
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EC75 - 0000EC7C (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh0                  0000EC75 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC7D - 0000EC9C (0x20 bytes), align: 0
  Segment part 11.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh1234               0000EC7D        HalUARTInit (hal_uart)
                                                   HalUARTOpen (hal_uart)
                                                   aesDmaInit (hal_aes)
                                                   pollDMA (hal_uart)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003B3D4 - 0003B3E6 (0x13 bytes), align: 0
  Segment part 12.            Intra module refs:   HalDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit              0003B3D4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F91 - 00001F96 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit::?relay      00001F91        HalDriverInit (hal_drivers)
=======
  Relative segment, address: XDATA 0000EC15 - 0000EC1C (0x8 bytes), align: 0
  Segment part 10.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh0                  0000EC15 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC1D - 0000EC3C (0x20 bytes), align: 0
  Segment part 11.            Intra module refs:   HalDmaInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dmaCh1234               0000EC1D        aesDmaInit (hal_aes)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038B03 - 00038B15 (0x13 bytes), align: 0
  Segment part 12.            Intra module refs:   HalDmaInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit              00038B03 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E34 - 00001E39 (0x6 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDmaInit::?relay      00001E34        HalDriverInit (hal_drivers)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_drivers.r51
  PROGRAM MODULE, NAME : hal_drivers

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EC9D - 0000EC9D (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EC3D - 0000EC3D (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 6.             Intra module refs:   Hal_Init
                                                   Hal_ProcessEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           Hal_TaskID              0000EC9D        HalKeyConfig (hal_key)
=======
           Hal_TaskID              0000EC3D        HalKeyConfig (hal_key)
>>>>>>> develop
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   halProcessKeyInterrupt (hal_key)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AF74 - 0003AF83 (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   Hal_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init                0003AF74 
=======
  Relative segment, address: CODE 00038667 - 00038676 (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   Hal_Init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init                00038667 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AF84 - 0003AFA6 (0x23 bytes), align: 0
  Segment part 9.             Intra module refs:   HalDriverInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit           0003AF84 
=======
  Relative segment, address: CODE 00038677 - 00038696 (0x20 bytes), align: 0
  Segment part 9.             Intra module refs:   HalDriverInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit           00038677 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AFA7 - 0003B047 (0xa1 bytes), align: 0
  Segment part 11.            Intra module refs:   Hal_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent        0003AFA7 
=======
  Relative segment, address: CODE 00038697 - 00038737 (0xa1 bytes), align: 0
  Segment part 11.            Intra module refs:   Hal_ProcessEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent        00038697 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B048 - 0003B058 (0x11 bytes), align: 0
  Segment part 13.            Intra module refs:   Hal_ProcessPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll         0003B048 
=======
  Relative segment, address: CODE 00038738 - 00038745 (0xe bytes), align: 0
  Segment part 13.            Intra module refs:   Hal_ProcessPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll         00038738 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001F97 - 00001F9C (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init::?relay        00001F97        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F9D - 00001FA2 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit::?relay   00001F9D        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FA3 - 00001FA8 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001E3A - 00001E3F (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_Init::?relay        00001E3A        osalInitTasks (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E40 - 00001E45 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalDriverInit::?relay   00001E40        main (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E46 - 00001E4B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessEvent::?relay
<<<<<<< HEAD
                                   00001FA3        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FA9 - 00001FAE (0x6 bytes), align: 0
=======
                                   00001E46        Segment part 7 (OSAL_AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E4C - 00001E51 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_ProcessPoll::?relay
<<<<<<< HEAD
                                   00001FA9        osal_start_system (OSAL)
=======
                                   00001E4C        osal_start_system (OSAL)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_key.r51
  PROGRAM MODULE, NAME : hal_key

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   HalKeyConfig
                                                   halKeyPort0Isr
                                                   halProcessKeyInterrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   HalKeyConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PICTL                   0000008C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B8 - 000000B8 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   HalKeyConfig
                                                   HalTimerInterruptEnable (hal_timer)
                                                   macMcuInit (mac_mcu)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   halKeyPort0Isr
                                                   halSleepTimerIsr (hal_sleep)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                000000C0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   halKeyPort1Isr
                                                   halKeyPort2Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               000000E8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HalKeyInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HalKeyInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EC9E - 0000EC9E (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EC3E - 0000EC3E (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 18.            Intra module refs:   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           halKeySavedKeys         0000EC9E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC9F - 0000ECA0 (0x2 bytes), align: 0
=======
           halKeySavedKeys         0000EC3E 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC3F - 0000EC40 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 19.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
                                                   HalKeyPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pHalKeyProcessFunction
<<<<<<< HEAD
                                   0000EC9F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECA1 - 0000ECA1 (0x1 bytes), align: 0
=======
                                   0000EC3F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC41 - 0000EC41 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 20.            Intra module refs:   HalKeyConfig
                                                   HalKeyPoll
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           Hal_KeyIntEnable        0000ECA1        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECA2 - 0000ECA2 (0x1 bytes), align: 0
=======
           Hal_KeyIntEnable        0000EC41        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC42 - 0000EC42 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 22.            Intra module refs:   HalKeyConfig
                                                   HalKeyInit
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           HalKeyConfigured        0000ECA2 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003904E - 0003907D (0x30 bytes), align: 0
  Segment part 23.            Intra module refs:   HalKeyInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit              0003904E 
=======
           HalKeyConfigured        0000EC42 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E7F0 - 0002E81F (0x30 bytes), align: 0
  Segment part 23.            Intra module refs:   HalKeyInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit              0002E7F0 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003907E - 000390EC (0x6f bytes), align: 0
  Segment part 25.            Intra module refs:   HalKeyConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig            0003907E 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E820 - 0002E88E (0x6f bytes), align: 0
  Segment part 25.            Intra module refs:   HalKeyConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig            0002E820 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000390ED - 000391CA (0xde bytes), align: 0
  Segment part 27.            Intra module refs:   HalKeyRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead              000390ED 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E88F - 0002E96C (0xde bytes), align: 0
  Segment part 27.            Intra module refs:   HalKeyRead::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead              0002E88F 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000391CB - 000392DE (0x114 bytes), align: 0
  Segment part 29.            Intra module refs:   HalKeyPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll              000391CB 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E96D - 0002EA80 (0x114 bytes), align: 0
  Segment part 29.            Intra module refs:   HalKeyPoll::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll              0002E96D 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000392DF - 00039313 (0x35 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EA81 - 0002EAB5 (0x35 bytes), align: 0
>>>>>>> develop
  Segment part 31.            Intra module refs:   halProcessKeyInterrupt::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt
<<<<<<< HEAD
                                   000392DF 
=======
                                   0002EA81 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00001006 - 00001022 (0x1d bytes), align: 0
  Segment part 37.            Intra module refs:   halKeyPort0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr          00001006 
=======
  Relative segment, address: CODE 00000F4B - 00000F67 (0x1d bytes), align: 0
  Segment part 37.            Intra module refs:   halKeyPort0Isr::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr          00000F4B 
>>>>>>> develop
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00001023 - 00001047 (0x25 bytes), align: 0
  Segment part 38.            Intra module refs:   halKeyPort1Isr::??INTVEC 123
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr          00001023 
=======
  Relative segment, address: CODE 00000F68 - 00000F8C (0x25 bytes), align: 0
  Segment part 38.            Intra module refs:   halKeyPort1Isr::??INTVEC 123
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr          00000F68 
>>>>>>> develop
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00001048 - 0000106C (0x25 bytes), align: 0
  Segment part 39.            Intra module refs:   halKeyPort2Isr::??INTVEC 51
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr          00001048 
=======
  Relative segment, address: CODE 00000F8D - 00000FB1 (0x25 bytes), align: 0
  Segment part 39.            Intra module refs:   halKeyPort2Isr::??INTVEC 51
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr          00000F8D 
>>>>>>> develop
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000035 (0x36 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort2Isr::??INTVEC 51
                                   00000033 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000006D (0x6e bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort0Isr::??INTVEC 107
                                   0000006B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007D (0x7e bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeyPort1Isr::??INTVEC 123
                                   0000007B 
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00001FAF - 00001FB4 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit::?relay      00001FAF        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FB5 - 00001FBA (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig::?relay    00001FB5        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FBB - 00001FC0 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead::?relay      00001FBB        ZDAppCheckForHoldKey (ZDApp)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FC1 - 00001FC6 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll::?relay      00001FC1        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FC7 - 00001FCC (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort1Isr
                                                   halKeyPort2Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt::?relay
                                   00001FC7 

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_lcd.r51
  PROGRAM MODULE, NAME : hal_lcd

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000F4 - 000000F4 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   initLcd
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   000000F4 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000282B - 00002A6A (0x240 bytes), align: 0
  Segment part 13.            Intra module refs:   LCD_write_char
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           font6x8                 0000282B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECA3 - 0000ECA4 (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   HalLcdInit
                                                   HalLcdWriteString
           LOCAL                   ADDRESS         
           =====                   =======         
           Lcd_Line1               0000ECA3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E68C - 0002E6AE (0x23 bytes), align: 0
  Segment part 15.            Intra module refs:   Delay_nms::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           Delay_nms               0002E68C 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6AF - 0002E6D3 (0x25 bytes), align: 0
  Segment part 17.            Intra module refs:   SendByte::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           SendByte                0002E6AF 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6D4 - 0002E6F3 (0x20 bytes), align: 0
  Segment part 19.            Intra module refs:   LCD_write_byte::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_write_byte          0002E6D4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E6F4 - 0002E729 (0x36 bytes), align: 0
  Segment part 21.            Intra module refs:   LCD_clear::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_clear               0002E6F4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E72A - 0002E749 (0x20 bytes), align: 0
  Segment part 23.            Intra module refs:   LCD_set_XY::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_set_XY              0002E72A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E74A - 0002E79C (0x53 bytes), align: 0
  Segment part 25.            Intra module refs:   LCD_write_char::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_write_char          0002E74A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000B ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E79D - 0002E7F2 (0x56 bytes), align: 0
  Segment part 27.            Intra module refs:   initLcd::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           initLcd                 0002E79D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E7F3 - 0002E84C (0x5a bytes), align: 0
  Segment part 29.            Intra module refs:   LCD_write_english_string::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_write_english_string
                                   0002E7F3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E84D - 0002E867 (0x1b bytes), align: 0
  Segment part 31.            Intra module refs:   lcdUpdateLine::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           lcdUpdateLine           0002E84D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000012 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E868 - 0002E87F (0x18 bytes), align: 0
  Segment part 33.            Intra module refs:   HalLcdInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit              0002E868 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E880 - 0002EA14 (0x195 bytes), align: 0
  Segment part 35.            Intra module refs:   HalLcdWriteString::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString       0002E880 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002D ( 00000015 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EA15 - 0002EA6B (0x57 bytes), align: 0
  Segment part 37.            Intra module refs:   HalLcdWriteValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteValue        0002EA15 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000001 ( 00000029 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EA6C - 0002EA8F (0x24 bytes), align: 0
  Segment part 39.            Intra module refs:   HalLcdWriteScreen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteScreen       0002EA6C 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EA90 - 0002EB70 (0xe1 bytes), align: 0
  Segment part 41.            Intra module refs:   HalLcdWriteStringValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue
                                   0002EA90 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000001 ( 0000002F )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024A6 - 000024B6 (0x11 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FCD - 00001FD2 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   initLcd
           LOCAL                   ADDRESS         
           =====                   =======         
           Delay_nms::?relay       00001FCD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FD3 - 00001FD8 (0x6 bytes), align: 0
  Segment part 18.            Intra module refs:   LCD_write_byte
           LOCAL                   ADDRESS         
           =====                   =======         
           SendByte::?relay        00001FD3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FD9 - 00001FDE (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   LCD_clear
                                                   LCD_set_XY
                                                   LCD_write_char
                                                   LCD_write_english_string
                                                   initLcd
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_write_byte::?relay
                                   00001FD9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FDF - 00001FE4 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   initLcd
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_clear::?relay       00001FDF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FE5 - 00001FEA (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   LCD_write_english_string
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_set_XY::?relay      00001FE5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FEB - 00001FF0 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   LCD_write_english_string
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_write_char::?relay
                                   00001FEB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FF1 - 00001FF6 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   HalLcdInit
           LOCAL                   ADDRESS         
           =====                   =======         
           initLcd::?relay         00001FF1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FF7 - 00001FFC (0x6 bytes), align: 0
  Segment part 30.            Intra module refs:   lcdUpdateLine
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_write_english_string::?relay
                                   00001FF7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FFD - 00002002 (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   HalLcdWriteString
           LOCAL                   ADDRESS         
           =====                   =======         
           lcdUpdateLine::?relay   00001FFD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002003 - 00002008 (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit::?relay      00002003        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002009 - 0000200E (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   HalLcdWriteScreen
                                                   HalLcdWriteString
                                                   HalLcdWriteStringValue
                                                   HalLcdWriteValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString::?relay
                                   00002009        AXD_Init (AXD)
                                                   nwk_Status (nwk_globals)
                                                   zmain_dev_info (ZMain)
                                                   zmain_lcd_init (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000200F - 00002014 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteValue::?relay
                                   0000200F        nwk_Status (nwk_globals)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002015 - 0000201A (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteScreen::?relay
                                   00002015        ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_StartDevice (ZDObject)
                                                   nwk_Status (nwk_globals)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000201B - 00002020 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue::?relay
                                   0000201B        displayXYZ (adxl345)
                                                   nwk_Status (nwk_globals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF69 - 0000EF79 (0x11 bytes), align: 0
  Segment part 9.             Intra module refs:   HalLcdWriteString
=======
  Relative segment, address: CODE 00001E52 - 00001E57 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyInit::?relay      00001E52        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E58 - 00001E5D (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyConfig::?relay    00001E58        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E5E - 00001E63 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyRead::?relay      00001E5E        ZDAppCheckForHoldKey (ZDApp)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E64 - 00001E69 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalKeyPoll::?relay      00001E64        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E6A - 00001E6F (0x6 bytes), align: 0
  Segment part 32.            Intra module refs:   halKeyPort0Isr
                                                   halKeyPort1Isr
                                                   halKeyPort2Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessKeyInterrupt::?relay
                                   00001E6A 

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_lcd.r51
  PROGRAM MODULE, NAME : hal_lcd

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FEAE - 0002FEB0 (0x3 bytes), align: 0
  Segment part 9.             Intra module refs:   HalLcdInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit              0002FEAE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FEB1 - 0002FEB3 (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   HalLcdWriteString::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString       0002FEB1 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000002D ( 00000000 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FEB4 - 0002FF94 (0xe1 bytes), align: 0
  Segment part 17.            Intra module refs:   HalLcdWriteStringValue::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue
                                   0002FEB4 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000001 ( 0000002F )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E70 - 00001E75 (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdInit::?relay      00001E70        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E76 - 00001E7B (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   HalLcdWriteStringValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteString::?relay
                                   00001E76 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E7C - 00001E81 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLcdWriteStringValue::?relay
                                   00001E7C        displayXYZ (adxl345)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_led.r51
  PROGRAM MODULE, NAME : hal_led

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ECA5 - 0000ECA5 (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EC43 - 0000EC43 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 8.             Intra module refs:   HalLedBlink
                                                   HalLedOnOff
                                                   HalLedSet
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           HalLedState             0000ECA5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECA6 - 0000ECA6 (0x1 bytes), align: 0
=======
           HalLedState             0000EC43 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC44 - 0000EC44 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 10.            Intra module refs:   HalLedBlink
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           preBlinkState           0000ECA6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECA7 - 0000ECCB (0x25 bytes), align: 0
=======
           preBlinkState           0000EC44 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC45 - 0000EC69 (0x25 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   HalLedBlink
                                                   HalLedInit
                                                   HalLedSet
                                                   HalLedUpdate
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           HalLedStatusControl     0000ECA7 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D6E1 - 0002D6F8 (0x18 bytes), align: 0
  Segment part 14.            Intra module refs:   HalLedInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit              0002D6E1 
=======
           HalLedStatusControl     0000EC45 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002B55A - 0002B571 (0x18 bytes), align: 0
  Segment part 14.            Intra module refs:   HalLedInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit              0002B55A 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D6F9 - 0002D78D (0x95 bytes), align: 0
  Segment part 16.            Intra module refs:   HalLedSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet               0002D6F9 
=======
  Relative segment, address: CODE 0002B572 - 0002B606 (0x95 bytes), align: 0
  Segment part 16.            Intra module refs:   HalLedSet::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedSet               0002B572 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001B ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D78E - 0002D8D5 (0x148 bytes), align: 0
  Segment part 18.            Intra module refs:   HalLedBlink::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink             0002D78E 
=======
  Relative segment, address: CODE 0002B607 - 0002B74E (0x148 bytes), align: 0
  Segment part 18.            Intra module refs:   HalLedBlink::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink             0002B607 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000014 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002D8D6 - 0002DBFB (0x326 bytes), align: 0
  Segment part 20.            Intra module refs:   HalLedUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate            0002D8D6 
=======
  Relative segment, address: CODE 0002B74F - 0002BA74 (0x326 bytes), align: 0
  Segment part 20.            Intra module refs:   HalLedUpdate::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate            0002B74F 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001B )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002DBFC - 0002DC5A (0x5f bytes), align: 0
  Segment part 22.            Intra module refs:   HalLedOnOff::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff             0002DBFC 
=======
  Relative segment, address: CODE 0002BA75 - 0002BAD3 (0x5f bytes), align: 0
  Segment part 22.            Intra module refs:   HalLedOnOff::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedOnOff             0002BA75 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001B ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EF7A - 0000EF7D (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           0000EF7A 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024B7 - 000024BA (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   __Constant_64
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002021 - 00002026 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit::?relay      00002021        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002027 - 0000202C (0x6 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EE76 - 0000EE79 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_64           0000EE76 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002261 - 00002264 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   __Constant_64
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E82 - 00001E87 (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedInit::?relay      00001E82        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E88 - 00001E8D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 17.            Intra module refs:   HalLedBlink
                                                   HalLedInit
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           HalLedSet::?relay       00002027        AXD_HandleKeys (AXD)
=======
           HalLedSet::?relay       00001E88        AXD_HandleKeys (AXD)
>>>>>>> develop
                                                   AXD_ProcessZDOMsgs (AXD)
                                                   ChkReset (OnBoard)
                                                   InitBoard (OnBoard)
                                                   ZDO_JoinConfirmCB (ZDApp)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000202D - 00002032 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink::?relay     0000202D        ZDApp_Init (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002033 - 00002038 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate::?relay    00002033        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002039 - 0000203E (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001E8E - 00001E93 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   HalLedSet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedBlink::?relay     00001E8E        ZDApp_Init (ZDApp)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E94 - 00001E99 (0x6 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalLedUpdate::?relay    00001E94        Hal_ProcessEvent (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001E9A - 00001E9F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 23.            Intra module refs:   HalLedSet
                                                   HalLedUpdate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           HalLedOnOff::?relay     00002039 
=======
           HalLedOnOff::?relay     00001E9A 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_sleep.r51
  PROGRAM MODULE, NAME : hal_sleep

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   macMcuInit (mac_mcu)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 0000106D - 00001089 (0x1d bytes), align: 0
  Segment part 69.            Intra module refs:   halSleepTimerIsr::??INTVEC 43
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr        0000106D 
=======
  Relative segment, address: CODE 00000FB2 - 00000FCE (0x1d bytes), align: 0
  Segment part 69.            Intra module refs:   halSleepTimerIsr::??INTVEC 43
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr        00000FB2 
>>>>>>> develop
               interrupt function
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000005 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002D (0x2e bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halSleepTimerIsr::??INTVEC 43
                                   0000002B 

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_target.r51
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_timer.r51
  PROGRAM MODULE, NAME : hal_timer

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000CB - 000000CB (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   HalTimerStart
                                                   HalTimerStop
                                                   halTimerSetOpMode
                                                   halTimerSetPrescale
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CTL                   000000CB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CC - 000000CC (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   HalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CCTL0                 000000CC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CE - 000000CE (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   HalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T3CCTL1                 000000CE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D8 - 000000D8 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   halProcessTimer3
                                                   halProcessTimer4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMIF                000000D8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E4 - 000000E4 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   halProcessTimer1
                                                   halTimerSetOpMode
                                                   halTimerSetPrescale
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CTL                   000000E4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL0                 000000E5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E6 - 000000E6 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL1                 000000E6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E7 - 000000E7 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T1CCTL2                 000000E7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EB - 000000EB (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HalTimerStart
                                                   HalTimerStop
                                                   halTimerSetOpMode
                                                   halTimerSetPrescale
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CTL                   000000EB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EC - 000000EC (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   HalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CCTL0                 000000EC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EE - 000000EE (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   HalTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T4CCTL1                 000000EE 
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ECCC - 0000ECE9 (0x1e bytes), align: 0
=======
  Relative segment, address: XDATA 0000EC6A - 0000EC87 (0x1e bytes), align: 0
>>>>>>> develop
  Segment part 21.            Intra module refs:   HalTimerConfig
                                                   HalTimerInit
                                                   HalTimerInterruptEnable
                                                   HalTimerStart
                                                   HalTimerTick
                                                   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
                                                   halTimerSendCallBack
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           halTimerRecord          0000ECCC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECEA - 0000ED07 (0x1e bytes), align: 0
=======
           halTimerRecord          0000EC6A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EC88 - 0000ECA5 (0x1e bytes), align: 0
>>>>>>> develop
  Segment part 22.            Intra module refs:   HalTimerInit
                                                   HalTimerInterruptEnable
                                                   halTimerSetChannelMode
                                                   halTimerSetCount
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           halTimerChannel         0000ECEA 
=======
           halTimerChannel         0000EC88 
>>>>>>> develop
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F321 - 0001F412 (0xf2 bytes), align: 0
  Segment part 23.            Intra module refs:   HalTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInit            0001F321 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F413 - 0001F551 (0x13f bytes), align: 0
  Segment part 25.            Intra module refs:   HalTimerConfig::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerConfig          0001F413 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000002 ( 0000000E )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F552 - 0001F683 (0x132 bytes), align: 0
  Segment part 27.            Intra module refs:   HalTimerStart::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStart           0001F552 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F684 - 0001F6A9 (0x26 bytes), align: 0
  Segment part 29.            Intra module refs:   HalTimerTick::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerTick            0001F684 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F6AA - 0001F6DF (0x36 bytes), align: 0
  Segment part 31.            Intra module refs:   HalTimerStop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStop            0001F6AA 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F6E0 - 0001F7DE (0xff bytes), align: 0
  Segment part 33.            Intra module refs:   halTimerSetCount::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetCount        0001F6E0 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000014 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F7DF - 0001F821 (0x43 bytes), align: 0
  Segment part 35.            Intra module refs:   halTimerSetPrescale::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetPrescale     0001F7DF 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F822 - 0001F8AF (0x8e bytes), align: 0
  Segment part 37.            Intra module refs:   halTimerSetOpMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetOpMode       0001F822 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F8B0 - 0001F92E (0x7f bytes), align: 0
  Segment part 39.            Intra module refs:   halTimerSetChannelMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetChannelMode
                                   0001F8B0 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001F92F - 0001FADC (0x1ae bytes), align: 0
  Segment part 41.            Intra module refs:   HalTimerInterruptEnable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInterruptEnable
                                   0001F92F 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FADD - 0001FB56 (0x7a bytes), align: 0
  Segment part 43.            Intra module refs:   halTimerSendCallBack::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSendCallBack    0001FADD 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB57 - 0001FB7F (0x29 bytes), align: 0
  Segment part 45.            Intra module refs:   halTimerRemap::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerRemap           0001FB57 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000E ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FB80 - 0001FC2E (0xaf bytes), align: 0
  Segment part 47.            Intra module refs:   halProcessTimer1::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer1        0001FB80 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FC2F - 0001FCC2 (0x94 bytes), align: 0
  Segment part 49.            Intra module refs:   halProcessTimer3::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer3        0001FC2F 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FCC3 - 0001FD56 (0x94 bytes), align: 0
  Segment part 51.            Intra module refs:   halProcessTimer4::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer4        0001FCC3 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 0000108A - 00001098 (0xf bytes), align: 0
  Segment part 53.            Intra module refs:   halTimer1Isr::??INTVEC 75
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer1Isr            0000108A 
=======
  Relative segment, address: CODE 00000FCF - 00000FDD (0xf bytes), align: 0
  Segment part 53.            Intra module refs:   halTimer1Isr::??INTVEC 75
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer1Isr            00000FCF 
>>>>>>> develop
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00001099 - 000010A7 (0xf bytes), align: 0
  Segment part 54.            Intra module refs:   halTimer3Isr::??INTVEC 91
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer3Isr            00001099 
=======
  Relative segment, address: CODE 00000FDE - 00000FEC (0xf bytes), align: 0
  Segment part 54.            Intra module refs:   halTimer3Isr::??INTVEC 91
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer3Isr            00000FDE 
>>>>>>> develop
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 000010A8 - 000010B6 (0xf bytes), align: 0
  Segment part 55.            Intra module refs:   halTimer4Isr::??INTVEC 99
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer4Isr            000010A8 
=======
  Relative segment, address: CODE 00000FED - 00000FFB (0xf bytes), align: 0
  Segment part 55.            Intra module refs:   halTimer4Isr::??INTVEC 99
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer4Isr            00000FED 
>>>>>>> develop
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000004D (0x4e bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer1Isr::??INTVEC 75
                                   0000004B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000005D (0x5e bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer3Isr::??INTVEC 91
                                   0000005B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000065 (0x66 bytes), align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimer4Isr::??INTVEC 99
                                   00000063 
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000203F - 00002044 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInit::?relay    0000203F        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002045 - 0000204A (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001EA0 - 00001EA5 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInit::?relay    00001EA0        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EA6 - 00001EAB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerConfig::?relay
<<<<<<< HEAD
                                   00002045        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000204B - 00002050 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStart::?relay   0000204B        osal_timer_hw_setup (OSAL_Timers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002051 - 00002056 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerTick::?relay    00002051        Hal_ProcessPoll (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002057 - 0000205C (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStop::?relay    00002057        osal_timer_hw_setup (OSAL_Timers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000205D - 00002062 (0x6 bytes), align: 0
=======
                                   00001EA6        InitBoard (OnBoard)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EAC - 00001EB1 (0x6 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStart::?relay   00001EAC        osal_timer_hw_setup (OSAL_Timers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EB2 - 00001EB7 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerTick::?relay    00001EB2        Hal_ProcessPoll (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EB8 - 00001EBD (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerStop::?relay    00001EB8        osal_timer_hw_setup (OSAL_Timers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EBE - 00001EC3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 34.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetCount::?relay
<<<<<<< HEAD
                                   0000205D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002063 - 00002068 (0x6 bytes), align: 0
=======
                                   00001EBE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EC4 - 00001EC9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetPrescale::?relay
<<<<<<< HEAD
                                   00002063 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002069 - 0000206E (0x6 bytes), align: 0
=======
                                   00001EC4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001ECA - 00001ECF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.            Intra module refs:   HalTimerStart
                                                   HalTimerStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetOpMode::?relay
<<<<<<< HEAD
                                   00002069 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000206F - 00002074 (0x6 bytes), align: 0
=======
                                   00001ECA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001ED0 - 00001ED5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 40.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSetChannelMode::?relay
<<<<<<< HEAD
                                   0000206F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002075 - 0000207A (0x6 bytes), align: 0
=======
                                   00001ED0 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001ED6 - 00001EDB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 42.            Intra module refs:   HalTimerStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalTimerInterruptEnable::?relay
<<<<<<< HEAD
                                   00002075 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000207B - 00002080 (0x6 bytes), align: 0
=======
                                   00001ED6 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EDC - 00001EE1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.            Intra module refs:   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halTimerSendCallBack::?relay
<<<<<<< HEAD
                                   0000207B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002081 - 00002086 (0x6 bytes), align: 0
=======
                                   00001EDC 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EE2 - 00001EE7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 46.            Intra module refs:   HalTimerConfig
                                                   HalTimerStart
                                                   HalTimerStop
                                                   halProcessTimer1
                                                   halProcessTimer3
                                                   halProcessTimer4
                                                   halTimerSendCallBack
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           halTimerRemap::?relay   00002081 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002087 - 0000208C (0x6 bytes), align: 0
=======
           halTimerRemap::?relay   00001EE2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EE8 - 00001EED (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 48.            Intra module refs:   HalTimerTick
                                                   halTimer1Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer1::?relay
<<<<<<< HEAD
                                   00002087 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000208D - 00002092 (0x6 bytes), align: 0
=======
                                   00001EE8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EEE - 00001EF3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 50.            Intra module refs:   HalTimerTick
                                                   halTimer3Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer3::?relay
<<<<<<< HEAD
                                   0000208D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002093 - 00002098 (0x6 bytes), align: 0
=======
                                   00001EEE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001EF4 - 00001EF9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 52.            Intra module refs:   HalTimerTick
                                                   halTimer4Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halProcessTimer4::?relay
<<<<<<< HEAD
                                   00002093 
=======
                                   00001EF4 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\hal_uart.r51
  PROGRAM MODULE, NAME : hal_uart

  SEGMENTS IN THE MODULE
  ======================
<<<<<<< HEAD
SFR_AN
  Relative segment, address: DATA 00000086 - 00000086 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   HalUARTInit
                                                   HalUARTOpen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0CSR                   00000086 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   HalUARTOpen
                                                   pollDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0DBUF                  000000C1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   HalUARTOpen
                                                   pollDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0BAUD                  000000C2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C4 - 000000C4 (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   HalUARTInit
                                                   HalUARTOpen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0UCR                   000000C4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C5 - 000000C5 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   HalUARTOpen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0GCR                   000000C5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D1 - 000000D1 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   HalUARTOpen
                                                   pollDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAIRQ                  000000D1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D6 - 000000D6 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   HalUARTOpen
                                                   pollDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAARM                  000000D6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D7 - 000000D7 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   pollDMA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DMAREQ                  000000D7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   HalUARTInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED08 - 0000ED09 (0x2 bytes), align: 0
  Segment part 22.            Intra module refs:   HalUARTOpen
                                                   HalUARTPoll
                                                   HalUARTRead
                                                   HalUARTWrite
                                                   Hal_UART_RxBufLen
           LOCAL                   ADDRESS         
           =====                   =======         
           cfg0                    0000ED08 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001B5DA - 0001B9FF (0x426 bytes), align: 0
  Segment part 24.            Intra module refs:   pollDMA::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           pollDMA                 0001B5DA 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BA00 - 0001BCAD (0x2ae bytes), align: 0
  Segment part 26.            Intra module refs:   HalUARTInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit             0001BA00 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BCAE - 0001BF03 (0x256 bytes), align: 0
  Segment part 28.            Intra module refs:   HalUARTOpen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen             0001BCAE 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000F )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001BF04 - 0001C077 (0x174 bytes), align: 0
  Segment part 32.            Intra module refs:   HalUARTPoll::?relay
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DE82 - 0002DF97 (0x116 bytes), align: 0
  Segment part 9.             Intra module refs:   HalUARTOpen::?relay
>>>>>>> develop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen             0002DE82 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
XDATA_Z
  Relative segment, address: XDATA 0000ED0A - 0000ED0A (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           HalUARTPoll::tickShdw   0000ED0A 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C078 - 0001C0FF (0x88 bytes), align: 0
  Segment part 34.            Intra module refs:   Hal_UART_RxBufLen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen       0001C078 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001C100 - 0001C1C7 (0xc8 bytes), align: 0
  Segment part 36.            Intra module refs:   HalUARTRead::?relay
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DF98 - 0002E041 (0xaa bytes), align: 0
  Segment part 17.            Intra module refs:   HalUARTRead::?relay
>>>>>>> develop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead             0002DF98 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000D )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002E042 - 0002E1CE (0x18d bytes), align: 0
  Segment part 19.            Intra module refs:   HalUARTWrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTWrite            0002E042 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002099 - 0000209E (0x6 bytes), align: 0
  Segment part 25.            Intra module refs:   HalUARTPoll
           LOCAL                   ADDRESS         
           =====                   =======         
           pollDMA::?relay         00002099 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000209F - 000020A4 (0x6 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTInit::?relay     0000209F        HalDriverInit (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020A5 - 000020AA (0x6 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen::?relay     000020A5        AXD_Init (AXD)
                                                   SPIMgr_Init (SPIMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020AB - 000020B0 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTPoll::?relay     000020AB        Hal_ProcessPoll (hal_drivers)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020B1 - 000020B6 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Hal_UART_RxBufLen::?relay
                                   000020B1        SPIMgr_ProcessZToolData (SPIMgr)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020B7 - 000020BC (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead::?relay     000020B7        SPIMgr_ProcessZToolData (SPIMgr)
                                                   rxCB_Loopback (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020BD - 000020C2 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTWrite::?relay    000020BD        MT_BuildAndSendZToolResponse (MTEL)
                                                   MT_ProcessCommand (MTEL)
                                                   MT_ProcessDebugMsg (MTEL)
                                                   MT_ProcessDebugStr (MTEL)
                                                   rxCB_Loopback (AXD)
=======
  Relative segment, address: CODE 00001EFA - 00001EFF (0x6 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTOpen::?relay     00001EFA        AXD_Init (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F00 - 00001F05 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTRead::?relay     00001F00        rxCB_Loopback (AXD)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F06 - 00001F0B (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HalUARTWrite::?relay    00001F06        rxCB_Loopback (AXD)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_backoff_timer.r51
  PROGRAM MODULE, NAME : mac_backoff_timer

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A6 - 000000A6 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2TLD                   000000A6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A7 - 000000A7 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2THD                   000000A7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C3 - 000000C3 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   macBackoffTimerInit
                                                   macMcuInit (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuTimer2Isr (mac_mcu)
                                                   macSleepWakeUp (mac_sleep)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CNF                   000000C3 
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ED0B - 0000ED0E (0x4 bytes), align: 0
=======
  Relative segment, address: XDATA 0000ECA6 - 0000ECA9 (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 10.            Intra module refs:   macBackoffTimerCancelTrigger
                                                   macBackoffTimerCapture
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerCount
                                                   macBackoffTimerSetRollover
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           backoffTimerRollover    0000ED0B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED0F - 0000ED12 (0x4 bytes), align: 0
=======
           backoffTimerRollover    0000ECA6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECAA - 0000ECAD (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   macBackoffTimerCompareIsr
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           backoffTimerTrigger     0000ED0F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED13 - 0000ED13 (0x1 bytes), align: 0
=======
           backoffTimerTrigger     0000ECAA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECAE - 0000ECAE (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 12.            Intra module refs:   macBackoffTimerCancelTrigger
                                                   macBackoffTimerCompareIsr
                                                   macBackoffTimerInit
                                                   macBackoffTimerSetTrigger
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           compareState            0000ED13 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A034 - 0003A071 (0x3e bytes), align: 0
  Segment part 21.            Intra module refs:   macBackoffTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerInit     0003A034 
=======
           compareState            0000ECAE 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F2B0 - 0002F2ED (0x3e bytes), align: 0
  Segment part 21.            Intra module refs:   macBackoffTimerInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerInit     0002F2B0 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A072 - 0003A084 (0x13 bytes), align: 0
  Segment part 23.            Intra module refs:   macBackoffTimerReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerReset    0003A072 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F2EE - 0002F300 (0x13 bytes), align: 0
  Segment part 23.            Intra module refs:   macBackoffTimerReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerReset    0002F2EE 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A085 - 0003A0CD (0x49 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F301 - 0002F349 (0x49 bytes), align: 0
>>>>>>> develop
  Segment part 25.            Intra module refs:   macBackoffTimerSetRollover::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerSetRollover
<<<<<<< HEAD
                                   0003A085 
=======
                                   0002F301 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000C ( 00000010 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A0CE - 0003A11E (0x51 bytes), align: 0
  Segment part 29.            Intra module refs:   macBackoffTimerCount::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCount    0003A0CE 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F34A - 0002F39A (0x51 bytes), align: 0
  Segment part 29.            Intra module refs:   macBackoffTimerCount::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCount    0002F34A 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A11F - 0003A16F (0x51 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F39B - 0002F3EB (0x51 bytes), align: 0
>>>>>>> develop
  Segment part 31.            Intra module refs:   macBackoffTimerCapture::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCapture
<<<<<<< HEAD
                                   0003A11F 
=======
                                   0002F39B 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A170 - 0003A1FC (0x8d bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F3EC - 0002F478 (0x8d bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   macBackoffTimerSetTrigger::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerSetTrigger
<<<<<<< HEAD
                                   0003A170 
=======
                                   0002F3EC 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A1FD - 0003A22C (0x30 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F479 - 0002F4A8 (0x30 bytes), align: 0
>>>>>>> develop
  Segment part 37.            Intra module refs:   macBackoffTimerCancelTrigger::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCancelTrigger
<<<<<<< HEAD
                                   0003A1FD 
=======
                                   0002F479 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003A22D - 0003A2B0 (0x84 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F4A9 - 0002F52C (0x84 bytes), align: 0
>>>>>>> develop
  Segment part 41.            Intra module refs:   macBackoffTimerCompareIsr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCompareIsr
<<<<<<< HEAD
                                   0003A22D 
=======
                                   0002F4A9 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EF7E - 0000EF81 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   macBackoffTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c0000        0000EF7E 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024BB - 000024BE (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   __Constant_c0000
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020C3 - 000020C8 (0x6 bytes), align: 0
=======
  Relative segment, address: XDATA 0000EE7A - 0000EE7D (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   macBackoffTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_c0000        0000EE7A 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002265 - 00002268 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   __Constant_c0000
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F0C - 00001F11 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.            Intra module refs:   macBackoffTimerReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerInit::?relay
<<<<<<< HEAD
                                   000020C3        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020C9 - 000020CE (0x6 bytes), align: 0
=======
                                   00001F0C        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F12 - 00001F17 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerReset::?relay
<<<<<<< HEAD
                                   000020C9        macLowLevelReset (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020CF - 000020D4 (0x6 bytes), align: 0
=======
                                   00001F12        macLowLevelReset (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F18 - 00001F1D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.            Intra module refs:   macBackoffTimerInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerSetRollover::?relay
<<<<<<< HEAD
                                   000020CF        macBackoffTimerRolloverCallback (mac_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020D5 - 000020DA (0x6 bytes), align: 0
=======
                                   00001F18        macBackoffTimerRolloverCallback (mac_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F1E - 00001F23 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCount::?relay
<<<<<<< HEAD
                                   000020D5        Segment part 44 (mac_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020DB - 000020E0 (0x6 bytes), align: 0
=======
                                   00001F1E        Segment part 44 (mac_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F24 - 00001F29 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCapture::?relay
<<<<<<< HEAD
                                   000020DB        macTxTimestampCallback (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020E1 - 000020E6 (0x6 bytes), align: 0
=======
                                   00001F24        macTxTimestampCallback (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F2A - 00001F2F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerSetTrigger::?relay
<<<<<<< HEAD
                                   000020E1        macTimerUpdateBackoffTimer (mac_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020E7 - 000020EC (0x6 bytes), align: 0
=======
                                   00001F2A        macTimerUpdateBackoffTimer (mac_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F30 - 00001F35 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCancelTrigger::?relay
<<<<<<< HEAD
                                   000020E7        macTimerUpdateBackoffTimer (mac_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020ED - 000020F2 (0x6 bytes), align: 0
=======
                                   00001F30        macTimerUpdateBackoffTimer (mac_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F36 - 00001F3B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macBackoffTimerCompareIsr::?relay
<<<<<<< HEAD
                                   000020ED        macMcuTimer2Isr (mac_mcu)
=======
                                   00001F36        macMcuTimer2Isr (mac_mcu)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_cfg.r51
  PROGRAM MODULE, NAME : mac_cfg

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EF82 - 0000EF86 (0x5 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCfg                  0000EF82        MAC_McpsDataReq (mac_data)
=======
  Relative segment, address: XDATA 0000EE7E - 0000EE82 (0x5 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCfg                  0000EE7E        MAC_McpsDataReq (mac_data)
>>>>>>> develop
                                                   macDataRxMemAlloc (mac_data)
                                                   macDataTxEnqueue (mac_data)
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 000024BF - 000024C3 (0x5 bytes), align: 0
=======
  Relative segment, address: CODE 00002269 - 0000226D (0x5 bytes), align: 0
>>>>>>> develop
  Segment part 7.             Intra module refs:   macCfg

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_csp_tx.r51
  PROGRAM MODULE, NAME : mac_csp_tx

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000094 - 00000094 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   macCspTxGoCsma
                                                   macCspTxRequestAckTimeoutCallback
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CMP                   00000094 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   cspPrepForTxProgram
                                                   macCspTxRequestAckTimeoutCallback
                                                   macMcuRfIsr (mac_mcu)
                                                   rxStartIsr (mac_rx)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A1 - 000000A1 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   macCspTxGoSlotted
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF0                   000000A1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   cspPrepForTxProgram
                                                   macCspTxCancelAckTimeoutCallback
                                                   macCspTxGoCsma
                                                   macCspTxGoSlotted
                                                   macCspTxPrepCsmaSlotted
                                                   macCspTxPrepCsmaUnslotted
                                                   macCspTxPrepSlotted
                                                   macCspTxRequestAckTimeoutCallback
                                                   macRxHardDisable (mac_rx_onoff)
                                                   macRxOff (mac_rx_onoff)
                                                   macRxOn (mac_rx_onoff)
                                                   macTxFrame (mac_tx)
                                                   rxDone (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
                                                   rxStartIsr (mac_rx)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   cspPrepForTxProgram
                                                   macCspTxRequestAckTimeoutCallback
                                                   macMcuRfIsr (mac_mcu)
                                                   macRxOff (mac_rx_onoff)
                                                   macRxRadioPowerUpInit (mac_rx)
                                                   rxHaltCleanupFinalStep (mac_rx)
                                                   rxStartIsr (mac_rx)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIF                    000000E9 
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000395C8 - 0003960C (0x45 bytes), align: 0
  Segment part 17.            Intra module refs:   cspPrepForTxProgram::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           cspPrepForTxProgram     000395C8 
=======
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FD57 - 0001FD9B (0x45 bytes), align: 0
  Segment part 17.            Intra module refs:   cspPrepForTxProgram::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           cspPrepForTxProgram     0001FD57 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003960D - 0003963E (0x32 bytes), align: 0
=======
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FD9C - 0001FDCD (0x32 bytes), align: 0
>>>>>>> develop
  Segment part 19.            Intra module refs:   macCspTxPrepCsmaUnslotted::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepCsmaUnslotted
<<<<<<< HEAD
                                   0003960D 
=======
                                   0001FD9C 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003963F - 00039673 (0x35 bytes), align: 0
=======
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FDCE - 0001FE02 (0x35 bytes), align: 0
>>>>>>> develop
  Segment part 21.            Intra module refs:   macCspTxPrepCsmaSlotted::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepCsmaSlotted
<<<<<<< HEAD
                                   0003963F 
=======
                                   0001FDCE 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039674 - 000396A3 (0x30 bytes), align: 0
  Segment part 23.            Intra module refs:   macCspTxGoCsma::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoCsma          00039674 
=======
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FE03 - 0001FE32 (0x30 bytes), align: 0
  Segment part 23.            Intra module refs:   macCspTxGoCsma::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoCsma          0001FE03 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000396A4 - 000396C6 (0x23 bytes), align: 0
  Segment part 25.            Intra module refs:   macCspTxPrepSlotted::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepSlotted     000396A4 
=======
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FE33 - 0001FE55 (0x23 bytes), align: 0
  Segment part 25.            Intra module refs:   macCspTxPrepSlotted::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepSlotted     0001FE33 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000396C7 - 00039716 (0x50 bytes), align: 0
  Segment part 27.            Intra module refs:   macCspTxGoSlotted::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoSlotted       000396C7 
=======
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FE56 - 0001FEA5 (0x50 bytes), align: 0
  Segment part 27.            Intra module refs:   macCspTxGoSlotted::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoSlotted       0001FE56 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039717 - 0003973C (0x26 bytes), align: 0
=======
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FEA6 - 0001FECB (0x26 bytes), align: 0
>>>>>>> develop
  Segment part 29.            Intra module refs:   macCspForceTxDoneIfPending::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspForceTxDoneIfPending
<<<<<<< HEAD
                                   00039717 
=======
                                   0001FEA6 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003973D - 00039822 (0xe6 bytes), align: 0
=======
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FECC - 0001FFB1 (0xe6 bytes), align: 0
>>>>>>> develop
  Segment part 31.            Intra module refs:   macCspTxRequestAckTimeoutCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxRequestAckTimeoutCallback
<<<<<<< HEAD
                                   0003973D 
=======
                                   0001FECC 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039823 - 0003982B (0x9 bytes), align: 0
=======
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FFB2 - 0001FFBA (0x9 bytes), align: 0
>>>>>>> develop
  Segment part 33.            Intra module refs:   macCspTxCancelAckTimeoutCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxCancelAckTimeoutCallback
<<<<<<< HEAD
                                   00039823 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003982C - 0003983C (0x11 bytes), align: 0
  Segment part 35.            Intra module refs:   macCspTxIntIsr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxIntIsr          0003982C 
=======
                                   0001FFB2 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FFBB - 0001FFCB (0x11 bytes), align: 0
  Segment part 35.            Intra module refs:   macCspTxIntIsr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxIntIsr          0001FFBB 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003983D - 00039870 (0x34 bytes), align: 0
  Segment part 37.            Intra module refs:   macCspTxStopIsr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxStopIsr         0003983D 
=======
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0001FFCC - 0001FFFF (0x34 bytes), align: 0
  Segment part 37.            Intra module refs:   macCspTxStopIsr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxStopIsr         0001FFCC 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000020F3 - 000020F8 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001F3C - 00001F41 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 18.            Intra module refs:   macCspTxPrepCsmaSlotted
                                                   macCspTxPrepCsmaUnslotted
                                                   macCspTxPrepSlotted
           LOCAL                   ADDRESS         
           =====                   =======         
           cspPrepForTxProgram::?relay
<<<<<<< HEAD
                                   000020F3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020F9 - 000020FE (0x6 bytes), align: 0
=======
                                   00001F3C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F42 - 00001F47 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepCsmaUnslotted::?relay
<<<<<<< HEAD
                                   000020F9        txCsmaPrep (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020FF - 00002104 (0x6 bytes), align: 0
=======
                                   00001F42        txCsmaPrep (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F48 - 00001F4D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepCsmaSlotted::?relay
<<<<<<< HEAD
                                   000020FF        txCsmaPrep (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002105 - 0000210A (0x6 bytes), align: 0
=======
                                   00001F48        txCsmaPrep (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F4E - 00001F53 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoCsma::?relay
<<<<<<< HEAD
                                   00002105        txCsmaGo (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000210B - 00002110 (0x6 bytes), align: 0
=======
                                   00001F4E        txCsmaGo (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F54 - 00001F59 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxPrepSlotted::?relay
<<<<<<< HEAD
                                   0000210B        macTxFrame (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002111 - 00002116 (0x6 bytes), align: 0
=======
                                   00001F54        macTxFrame (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F5A - 00001F5F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxGoSlotted::?relay
<<<<<<< HEAD
                                   00002111        txGo (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002117 - 0000211C (0x6 bytes), align: 0
=======
                                   00001F5A        txGo (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F60 - 00001F65 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspForceTxDoneIfPending::?relay
<<<<<<< HEAD
                                   00002117        rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000211D - 00002122 (0x6 bytes), align: 0
=======
                                   00001F60        rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F66 - 00001F6B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxRequestAckTimeoutCallback::?relay
<<<<<<< HEAD
                                   0000211D        macTxDoneCallback (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002123 - 00002128 (0x6 bytes), align: 0
=======
                                   00001F66        macTxDoneCallback (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F6C - 00001F71 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxCancelAckTimeoutCallback::?relay
<<<<<<< HEAD
                                   00002123        macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002129 - 0000212E (0x6 bytes), align: 0
=======
                                   00001F6C        macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F72 - 00001F77 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.            Intra module refs:   macCspForceTxDoneIfPending
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxIntIsr::?relay
<<<<<<< HEAD
                                   00002129        macMcuRfIsr (mac_mcu)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000212F - 00002134 (0x6 bytes), align: 0
=======
                                   00001F72        macMcuRfIsr (mac_mcu)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F78 - 00001F7D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macCspTxStopIsr::?relay
<<<<<<< HEAD
                                   0000212F        macMcuRfIsr (mac_mcu)
=======
                                   00001F78        macMcuRfIsr (mac_mcu)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_low_level.r51
  PROGRAM MODULE, NAME : mac_low_level

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B2DE - 0003B2FA (0x1d bytes), align: 0
  Segment part 7.             Intra module refs:   macLowLevelInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelInit         0003B2DE 
=======
  Relative segment, address: CODE 00038A02 - 00038A1E (0x1d bytes), align: 0
  Segment part 7.             Intra module refs:   macLowLevelInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelInit         00038A02 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B2FB - 0003B31E (0x24 bytes), align: 0
  Segment part 9.             Intra module refs:   macLowLevelReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelReset        0003B2FB 
=======
  Relative segment, address: CODE 00038A1F - 00038A42 (0x24 bytes), align: 0
  Segment part 9.             Intra module refs:   macLowLevelReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelReset        00038A1F 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002135 - 0000213A (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001F7E - 00001F83 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelInit::?relay
<<<<<<< HEAD
                                   00002135        MAC_Init (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000213B - 00002140 (0x6 bytes), align: 0
=======
                                   00001F7E        MAC_Init (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F84 - 00001F89 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macLowLevelReset::?relay
<<<<<<< HEAD
                                   0000213B        MAC_MlmeResetReq (mac_mgmt)
=======
                                   00001F84        MAC_MlmeResetReq (mac_mgmt)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_mcu.r51
  PROGRAM MODULE, NAME : mac_mcu

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009C - 0000009C (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   macMcuOverflowCapture
                                                   macMcuOverflowSetCompare
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF0                0000009C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   macMcuOverflowCapture
                                                   macMcuOverflowSetCompare
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF1                0000009D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   macMcuAndT2PEROF2
                                                   macMcuOrT2PEROF2
                                                   macMcuOverflowCapture
                                                   macMcuOverflowSetCompare
                                                   macMcuTimer2Isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2PEROF2                0000009E 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A2 - 000000A2 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   macMcuOverflowCount
                                                   macMcuOverflowSetCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF1                   000000A2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A3 - 000000A3 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macMcuOverflowCount
                                                   macMcuOverflowSetCount
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2OF2                   000000A3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A4 - 000000A4 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macMcuInit
                                                   macMcuTimerCapture
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CAPLPL                000000A4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A5 - 000000A5 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   macMcuInit
                                                   macMcuTimerCapture
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T2CAPHPH                000000A5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A9 - 000000A9 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   macMcuInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP0                     000000A9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   macMcuInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP1                     000000B9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   macMcuInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDL                    000000BC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   macMcuRandomByte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RNDH                    000000BD 
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ED14 - 0000ED14 (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000ECAF - 0000ECAF (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 30.            Intra module refs:   macMcuRecordMaxRssiStart
                                                   macMcuRecordMaxRssiStop
                                                   mcuRecordMaxRssiIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           maxRssi                 0000ED14 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED15 - 0000ED15 (0x1 bytes), align: 0
=======
           maxRssi                 0000ECAF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECB0 - 0000ECB0 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 31.            Intra module refs:   macMcuAndT2PEROF2
                                                   macMcuInit
                                                   macMcuOrT2PEROF2
                                                   macMcuOverflowSetCompare
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           shadowPerof2            0000ED15 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000383DC - 00038490 (0xb5 bytes), align: 0
  Segment part 32.            Intra module refs:   macMcuInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuInit              000383DC 
=======
           shadowPerof2            0000ECB0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DB1C - 0002DBD0 (0xb5 bytes), align: 0
  Segment part 32.            Intra module refs:   macMcuInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuInit              0002DB1C 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038491 - 0003849D (0xd bytes), align: 0
  Segment part 34.            Intra module refs:   macMcuRandomByte::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRandomByte        00038491 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003849E - 000384BF (0x22 bytes), align: 0
  Segment part 38.            Intra module refs:   macMcuTimerCapture::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimerCapture      0003849E 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DBD1 - 0002DBDD (0xd bytes), align: 0
  Segment part 34.            Intra module refs:   macMcuRandomByte::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRandomByte        0002DBD1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DBDE - 0002DBFF (0x22 bytes), align: 0
  Segment part 38.            Intra module refs:   macMcuTimerCapture::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimerCapture      0002DBDE 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000384C0 - 00038513 (0x54 bytes), align: 0
  Segment part 40.            Intra module refs:   macMcuOverflowCount::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCount     000384C0 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DC00 - 0002DC53 (0x54 bytes), align: 0
  Segment part 40.            Intra module refs:   macMcuOverflowCount::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCount     0002DC00 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038514 - 00038569 (0x56 bytes), align: 0
  Segment part 42.            Intra module refs:   macMcuOverflowCapture::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCapture   00038514 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DC54 - 0002DCA9 (0x56 bytes), align: 0
  Segment part 42.            Intra module refs:   macMcuOverflowCapture::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCapture   0002DC54 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003856A - 000385D0 (0x67 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DCAA - 0002DD10 (0x67 bytes), align: 0
>>>>>>> develop
  Segment part 44.            Intra module refs:   macMcuOverflowSetCount::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowSetCount
<<<<<<< HEAD
                                   0003856A 
=======
                                   0002DCAA 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000385D1 - 0003867C (0xac bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DD11 - 0002DDBC (0xac bytes), align: 0
>>>>>>> develop
  Segment part 46.            Intra module refs:   macMcuOverflowSetCompare::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowSetCompare
<<<<<<< HEAD
                                   000385D1 
=======
                                   0002DD11 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 000010B7 - 000010DE (0x28 bytes), align: 0
  Segment part 58.            Intra module refs:   macMcuTimer2Isr::??INTVEC 83
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimer2Isr         000010B7 
=======
  Relative segment, address: CODE 00000FFC - 00001023 (0x28 bytes), align: 0
  Segment part 58.            Intra module refs:   macMcuTimer2Isr::??INTVEC 83
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimer2Isr         00000FFC 
>>>>>>> develop
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003867D - 000386B7 (0x3b bytes), align: 0
  Segment part 48.            Intra module refs:   macMcuOrT2PEROF2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOrT2PEROF2        0003867D 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DDBD - 0002DDF7 (0x3b bytes), align: 0
  Segment part 48.            Intra module refs:   macMcuOrT2PEROF2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOrT2PEROF2        0002DDBD 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000386B8 - 000386F4 (0x3d bytes), align: 0
  Segment part 50.            Intra module refs:   macMcuAndT2PEROF2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuAndT2PEROF2       000386B8 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DDF8 - 0002DE34 (0x3d bytes), align: 0
  Segment part 50.            Intra module refs:   macMcuAndT2PEROF2::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuAndT2PEROF2       0002DDF8 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 000010DF - 00001146 (0x68 bytes), align: 0
  Segment part 59.            Intra module refs:   macMcuRfIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRfIsr             000010DF 
=======
  Relative segment, address: CODE 00001024 - 0000108B (0x68 bytes), align: 0
  Segment part 59.            Intra module refs:   macMcuRfIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRfIsr             00001024 
>>>>>>> develop
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000386F5 - 0003870A (0x16 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DE35 - 0002DE4A (0x16 bytes), align: 0
>>>>>>> develop
  Segment part 52.            Intra module refs:   macMcuRecordMaxRssiStart::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRecordMaxRssiStart
<<<<<<< HEAD
                                   000386F5 
=======
                                   0002DE35 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003870B - 0003871F (0x15 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DE4B - 0002DE5F (0x15 bytes), align: 0
>>>>>>> develop
  Segment part 54.            Intra module refs:   macMcuRecordMaxRssiStop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRecordMaxRssiStop
<<<<<<< HEAD
                                   0003870B 
=======
                                   0002DE4B 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038720 - 00038741 (0x22 bytes), align: 0
  Segment part 56.            Intra module refs:   mcuRecordMaxRssiIsr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           mcuRecordMaxRssiIsr     00038720 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002DE60 - 0002DE81 (0x22 bytes), align: 0
  Segment part 56.            Intra module refs:   mcuRecordMaxRssiIsr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           mcuRecordMaxRssiIsr     0002DE60 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000055 (0x56 bytes), align: 0
  Segment part 23. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimer2Isr::??INTVEC 83
                                   00000053 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000085 (0x86 bytes), align: 0
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRfIsr::??INTVEC 131
                                   00000083 
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002141 - 00002146 (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuInit::?relay      00002141        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002147 - 0000214C (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001F8A - 00001F8F (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuInit::?relay      00001F8A        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F90 - 00001F95 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRandomByte::?relay
<<<<<<< HEAD
                                   00002147        Onboard_rand (OnBoard)
                                                   macRadioRandomByte (mac_radio)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000214D - 00002152 (0x6 bytes), align: 0
=======
                                   00001F90        Onboard_rand (OnBoard)
                                                   macRadioRandomByte (mac_radio)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F96 - 00001F9B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuTimerCapture::?relay
<<<<<<< HEAD
                                   0000214D        macTxTimestampCallback (mac_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002153 - 00002158 (0x6 bytes), align: 0
=======
                                   00001F96        macTxTimestampCallback (mac_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001F9C - 00001FA1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCount::?relay
<<<<<<< HEAD
                                   00002153        macBackoffTimerCount (mac_backoff_timer)
=======
                                   00001F9C        macBackoffTimerCount (mac_backoff_timer)
>>>>>>> develop
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002159 - 0000215E (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001FA2 - 00001FA7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowCapture::?relay
<<<<<<< HEAD
                                   00002159        macBackoffTimerCapture (mac_backoff_timer)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000215F - 00002164 (0x6 bytes), align: 0
=======
                                   00001FA2        macBackoffTimerCapture (mac_backoff_timer)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FA8 - 00001FAD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowSetCount::?relay
<<<<<<< HEAD
                                   0000215F        macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002165 - 0000216A (0x6 bytes), align: 0
=======
                                   00001FA8        macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FAE - 00001FB3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 47.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOverflowSetCompare::?relay
<<<<<<< HEAD
                                   00002165        macBackoffTimerCancelTrigger (mac_backoff_timer)
=======
                                   00001FAE        macBackoffTimerCancelTrigger (mac_backoff_timer)
>>>>>>> develop
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000216B - 00002170 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001FB4 - 00001FB9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 49.            Intra module refs:   macMcuRecordMaxRssiStart
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuOrT2PEROF2::?relay
<<<<<<< HEAD
                                   0000216B        macBackoffTimerInit (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002171 - 00002176 (0x6 bytes), align: 0
=======
                                   00001FB4        macBackoffTimerInit (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FBA - 00001FBF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 51.            Intra module refs:   macMcuRecordMaxRssiStop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuAndT2PEROF2::?relay
<<<<<<< HEAD
                                   00002171        macBackoffTimerReset (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002177 - 0000217C (0x6 bytes), align: 0
=======
                                   00001FBA        macBackoffTimerReset (mac_backoff_timer)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FC0 - 00001FC5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 53.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRecordMaxRssiStart::?relay
<<<<<<< HEAD
                                   00002177        macRadioEnergyDetectStart (mac_radio)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000217D - 00002182 (0x6 bytes), align: 0
=======
                                   00001FC0        macRadioEnergyDetectStart (mac_radio)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FC6 - 00001FCB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMcuRecordMaxRssiStop::?relay
<<<<<<< HEAD
                                   0000217D        macRadioEnergyDetectStop (mac_radio)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002183 - 00002188 (0x6 bytes), align: 0
=======
                                   00001FC6        macRadioEnergyDetectStop (mac_radio)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FCC - 00001FD1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 57.            Intra module refs:   macMcuTimer2Isr
           LOCAL                   ADDRESS         
           =====                   =======         
           mcuRecordMaxRssiIsr::?relay
<<<<<<< HEAD
                                   00002183 
=======
                                   00001FCC 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_mem.r51
  PROGRAM MODULE, NAME : mac_mem

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   macMemReadRxFifo
                                                   macMemWriteTxFifo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     000000D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B0EE - 0003B119 (0x2c bytes), align: 0
  Segment part 9.             Intra module refs:   macMemWriteRam::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteRam          0003B0EE 
=======
  Relative segment, address: CODE 00038821 - 0003884C (0x2c bytes), align: 0
  Segment part 9.             Intra module refs:   macMemWriteRam::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteRam          00038821 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B11A - 0003B146 (0x2d bytes), align: 0
  Segment part 13.            Intra module refs:   macMemWriteTxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteTxFifo       0003B11A 
=======
  Relative segment, address: CODE 0003884D - 00038879 (0x2d bytes), align: 0
  Segment part 13.            Intra module refs:   macMemWriteTxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteTxFifo       0003884D 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B147 - 0003B173 (0x2d bytes), align: 0
  Segment part 15.            Intra module refs:   macMemReadRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemReadRxFifo        0003B147 
=======
  Relative segment, address: CODE 0003887A - 000388A6 (0x2d bytes), align: 0
  Segment part 15.            Intra module refs:   macMemReadRxFifo::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemReadRxFifo        0003887A 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002189 - 0000218E (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001FD2 - 00001FD7 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteRam::?relay
<<<<<<< HEAD
                                   00002189        macRadioSetIEEEAddr (mac_radio)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000218F - 00002194 (0x6 bytes), align: 0
=======
                                   00001FD2        macRadioSetIEEEAddr (mac_radio)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FD8 - 00001FDD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemWriteTxFifo::?relay
<<<<<<< HEAD
                                   0000218F        macTxFrame (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002195 - 0000219A (0x6 bytes), align: 0
=======
                                   00001FD8        macTxFrame (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FDE - 00001FE3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macMemReadRxFifo::?relay
<<<<<<< HEAD
                                   00002195        rxAddrIsr (mac_rx)
=======
                                   00001FDE        rxAddrIsr (mac_rx)
>>>>>>> develop
                                                   rxDiscardIsr (mac_rx)
                                                   rxFcsIsr (mac_rx)
                                                   rxPayloadIsr (mac_rx)
                                                   rxStartIsr (mac_rx)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_radio.r51
  PROGRAM MODULE, NAME : mac_radio

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ED16 - 0000ED16 (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000ECB1 - 0000ECB1 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 7.             Intra module refs:   macRadioInit
                                                   macRadioUpdateTxPower
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macPhyTxPower           0000ED16 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED17 - 0000ED17 (0x1 bytes), align: 0
=======
           macPhyTxPower           0000ECB1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECB2 - 0000ECB2 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 8.             Intra module refs:   macRadioInit
                                                   macRadioUpdateChannel
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macPhyChannel           0000ED17 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED18 - 0000ED18 (0x1 bytes), align: 0
=======
           macPhyChannel           0000ECB2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECB3 - 0000ECB3 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 9.             Intra module refs:   macRadioInit
                                                   macRadioSetChannel
                                                   macRadioUpdateChannel
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           reqChannel              0000ED18 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED19 - 0000ED19 (0x1 bytes), align: 0
=======
           reqChannel              0000ECB3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECB4 - 0000ECB4 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 10.            Intra module refs:   macRadioInit
                                                   macRadioSetTxPower
                                                   macRadioUpdateTxPower
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           reqTxPower              0000ED19 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039314 - 00039336 (0x23 bytes), align: 0
  Segment part 11.            Intra module refs:   macRadioInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioInit            00039314 
=======
           reqTxPower              0000ECB4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EAB6 - 0002EAD8 (0x23 bytes), align: 0
  Segment part 11.            Intra module refs:   macRadioInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioInit            0002EAB6 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039337 - 00039347 (0x11 bytes), align: 0
  Segment part 13.            Intra module refs:   macRadioReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioReset           00039337 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EAD9 - 0002EAE9 (0x11 bytes), align: 0
  Segment part 13.            Intra module refs:   macRadioReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioReset           0002EAD9 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039348 - 00039355 (0xe bytes), align: 0
  Segment part 15.            Intra module refs:   macRadioRandomByte::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioRandomByte      00039348 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EAEA - 0002EAF7 (0xe bytes), align: 0
  Segment part 15.            Intra module refs:   macRadioRandomByte::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioRandomByte      0002EAEA 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039356 - 00039383 (0x2e bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EAF8 - 0002EB25 (0x2e bytes), align: 0
>>>>>>> develop
  Segment part 17.            Intra module refs:   macRadioSetPanCoordinator::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanCoordinator
<<<<<<< HEAD
                                   00039356 
=======
                                   0002EAF8 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039384 - 0003939A (0x17 bytes), align: 0
  Segment part 19.            Intra module refs:   macRadioSetPanID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanID        00039384 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EB26 - 0002EB3C (0x17 bytes), align: 0
  Segment part 19.            Intra module refs:   macRadioSetPanID::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanID        0002EB26 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003939B - 000393B1 (0x17 bytes), align: 0
  Segment part 21.            Intra module refs:   macRadioSetShortAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetShortAddr    0003939B 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EB3D - 0002EB53 (0x17 bytes), align: 0
  Segment part 21.            Intra module refs:   macRadioSetShortAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetShortAddr    0002EB3D 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000393B2 - 000393CC (0x1b bytes), align: 0
  Segment part 23.            Intra module refs:   macRadioSetIEEEAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetIEEEAddr     000393B2 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EB54 - 0002EB6E (0x1b bytes), align: 0
  Segment part 23.            Intra module refs:   macRadioSetIEEEAddr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetIEEEAddr     0002EB54 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000393CD - 00039407 (0x3b bytes), align: 0
  Segment part 25.            Intra module refs:   macRadioSetTxPower::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetTxPower      000393CD 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EB6F - 0002EBA9 (0x3b bytes), align: 0
  Segment part 25.            Intra module refs:   macRadioSetTxPower::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetTxPower      0002EB6F 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039408 - 00039449 (0x42 bytes), align: 0
  Segment part 27.            Intra module refs:   macRadioUpdateTxPower::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateTxPower   00039408 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EBAA - 0002EBEB (0x42 bytes), align: 0
  Segment part 27.            Intra module refs:   macRadioUpdateTxPower::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateTxPower   0002EBAA 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003944A - 0003947F (0x36 bytes), align: 0
  Segment part 29.            Intra module refs:   macRadioSetChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetChannel      0003944A 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EBEC - 0002EC21 (0x36 bytes), align: 0
  Segment part 29.            Intra module refs:   macRadioSetChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetChannel      0002EBEC 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039480 - 000394CE (0x4f bytes), align: 0
  Segment part 31.            Intra module refs:   macRadioUpdateChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateChannel   00039480 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC22 - 0002EC70 (0x4f bytes), align: 0
  Segment part 31.            Intra module refs:   macRadioUpdateChannel::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateChannel   0002EC22 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000394CF - 00039523 (0x55 bytes), align: 0
  Segment part 33.            Intra module refs:   macRadioStartScan::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStartScan       000394CF 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EC71 - 0002ECC5 (0x55 bytes), align: 0
  Segment part 33.            Intra module refs:   macRadioStartScan::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStartScan       0002EC71 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039524 - 00039547 (0x24 bytes), align: 0
  Segment part 35.            Intra module refs:   macRadioStopScan::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStopScan        00039524 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ECC6 - 0002ECE9 (0x24 bytes), align: 0
  Segment part 35.            Intra module refs:   macRadioStopScan::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStopScan        0002ECC6 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039548 - 00039555 (0xe bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ECEA - 0002ECF7 (0xe bytes), align: 0
>>>>>>> develop
  Segment part 37.            Intra module refs:   macRadioEnergyDetectStart::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioEnergyDetectStart
<<<<<<< HEAD
                                   00039548 
=======
                                   0002ECEA 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00039556 - 0003956B (0x16 bytes), align: 0
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ECF8 - 0002ED0D (0x16 bytes), align: 0
>>>>>>> develop
  Segment part 39.            Intra module refs:   macRadioEnergyDetectStop::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioEnergyDetectStop
<<<<<<< HEAD
                                   00039556 
=======
                                   0002ECF8 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003956C - 000395B8 (0x4d bytes), align: 0
  Segment part 41.            Intra module refs:   radioComputeED::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           radioComputeED          0003956C 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED0E - 0002ED5A (0x4d bytes), align: 0
  Segment part 41.            Intra module refs:   radioComputeED::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           radioComputeED          0002ED0E 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000000 )
    -------------------------------------------------------------------------
<<<<<<< HEAD
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000395B9 - 000395C7 (0xf bytes), align: 0
  Segment part 43.            Intra module refs:   macRadioComputeLQI::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioComputeLQI      000395B9 
=======
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002ED5B - 0002ED69 (0xf bytes), align: 0
  Segment part 43.            Intra module refs:   macRadioComputeLQI::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioComputeLQI      0002ED5B 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000219B - 000021A0 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioInit::?relay    0000219B        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021A1 - 000021A6 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioReset::?relay   000021A1        macLowLevelReset (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021A7 - 000021AC (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00001FE4 - 00001FE9 (0x6 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioInit::?relay    00001FE4        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FEA - 00001FEF (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioReset::?relay   00001FEA        macLowLevelReset (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FF0 - 00001FF5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioRandomByte::?relay
<<<<<<< HEAD
                                   000021A7        macPibReset (mac_pib)
                                                   txCsmaPrep (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021AD - 000021B2 (0x6 bytes), align: 0
=======
                                   00001FF0        macPibReset (mac_pib)
                                                   txCsmaPrep (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FF6 - 00001FFB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanCoordinator::?relay
<<<<<<< HEAD
                                   000021AD        MAC_MlmeResetReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021B3 - 000021B8 (0x6 bytes), align: 0
=======
                                   00001FF6        MAC_MlmeResetReq (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00001FFC - 00002001 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetPanID::?relay
<<<<<<< HEAD
                                   000021B3        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021B9 - 000021BE (0x6 bytes), align: 0
=======
                                   00001FFC        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002002 - 00002007 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetShortAddr::?relay
<<<<<<< HEAD
                                   000021B9        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021BF - 000021C4 (0x6 bytes), align: 0
=======
                                   00002002        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002008 - 0000200D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetIEEEAddr::?relay
<<<<<<< HEAD
                                   000021BF        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021C5 - 000021CA (0x6 bytes), align: 0
=======
                                   00002008        MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000200E - 00002013 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetTxPower::?relay
<<<<<<< HEAD
                                   000021C5        MAC_MlmeResetReq (mac_mgmt)
=======
                                   0000200E        MAC_MlmeResetReq (mac_mgmt)
>>>>>>> develop
                                                   MAC_MlmeSetReq (mac_pib)
                                                   macDataTxSend (mac_data)
                                                   macTxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000021CB - 000021D0 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00002014 - 00002019 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.            Intra module refs:   macRadioSetTxPower
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateTxPower::?relay
<<<<<<< HEAD
                                   000021CB        rxPostRxUpdates (mac_rx)
                                                   txComplete (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021D1 - 000021D6 (0x6 bytes), align: 0
=======
                                   00002014        rxPostRxUpdates (mac_rx)
                                                   txComplete (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000201A - 0000201F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioSetChannel::?relay
<<<<<<< HEAD
                                   000021D1        MAC_MlmeResetReq (mac_mgmt)
=======
                                   0000201A        MAC_MlmeResetReq (mac_mgmt)
>>>>>>> develop
                                                   MAC_MlmeSetReq (mac_pib)
                                                   macDataTxSend (mac_data)
                                                   macTxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000021D7 - 000021DC (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00002020 - 00002025 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 32.            Intra module refs:   macRadioSetChannel
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioUpdateChannel::?relay
<<<<<<< HEAD
                                   000021D7        txComplete (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021DD - 000021E2 (0x6 bytes), align: 0
=======
                                   00002020        txComplete (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002026 - 0000202B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStartScan::?relay
<<<<<<< HEAD
                                   000021DD        macApiScanReq (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021E3 - 000021E8 (0x6 bytes), align: 0
=======
                                   00002026        macApiScanReq (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000202C - 00002031 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.            Intra module refs:   macRadioReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioStopScan::?relay
<<<<<<< HEAD
                                   000021E3        macScanComplete (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021E9 - 000021EE (0x6 bytes), align: 0
=======
                                   0000202C        macScanComplete (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002032 - 00002037 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioEnergyDetectStart::?relay
<<<<<<< HEAD
                                   000021E9        macScanStartTimer (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021EF - 000021F4 (0x6 bytes), align: 0
=======
                                   00002032        macScanStartTimer (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002038 - 0000203D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 40.            Intra module refs:   macRadioReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioEnergyDetectStop::?relay
<<<<<<< HEAD
                                   000021EF        macScanNextChan (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021F5 - 000021FA (0x6 bytes), align: 0
=======
                                   00002038        macScanNextChan (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000203E - 00002043 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 42.            Intra module refs:   macRadioComputeLQI
                                                   macRadioEnergyDetectStop
           LOCAL                   ADDRESS         
           =====                   =======         
           radioComputeED::?relay
<<<<<<< HEAD
                                   000021F5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000021FB - 00002200 (0x6 bytes), align: 0
=======
                                   0000203E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002044 - 00002049 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioComputeLQI::?relay
<<<<<<< HEAD
                                   000021FB        rxFcsIsr (mac_rx)
=======
                                   00002044        rxFcsIsr (mac_rx)
>>>>>>> develop
                                                   rxStartIsr (mac_rx)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_radio_defs.r51
  PROGRAM MODULE, NAME : mac_radio_defs

  SEGMENTS IN THE MODULE
  ======================
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002A6B - 00002A84 (0x1a bytes), align: 0
=======
  Relative segment, address: CODE 00002588 - 000025A1 (0x1a bytes), align: 0
>>>>>>> develop
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRadioDefsTxPowerTable
<<<<<<< HEAD
                                   00002A6B        macRadioSetTxPower (mac_radio)
=======
                                   00002588        macRadioSetTxPower (mac_radio)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_random.r51
    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_rx.r51
  PROGRAM MODULE, NAME : mac_rx

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ED1A - 0000ED1A (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000ECB5 - 0000ECB5 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   macRxAckTxDoneCallback
                                                   macRxInit
                                                   rxDone
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macRxActive             0000ED1A        halAssertHazardLights (hal_assert)
=======
           macRxActive             0000ECB5        halAssertHazardLights (hal_assert)
>>>>>>> develop
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ED1B - 0000ED1B (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000ECB6 - 0000ECB6 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 12.            Intra module refs:   macRxInit
                                                   macRxTxReset
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macRxFilter             0000ED1B        macRadioStartScan (mac_radio)
                                                   macRadioStopScan (mac_radio)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED1C - 0000ED1C (0x1 bytes), align: 0
=======
           macRxFilter             0000ECB6        macRadioStartScan (mac_radio)
                                                   macRadioStopScan (mac_radio)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECB7 - 0000ECB7 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 13.            Intra module refs:   macRxAckTxDoneCallback
                                                   macRxInit
                                                   rxDone
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macRxOutgoingAckFlag    0000ED1C        macRadioUpdateTxPower (mac_radio)
=======
           macRxOutgoingAckFlag    0000ECB7        macRadioUpdateTxPower (mac_radio)
>>>>>>> develop
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   txGo (mac_tx)
    -------------------------------------------------------------------------
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002A85 - 00002A88 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           macRxAddrLen            00002A85 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED1D - 0000ED1E (0x2 bytes), align: 0
=======
  Relative segment, address: CODE 000025A2 - 000025A5 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           macRxAddrLen            000025A2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECB8 - 0000ECB9 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 15.            Intra module refs:   macRxInit
                                                   macRxThresholdIsr
                                                   rxAddrIsr
                                                   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           pFuncRxState            0000ED1D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED1F - 0000ED20 (0x2 bytes), align: 0
=======
           pFuncRxState            0000ECB8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECBA - 0000ECBB (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 16.            Intra module refs:   macRxInit
                                                   rxAddrIsr
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
                                                   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           pRxBuf                  0000ED1F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED21 - 0000ED24 (0x4 bytes), align: 0
=======
           pRxBuf                  0000ECBA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECBC - 0000ECBF (0x4 bytes), align: 0
>>>>>>> develop
  Segment part 17.            Intra module refs:   rxAddrIsr
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxBuf                   0000ED21 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED25 - 0000ED25 (0x1 bytes), align: 0
=======
           rxBuf                   0000ECBC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECC0 - 0000ECC0 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 18.            Intra module refs:   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxUnreadLen             0000ED25 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED26 - 0000ED26 (0x1 bytes), align: 0
=======
           rxUnreadLen             0000ECC0 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECC1 - 0000ECC1 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 19.            Intra module refs:   rxAddrIsr
                                                   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxPayloadIsr
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxNextLen               0000ED26 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED27 - 0000ED27 (0x1 bytes), align: 0
=======
           rxNextLen               0000ECC1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECC2 - 0000ECC2 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 20.            Intra module refs:   rxPayloadIsr
                                                   rxPrepPayload
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxPayloadLen            0000ED27 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED28 - 0000ED28 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFilter                0000ED28 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED29 - 0000ED29 (0x1 bytes), align: 0
=======
           rxPayloadLen            0000ECC2 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECC3 - 0000ECC3 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFilter                0000ECC3 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECC4 - 0000ECC4 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 22.            Intra module refs:   macRxInit
                                                   macRxPromiscuousMode
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxPromiscuousMode       0000ED29 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED2A - 0000ED2A (0x1 bytes), align: 0
=======
           rxPromiscuousMode       0000ECC4 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECC5 - 0000ECC5 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 23.            Intra module refs:   macRxHaltCleanup
                                                   macRxInit
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxIsrActiveFlag         0000ED2A 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED2B - 0000ED2B (0x1 bytes), align: 0
=======
           rxIsrActiveFlag         0000ECC5 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECC6 - 0000ECC6 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 24.            Intra module refs:   macRxHaltCleanup
                                                   macRxInit
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxResetFlag             0000ED2B 
=======
           rxResetFlag             0000ECC6 
>>>>>>> develop
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028000 - 00028042 (0x43 bytes), align: 0
  Segment part 25.            Intra module refs:   macRxInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxInit               00028000 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028043 - 00028059 (0x17 bytes), align: 0
  Segment part 27.            Intra module refs:   macRxRadioPowerUpInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxRadioPowerUpInit   00028043 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002805A - 00028072 (0x19 bytes), align: 0
  Segment part 29.            Intra module refs:   macRxTxReset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxTxReset            0002805A 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028073 - 00028092 (0x20 bytes), align: 0
  Segment part 31.            Intra module refs:   macRxHaltCleanup::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHaltCleanup        00028073 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028093 - 000280F7 (0x65 bytes), align: 0
  Segment part 33.            Intra module refs:   rxHaltCleanupFinalStep::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxHaltCleanupFinalStep
                                   00028093 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000280F8 - 00028131 (0x3a bytes), align: 0
  Segment part 35.            Intra module refs:   macRxThresholdIsr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxThresholdIsr       000280F8 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028132 - 00028527 (0x3f6 bytes), align: 0
  Segment part 37.            Intra module refs:   rxStartIsr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxStartIsr              00028132 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000011 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028528 - 000286C7 (0x1a0 bytes), align: 0
  Segment part 39.            Intra module refs:   rxAddrIsr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxAddrIsr               00028528 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000286C8 - 0002870B (0x44 bytes), align: 0
  Segment part 41.            Intra module refs:   rxPrepPayload::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPrepPayload           000286C8 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000001E ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002870C - 0002876C (0x61 bytes), align: 0
  Segment part 43.            Intra module refs:   rxPayloadIsr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPayloadIsr            0002870C 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002876D - 0002886C (0x100 bytes), align: 0
  Segment part 45.            Intra module refs:   rxFcsIsr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFcsIsr                0002876D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002886D - 0002889C (0x30 bytes), align: 0
  Segment part 47.            Intra module refs:   rxDone::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDone                  0002886D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000011 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002889D - 000288B6 (0x1a bytes), align: 0
  Segment part 49.            Intra module refs:   macRxAckTxDoneCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAckTxDoneCallback
                                   0002889D 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000288B7 - 000288CA (0x14 bytes), align: 0
  Segment part 51.            Intra module refs:   rxPostRxUpdates::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPostRxUpdates         000288B7 
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000011 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 000288CB - 0002891C (0x52 bytes), align: 0
  Segment part 53.            Intra module refs:   rxDiscardFrame::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardFrame          000288CB 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000011 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002891D - 00028985 (0x69 bytes), align: 0
  Segment part 55.            Intra module refs:   rxDiscardIsr::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardIsr            0002891D 
               calls direct, is indirectly called
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 00028986 - 000289B9 (0x34 bytes), align: 0
  Segment part 57.            Intra module refs:   macRxPromiscuousMode::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxPromiscuousMode    00028986 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002201 - 00002206 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxInit::?relay       00002201        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002207 - 0000220C (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000204A - 0000204F (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxInit::?relay       0000204A        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002050 - 00002055 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxRadioPowerUpInit::?relay
<<<<<<< HEAD
                                   00002207        macSleepWakeUp (mac_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000220D - 00002212 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxTxReset::?relay    0000220D        macLowLevelReset (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002213 - 00002218 (0x6 bytes), align: 0
=======
                                   00002050        macSleepWakeUp (mac_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002056 - 0000205B (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxTxReset::?relay    00002056        macLowLevelReset (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000205C - 00002061 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHaltCleanup::?relay
<<<<<<< HEAD
                                   00002213        macRxHardDisable (mac_rx_onoff)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002219 - 0000221E (0x6 bytes), align: 0
=======
                                   0000205C        macRxHardDisable (mac_rx_onoff)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002062 - 00002067 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 34.            Intra module refs:   macRxHaltCleanup
                                                   macRxThresholdIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxHaltCleanupFinalStep::?relay
<<<<<<< HEAD
                                   00002219 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000221F - 00002224 (0x6 bytes), align: 0
=======
                                   00002062 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002068 - 0000206D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxThresholdIsr::?relay
<<<<<<< HEAD
                                   0000221F        macMcuRfIsr (mac_mcu)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002225 - 0000222A (0x6 bytes), align: 0
=======
                                   00002068        macMcuRfIsr (mac_mcu)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000206E - 00002073 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.            Intra module refs:   macRxInit
                                                   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxFcsIsr
                                                   rxHaltCleanupFinalStep
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxStartIsr::?relay      00002225 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000222B - 00002230 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxAddrIsr::?relay       0000222B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002231 - 00002236 (0x6 bytes), align: 0
=======
           rxStartIsr::?relay      0000206E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002074 - 00002079 (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxAddrIsr::?relay       00002074 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000207A - 0000207F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 42.            Intra module refs:   rxAddrIsr
                                                   rxPayloadIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxPrepPayload::?relay   00002231 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002237 - 0000223C (0x6 bytes), align: 0
=======
           rxPrepPayload::?relay   0000207A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002080 - 00002085 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.            Intra module refs:   rxAddrIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxPayloadIsr::?relay    00002237 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000223D - 00002242 (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   rxPrepPayload
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFcsIsr::?relay        0000223D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002243 - 00002248 (0x6 bytes), align: 0
=======
           rxPayloadIsr::?relay    00002080 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002086 - 0000208B (0x6 bytes), align: 0
  Segment part 46.            Intra module refs:   rxPrepPayload
           LOCAL                   ADDRESS         
           =====                   =======         
           rxFcsIsr::?relay        00002086 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000208C - 00002091 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 48.            Intra module refs:   rxDiscardFrame
                                                   rxDiscardIsr
                                                   rxFcsIsr
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           rxDone::?relay          00002243 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002249 - 0000224E (0x6 bytes), align: 0
=======
           rxDone::?relay          0000208C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002092 - 00002097 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxAckTxDoneCallback::?relay
<<<<<<< HEAD
                                   00002249        macMcuRfIsr (mac_mcu)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000224F - 00002254 (0x6 bytes), align: 0
=======
                                   00002092        macMcuRfIsr (mac_mcu)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002098 - 0000209D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 52.            Intra module refs:   macRxAckTxDoneCallback
                                                   rxDone
                                                   rxHaltCleanupFinalStep
                                                   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxPostRxUpdates::?relay
<<<<<<< HEAD
                                   0000224F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002255 - 0000225A (0x6 bytes), align: 0
=======
                                   00002098 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000209E - 000020A3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 54.            Intra module refs:   rxStartIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardFrame::?relay
<<<<<<< HEAD
                                   00002255 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000225B - 00002260 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   rxDiscardFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardIsr::?relay    0000225B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002261 - 00002266 (0x6 bytes), align: 0
=======
                                   0000209E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020A4 - 000020A9 (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   rxDiscardFrame
           LOCAL                   ADDRESS         
           =====                   =======         
           rxDiscardIsr::?relay    000020A4 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020AA - 000020AF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 58.            Intra module refs:   macRxTxReset
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxPromiscuousMode::?relay
<<<<<<< HEAD
                                   00002261 
=======
                                   000020AA 
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_rx_onoff.r51
  PROGRAM MODULE, NAME : mac_rx_onoff

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ED2C - 0000ED2C (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000ECC7 - 0000ECC7 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 9.             Intra module refs:   macRxHardDisable
                                                   macRxOff
                                                   macRxOn
                                                   macRxOnOffInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macRxOnFlag             0000ED2C        macCspTxGoSlotted (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED2D - 0000ED2D (0x1 bytes), align: 0
=======
           macRxOnFlag             0000ECC7        macCspTxGoSlotted (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECC8 - 0000ECC8 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 10.            Intra module refs:   macRxDisable
                                                   macRxEnable
                                                   macRxHardDisable
                                                   macRxOffRequest
                                                   macRxOnOffInit
                                                   macRxOnRequest
                                                   macRxSoftEnable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macRxEnableFlags        0000ED2D 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AE08 - 0003AE1E (0x17 bytes), align: 0
  Segment part 11.            Intra module refs:   macRxOnOffInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnOffInit          0003AE08 
=======
           macRxEnableFlags        0000ECC8 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 000384FB - 00038511 (0x17 bytes), align: 0
  Segment part 11.            Intra module refs:   macRxOnOffInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnOffInit          000384FB 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AE1F - 0003AE46 (0x28 bytes), align: 0
  Segment part 13.            Intra module refs:   macRxEnable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxEnable             0003AE1F 
=======
  Relative segment, address: CODE 00038512 - 00038539 (0x28 bytes), align: 0
  Segment part 13.            Intra module refs:   macRxEnable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxEnable             00038512 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AE47 - 0003AE6B (0x25 bytes), align: 0
  Segment part 15.            Intra module refs:   macRxSoftEnable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxSoftEnable         0003AE47 
=======
  Relative segment, address: CODE 0003853A - 0003855E (0x25 bytes), align: 0
  Segment part 15.            Intra module refs:   macRxSoftEnable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxSoftEnable         0003853A 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AE6C - 0003AE97 (0x2c bytes), align: 0
  Segment part 17.            Intra module refs:   macRxDisable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisable            0003AE6C 
=======
  Relative segment, address: CODE 0003855F - 0003858A (0x2c bytes), align: 0
  Segment part 17.            Intra module refs:   macRxDisable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisable            0003855F 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AE98 - 0003AEC6 (0x2f bytes), align: 0
  Segment part 19.            Intra module refs:   macRxHardDisable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHardDisable        0003AE98 
=======
  Relative segment, address: CODE 0003858B - 000385B9 (0x2f bytes), align: 0
  Segment part 19.            Intra module refs:   macRxHardDisable::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHardDisable        0003858B 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AEC7 - 0003AEE6 (0x20 bytes), align: 0
  Segment part 21.            Intra module refs:   macRxOnRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnRequest          0003AEC7 
=======
  Relative segment, address: CODE 000385BA - 000385D9 (0x20 bytes), align: 0
  Segment part 21.            Intra module refs:   macRxOnRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnRequest          000385BA 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AEE7 - 0003AF1C (0x36 bytes), align: 0
  Segment part 23.            Intra module refs:   macRxOffRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOffRequest         0003AEE7 
=======
  Relative segment, address: CODE 000385DA - 0003860F (0x36 bytes), align: 0
  Segment part 23.            Intra module refs:   macRxOffRequest::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOffRequest         000385DA 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AF1D - 0003AF43 (0x27 bytes), align: 0
  Segment part 25.            Intra module refs:   macRxOn::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOn                 0003AF1D 
=======
  Relative segment, address: CODE 00038610 - 00038636 (0x27 bytes), align: 0
  Segment part 25.            Intra module refs:   macRxOn::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOn                 00038610 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AF44 - 0003AF73 (0x30 bytes), align: 0
  Segment part 27.            Intra module refs:   macRxOff::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOff                0003AF44 
=======
  Relative segment, address: CODE 00038637 - 00038666 (0x30 bytes), align: 0
  Segment part 27.            Intra module refs:   macRxOff::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOff                00038637 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000009 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002267 - 0000226C (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000020B0 - 000020B5 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnOffInit::?relay
<<<<<<< HEAD
                                   00002267        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000226D - 00002272 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxEnable::?relay     0000226D        MAC_MlmeSetReq (mac_pib)
                                                   macApiScanReq (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002273 - 00002278 (0x6 bytes), align: 0
=======
                                   000020B0        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020B6 - 000020BB (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxEnable::?relay     000020B6        MAC_MlmeSetReq (mac_pib)
                                                   macApiScanReq (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020BC - 000020C1 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxSoftEnable::?relay
<<<<<<< HEAD
                                   00002273        macApiPollReq (mac_device)
                                                   macAssocDataReq (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002279 - 0000227E (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisable::?relay    00002279        MAC_MlmeSetReq (mac_pib)
=======
                                   000020BC        macApiPollReq (mac_device)
                                                   macAssocDataReq (mac_device)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020C2 - 000020C7 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxDisable::?relay    000020C2        MAC_MlmeSetReq (mac_pib)
>>>>>>> develop
                                                   Segment part 51 (mac_device)
                                                   Segment part 55 (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macScanComplete (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000227F - 00002284 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000020C8 - 000020CD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxHardDisable::?relay
<<<<<<< HEAD
                                   0000227F        macCspTxGoSlotted (mac_csp_tx)
                                                   macRxTxReset (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002285 - 0000228A (0x6 bytes), align: 0
=======
                                   000020C8        macCspTxGoSlotted (mac_csp_tx)
                                                   macRxTxReset (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020CE - 000020D3 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOnRequest::?relay
<<<<<<< HEAD
                                   00002285        macRadioUpdateChannel (mac_radio)
                                                   macSleepWakeUp (mac_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000228B - 00002290 (0x6 bytes), align: 0
=======
                                   000020CE        macRadioUpdateChannel (mac_radio)
                                                   macSleepWakeUp (mac_sleep)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020D4 - 000020D9 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 24.            Intra module refs:   macRxDisable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOffRequest::?relay
<<<<<<< HEAD
                                   0000228B        macTxChannelBusyCallback (mac_tx)
=======
                                   000020D4        macTxChannelBusyCallback (mac_tx)
>>>>>>> develop
                                                   rxFcsIsr (mac_rx)
                                                   rxPostRxUpdates (mac_rx)
                                                   txComplete (mac_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002291 - 00002296 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000020DA - 000020DF (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.            Intra module refs:   macRxEnable
                                                   macRxOnRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macRxOn::?relay         00002291        macCspTxGoCsma (mac_csp_tx)
                                                   macMcuInit (mac_mcu)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002297 - 0000229C (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   macRxOffRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOff::?relay        00002297        macMcuInit (mac_mcu)
=======
           macRxOn::?relay         000020DA        macCspTxGoCsma (mac_csp_tx)
                                                   macMcuInit (mac_mcu)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020E0 - 000020E5 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   macRxOffRequest
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macRxOff::?relay        000020E0        macMcuInit (mac_mcu)
>>>>>>> develop
                                                   macRadioUpdateChannel (mac_radio)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_sleep.r51
  PROGRAM MODULE, NAME : mac_sleep

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EF87 - 0000EF87 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macSleepWakeUp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepState           0000EF87        macLowLevelReset (mac_low_level)
=======
  Relative segment, address: XDATA 0000EE83 - 0000EE83 (0x1 bytes), align: 0
  Segment part 9.             Intra module refs:   macSleepWakeUp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepState           0000EE83        macLowLevelReset (mac_low_level)
>>>>>>> develop
                                                   macRadioStartScan (mac_radio)
                                                   macTxFrame (mac_tx)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B298 - 0003B2DD (0x46 bytes), align: 0
  Segment part 11.            Intra module refs:   macSleepWakeUp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepWakeUp          0003B298 
=======
  Relative segment, address: CODE 000389BC - 00038A01 (0x46 bytes), align: 0
  Segment part 11.            Intra module refs:   macSleepWakeUp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepWakeUp          000389BC 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
<<<<<<< HEAD
  Relative segment, address: CODE 000024C4 - 000024C4 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macSleepState
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000229D - 000022A2 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0000226E - 0000226E (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   macSleepState
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020E6 - 000020EB (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macSleepWakeUp::?relay
<<<<<<< HEAD
                                   0000229D        macLowLevelReset (mac_low_level)
=======
                                   000020E6        macLowLevelReset (mac_low_level)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\mac_tx.r51
  PROGRAM MODULE, NAME : mac_tx

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ED2E - 0000ED2E (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000ECC9 - 0000ECC9 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 11.            Intra module refs:   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxChannelBusyCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   macTxInit
                                                   macTxStartQueuedFrame
                                                   txComplete
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macTxActive             0000ED2E        halAssertHazardLights (hal_assert)
=======
           macTxActive             0000ECC9        halAssertHazardLights (hal_assert)
>>>>>>> develop
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRadioUpdateTxPower (mac_radio)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ED2F - 0000ED2F (0x1 bytes), align: 0
=======
  Relative segment, address: XDATA 0000ECCA - 0000ECCA (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 12.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
                                                   macTxFrameRetransmit
                                                   txCsmaGo
                                                   txCsmaPrep
                                                   txGo
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macTxType               0000ED2F 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED30 - 0000ED30 (0x1 bytes), align: 0
=======
           macTxType               0000ECCA 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECCB - 0000ECCB (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 13.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
                                                   txCsmaPrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macTxBe                 0000ED30 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED31 - 0000ED31 (0x1 bytes), align: 0
=======
           macTxBe                 0000ECCB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECCC - 0000ECCC (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 14.            Intra module refs:   txCsmaGo
                                                   txCsmaPrep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           macTxCsmaBackoffDelay   0000ED31        macCspTxGoCsma (mac_csp_tx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED32 - 0000ED32 (0x1 bytes), align: 0
=======
           macTxCsmaBackoffDelay   0000ECCC        macCspTxGoCsma (mac_csp_tx)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECCD - 0000ECCD (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 15.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           nb                      0000ED32 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED33 - 0000ED33 (0x1 bytes), align: 0
=======
           nb                      0000ECCD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECCE - 0000ECCE (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 16.            Intra module refs:   macTxAckReceivedCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           txSeqn                  0000ED33 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED34 - 0000ED34 (0x1 bytes), align: 0
=======
           txSeqn                  0000ECCE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECCF - 0000ECCF (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 17.            Intra module refs:   macTxDoneCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           txAckReq                0000ED34 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ED35 - 0000ED35 (0x1 bytes), align: 0
=======
           txAckReq                0000ECCF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000ECD0 - 0000ECD0 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 18.            Intra module refs:   macTxFrame
                                                   macTxFrameRetransmit
                                                   macTxInit
                                                   txComplete
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           txRetransmitFlag        0000ED35 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002F98C - 0002F9A2 (0x17 bytes), align: 0
  Segment part 19.            Intra module refs:   macTxInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxInit               0002F98C 
=======
           txRetransmitFlag        0000ECD0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002D317 - 0002D32D (0x17 bytes), align: 0
  Segment part 19.            Intra module refs:   macTxInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxInit               0002D317 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F9A3 - 0002FB06 (0x164 bytes), align: 0
  Segment part 23.            Intra module refs:   macTxFrame::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrame              0002F9A3 
=======
  Relative segment, address: CODE 0002D32E - 0002D491 (0x164 bytes), align: 0
  Segment part 23.            Intra module refs:   macTxFrame::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrame              0002D32E 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FB07 - 0002FB3B (0x35 bytes), align: 0
  Segment part 25.            Intra module refs:   txCsmaPrep::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           txCsmaPrep              0002FB07 
=======
  Relative segment, address: CODE 0002D492 - 0002D4C6 (0x35 bytes), align: 0
  Segment part 25.            Intra module refs:   txCsmaPrep::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           txCsmaPrep              0002D492 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FB3C - 0002FB5F (0x24 bytes), align: 0
  Segment part 27.            Intra module refs:   txGo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           txGo                    0002FB3C 
=======
  Relative segment, address: CODE 0002D4C7 - 0002D4EA (0x24 bytes), align: 0
  Segment part 27.            Intra module refs:   txGo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           txGo                    0002D4C7 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FB60 - 0002FB87 (0x28 bytes), align: 0
  Segment part 29.            Intra module refs:   txCsmaGo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           txCsmaGo                0002FB60 
=======
  Relative segment, address: CODE 0002D4EB - 0002D512 (0x28 bytes), align: 0
  Segment part 29.            Intra module refs:   txCsmaGo::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           txCsmaGo                0002D4EB 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FB88 - 0002FBA0 (0x19 bytes), align: 0
  Segment part 31.            Intra module refs:   macTxFrameRetransmit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameRetransmit    0002FB88 
=======
  Relative segment, address: CODE 0002D513 - 0002D52B (0x19 bytes), align: 0
  Segment part 31.            Intra module refs:   macTxFrameRetransmit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameRetransmit    0002D513 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FBA1 - 0002FBDE (0x3e bytes), align: 0
  Segment part 33.            Intra module refs:   macTxStartQueuedFrame::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxStartQueuedFrame   0002FBA1 
=======
  Relative segment, address: CODE 0002D52C - 0002D569 (0x3e bytes), align: 0
  Segment part 33.            Intra module refs:   macTxStartQueuedFrame::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxStartQueuedFrame   0002D52C 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FBDF - 0002FC63 (0x85 bytes), align: 0
=======
  Relative segment, address: CODE 0002D56A - 0002D5EE (0x85 bytes), align: 0
>>>>>>> develop
  Segment part 35.            Intra module refs:   macTxChannelBusyCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxChannelBusyCallback
<<<<<<< HEAD
                                   0002FBDF 
=======
                                   0002D56A 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FC64 - 0002FCAA (0x47 bytes), align: 0
  Segment part 37.            Intra module refs:   macTxDoneCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxDoneCallback       0002FC64 
=======
  Relative segment, address: CODE 0002D5EF - 0002D635 (0x47 bytes), align: 0
  Segment part 37.            Intra module refs:   macTxDoneCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxDoneCallback       0002D5EF 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FCAB - 0002FCFD (0x53 bytes), align: 0
=======
  Relative segment, address: CODE 0002D636 - 0002D688 (0x53 bytes), align: 0
>>>>>>> develop
  Segment part 39.            Intra module refs:   macTxAckReceivedCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxAckReceivedCallback
<<<<<<< HEAD
                                   0002FCAB 
=======
                                   0002D636 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FCFE - 0002FD31 (0x34 bytes), align: 0
=======
  Relative segment, address: CODE 0002D689 - 0002D6BC (0x34 bytes), align: 0
>>>>>>> develop
  Segment part 41.            Intra module refs:   macTxAckNotReceivedCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxAckNotReceivedCallback
<<<<<<< HEAD
                                   0002FCFE 
=======
                                   0002D689 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FD32 - 0002FD57 (0x26 bytes), align: 0
  Segment part 43.            Intra module refs:   txComplete::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           txComplete              0002FD32 
=======
  Relative segment, address: CODE 0002D6BD - 0002D6E2 (0x26 bytes), align: 0
  Segment part 43.            Intra module refs:   txComplete::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           txComplete              0002D6BD 
>>>>>>> develop
               calls direct, is recursive
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002FD58 - 0002FDB4 (0x5d bytes), align: 0
=======
  Relative segment, address: CODE 0002D6E3 - 0002D73F (0x5d bytes), align: 0
>>>>>>> develop
  Segment part 45.            Intra module refs:   macTxTimestampCallback::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxTimestampCallback
<<<<<<< HEAD
                                   0002FD58 
=======
                                   0002D6E3 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 000022A3 - 000022A8 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxInit::?relay       000022A3        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022A9 - 000022AE (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   macTxFrameRetransmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrame::?relay      000022A9        macDataTxSend (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022AF - 000022B4 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 000020EC - 000020F1 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxInit::?relay       000020EC        macLowLevelInit (mac_low_level)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020F2 - 000020F7 (0x6 bytes), align: 0
  Segment part 24.            Intra module refs:   macTxFrameRetransmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrame::?relay      000020F2        macDataTxSend (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020F8 - 000020FD (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 26.            Intra module refs:   macTxChannelBusyCallback
                                                   macTxFrame
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           txCsmaPrep::?relay      000022AF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022B5 - 000022BA (0x6 bytes), align: 0
=======
           txCsmaPrep::?relay      000020F8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000020FE - 00002103 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 28.            Intra module refs:   macTxFrame
                                                   macTxStartQueuedFrame
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           txGo::?relay            000022B5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022BB - 000022C0 (0x6 bytes), align: 0
=======
           txGo::?relay            000020FE 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002104 - 00002109 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 30.            Intra module refs:   macTxChannelBusyCallback
                                                   txGo
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           txCsmaGo::?relay        000022BB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022C1 - 000022C6 (0x6 bytes), align: 0
=======
           txCsmaGo::?relay        00002104 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000210A - 0000210F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxFrameRetransmit::?relay
<<<<<<< HEAD
                                   000022C1        macTxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022C7 - 000022CC (0x6 bytes), align: 0
=======
                                   0000210A        macTxCompleteCallback (mac_data)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002110 - 00002115 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxStartQueuedFrame::?relay
<<<<<<< HEAD
                                   000022C7        rxPostRxUpdates (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022CD - 000022D2 (0x6 bytes), align: 0
=======
                                   00002110        rxPostRxUpdates (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002116 - 0000211B (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxChannelBusyCallback::?relay
<<<<<<< HEAD
                                   000022CD        macCspTxStopIsr (mac_csp_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022D3 - 000022D8 (0x6 bytes), align: 0
=======
                                   00002116        macCspTxStopIsr (mac_csp_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000211C - 00002121 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxDoneCallback::?relay
<<<<<<< HEAD
                                   000022D3        macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022D9 - 000022DE (0x6 bytes), align: 0
=======
                                   0000211C        macCspForceTxDoneIfPending (mac_csp_tx)
                                                   macCspTxStopIsr (mac_csp_tx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002122 - 00002127 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxAckReceivedCallback::?relay
<<<<<<< HEAD
                                   000022D9        rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022DF - 000022E4 (0x6 bytes), align: 0
=======
                                   00002122        rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002128 - 0000212D (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxAckNotReceivedCallback::?relay
<<<<<<< HEAD
                                   000022DF        macCspTxStopIsr (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022E5 - 000022EA (0x6 bytes), align: 0
=======
                                   00002128        macCspTxStopIsr (mac_csp_tx)
                                                   rxStartIsr (mac_rx)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000212E - 00002133 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 44.            Intra module refs:   macTxAckNotReceivedCallback
                                                   macTxAckReceivedCallback
                                                   macTxChannelBusyCallback
                                                   macTxDoneCallback
                                                   macTxFrame
                                                   txCsmaGo
           LOCAL                   ADDRESS         
           =====                   =======         
<<<<<<< HEAD
           txComplete::?relay      000022E5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022EB - 000022F0 (0x6 bytes), align: 0
=======
           txComplete::?relay      0000212E 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002134 - 00002139 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           macTxTimestampCallback::?relay
<<<<<<< HEAD
                                   000022EB        macCspTxIntIsr (mac_csp_tx)
=======
                                   00002134        macCspTxIntIsr (mac_csp_tx)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\nwk_globals.r51
  PROGRAM MODULE, NAME : nwk_globals

  SEGMENTS IN THE MODULE
  ======================
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002A89 - 00002A89 (0x1 bytes), align: 0
=======
  Relative segment, address: CODE 000025A6 - 000025A6 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_WAITING
<<<<<<< HEAD
                                   00002A89        nwkDB_Add (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002A8A - 00002A8A (0x1 bytes), align: 0
=======
                                   000025A6        nwkDB_Add (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000025A7 - 000025A7 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_SCHEDULED
<<<<<<< HEAD
                                   00002A8A        Segment part 28 (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002A8B - 00002A8B (0x1 bytes), align: 0
=======
                                   000025A7        Segment part 28 (nwk_bufs)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000025A8 - 000025A8 (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_DATABUFS_TOTAL
<<<<<<< HEAD
                                   00002A8B        nwk_MacDataBuffersFull (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF88 - 0000EF88 (0x1 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMIN_TREE_LINK_COST     0000EF88        nwk_ScanJoiningOrphan (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002A8C - 00002A8C (0x1 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_NEIGHBOR_ENTRIES   00002A8C        NLME_GetNeighborIndex (nwk_util)
=======
                                   000025A8        nwk_MacDataBuffersFull (nwk_bufs)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EE84 - 0000EE84 (0x1 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMIN_TREE_LINK_COST     0000EE84        nwk_ScanJoiningOrphan (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000025A9 - 000025A9 (0x1 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_NEIGHBOR_ENTRIES   000025A9        NLME_GetNeighborIndex (nwk_util)
>>>>>>> develop
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   nwkNeighborInitTable (nwk_util)
                                                   nwk_associate_cnf_processing (nwk)
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ED36 - 0000ED61 (0x2c bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           neighborTable           0000ED36        NLME_GetNeighborIndex (nwk_util)
=======
  Relative segment, address: XDATA 0000ECD1 - 0000ECFC (0x2c bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           neighborTable           0000ECD1        NLME_GetNeighborIndex (nwk_util)
>>>>>>> develop
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   Segment part 90 (nwk_util)
                                                   nwkNeighborInitTable (nwk_util)
                                                   nwk_associate_cnf_processing (nwk)
    -------------------------------------------------------------------------
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002A8D - 00002A8E (0x2 bytes), align: 0
=======
  Relative segment, address: CODE 000025AA - 000025AB (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gNWK_MAX_BINDING_ENTRIES
<<<<<<< HEAD
                                   00002A8D        APS_GetBind (APS)
=======
                                   000025AA        APS_GetBind (APS)
>>>>>>> develop
                                                   Segment part 61 (BindingTable)
                                                   Segment part 72 (BindingTable)
    -------------------------------------------------------------------------
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002A8F - 00002A8F (0x1 bytes), align: 0
=======
  Relative segment, address: CODE 000025AC - 000025AC (0x1 bytes), align: 0
>>>>>>> develop
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gMAX_BINDING_CLUSTER_IDS
<<<<<<< HEAD
                                   00002A8F        bindAddClusterIdToList (BindingTable)
                                                   bindAddEntry (BindingTable)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002A90 - 00002A91 (0x2 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gBIND_REC_SIZE          00002A90        BindInitNV (BindingTable)
=======
                                   000025AC        bindAddClusterIdToList (BindingTable)
                                                   bindAddEntry (BindingTable)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000025AD - 000025AE (0x2 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gBIND_REC_SIZE          000025AD        BindInitNV (BindingTable)
>>>>>>> develop
                                                   BindRestoreFromNV (BindingTable)
                                                   BindWriteNV (BindingTable)
                                                   Segment part 72 (BindingTable)
                                                   Segment part 82 (BindingTable)
                                                   bindRemoveEntry (BindingTable)
    -------------------------------------------------------------------------
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000ED62 - 0000EE01 (0xa0 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindingTable            0000ED62        InitBindingTable (BindingTable)
=======
  Relative segment, address: XDATA 0000ECFD - 0000ED9C (0xa0 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BindingTable            0000ECFD        InitBindingTable (BindingTable)
>>>>>>> develop
                                                   Segment part 111 (BindingTable)
                                                   Segment part 43 (BindingTable)
                                                   Segment part 44 (BindingTable)
                                                   Segment part 45 (BindingTable)
                                                   Segment part 50 (BindingTable)
                                                   Segment part 51 (BindingTable)
                                                   Segment part 56 (BindingTable)
                                                   Segment part 57 (BindingTable)
                                                   Segment part 64 (BindingTable)
                                                   bindAddEntry (BindingTable)
                                                   bindFind (BindingTable)
                                                   bindFindExisting (BindingTable)
                                                   bindNumOfEntries (BindingTable)
                                                   bindRemoveDev (BindingTable)
    -------------------------------------------------------------------------
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002A92 - 00002A92 (0x1 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gAPS_MAX_GROUPS         00002A92        aps_AddGroup (aps_groups)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00002A93 - 00002AA2 (0x10 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           defaultKey              00002A93        zgInit (ZGlobals)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF89 - 0000EF92 (0xa bytes), align: 0
  Segment part 31.            Intra module refs:   nwk_Status
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocCnfStr             0000EF89 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF93 - 0000EF9A (0x8 bytes), align: 0
  Segment part 33.            Intra module refs:   nwk_Status
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SuccessStr              0000EF93 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EF9B - 0000EFA5 (0xb bytes), align: 0
  Segment part 35.            Intra module refs:   nwk_Status
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EndDeviceStr            0000EF9B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EFA6 - 0000EFAD (0x8 bytes), align: 0
  Segment part 37.            Intra module refs:   nwk_Status
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ParentStr               0000EFA6 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EFAE - 0000EFBC (0xf bytes), align: 0
  Segment part 55.            Intra module refs:   nwk_Status
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AssocCnfFailStr         0000EFAE 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EFBD - 0000EFC9 (0xd bytes), align: 0
  Segment part 57.            Intra module refs:   nwk_Status
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EnergyLevelStr          0000EFBD 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000EFCA - 0000EFD5 (0xc bytes), align: 0
  Segment part 59.            Intra module refs:   nwk_Status
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ScanFailedStr           0000EFCA 
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 0003AB0F - 0003AB20 (0x12 bytes), align: 0
  Segment part 61.            Intra module refs:   nwk_globals_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_globals_init        0003AB0F 
=======
  Relative segment, address: CODE 000025AF - 000025AF (0x1 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gAPS_MAX_GROUPS         000025AF        aps_AddGroup (aps_groups)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000025B0 - 000025BF (0x10 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           defaultKey              000025B0        zgInit (ZGlobals)
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038746 - 00038757 (0x12 bytes), align: 0
  Segment part 29.            Intra module refs:   nwk_globals_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_globals_init        00038746 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AB21 - 0003ABE6 (0xc6 bytes), align: 0
  Segment part 63.            Intra module refs:   NIB_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NIB_init                0003AB21 
=======
  Relative segment, address: CODE 00038758 - 0003881D (0xc6 bytes), align: 0
  Segment part 31.            Intra module refs:   NIB_init::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NIB_init                00038758 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003ABE7 - 0003AC8B (0xa5 bytes), align: 0
  Segment part 65.            Intra module refs:   nwk_Status::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_Status              0003ABE7 
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024C5 - 000024C5 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   gMIN_TREE_LINK_COST
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024C6 - 000024CF (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   AssocCnfStr
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024D0 - 000024D7 (0x8 bytes), align: 0
  Segment part 34.            Intra module refs:   SuccessStr
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024D8 - 000024E2 (0xb bytes), align: 0
  Segment part 36.            Intra module refs:   EndDeviceStr
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024E3 - 000024EA (0x8 bytes), align: 0
  Segment part 38.            Intra module refs:   ParentStr
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024EB - 000024F9 (0xf bytes), align: 0
  Segment part 56.            Intra module refs:   AssocCnfFailStr
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000024FA - 00002506 (0xd bytes), align: 0
  Segment part 58.            Intra module refs:   EnergyLevelStr
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00002507 - 00002512 (0xc bytes), align: 0
  Segment part 60.            Intra module refs:   ScanFailedStr
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022F1 - 000022F6 (0x6 bytes), align: 0
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_globals_init::?relay
                                   000022F1        nwk_init (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022F7 - 000022FC (0x6 bytes), align: 0
  Segment part 64.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NIB_init::?relay        000022F7        nwk_init (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000022FD - 00002302 (0x6 bytes), align: 0
  Segment part 66.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_Status::?relay      000022FD        nwk_associate_cnf_processing (nwk)
=======
  Relative segment, address: CODE 0003881E - 00038820 (0x3 bytes), align: 0
  Segment part 33.            Intra module refs:   nwk_Status::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_Status              0003881E 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000226F - 0000226F (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   gMIN_TREE_LINK_COST
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000213A - 0000213F (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_globals_init::?relay
                                   0000213A        nwk_init (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002140 - 00002145 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NIB_init::?relay        00002140        nwk_init (nwk)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002146 - 0000214B (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           nwk_Status::?relay      00002146        nwk_associate_cnf_processing (nwk)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\saddr.r51
  PROGRAM MODULE, NAME : saddr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AC8C - 0003AD25 (0x9a bytes), align: 0
  Segment part 6.             Intra module refs:   sAddrCmp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCmp                0003AC8C 
=======
  Relative segment, address: CODE 0003837F - 00038418 (0x9a bytes), align: 0
  Segment part 6.             Intra module refs:   sAddrCmp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCmp                0003837F 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AD26 - 0003AD96 (0x71 bytes), align: 0
  Segment part 8.             Intra module refs:   sAddrCpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCpy                0003AD26 
=======
  Relative segment, address: CODE 00038419 - 00038489 (0x71 bytes), align: 0
  Segment part 8.             Intra module refs:   sAddrCpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCpy                00038419 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000A )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003AD97 - 0003ADD9 (0x43 bytes), align: 0
  Segment part 10.            Intra module refs:   sAddrExtCmp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCmp             0003AD97 
=======
  Relative segment, address: CODE 0003848A - 000384CC (0x43 bytes), align: 0
  Segment part 10.            Intra module refs:   sAddrExtCmp::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCmp             0003848A 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003ADDA - 0003AE07 (0x2e bytes), align: 0
  Segment part 12.            Intra module refs:   sAddrExtCpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCpy             0003ADDA 
=======
  Relative segment, address: CODE 000384CD - 000384FA (0x2e bytes), align: 0
  Segment part 12.            Intra module refs:   sAddrExtCpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCpy             000384CD 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 0000000A ( 00000011 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002303 - 00002308 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCmp::?relay        00002303        macCoordAddrCmp (mac_mgmt)
=======
  Relative segment, address: CODE 0000214C - 00002151 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCmp::?relay        0000214C        macCoordAddrCmp (mac_mgmt)
>>>>>>> develop
                                                   macRxCoordRealign (mac_device)
                                                   macScanRxBeacon (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002309 - 0000230E (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCpy::?relay        00002309        macBuildBeaconNotifyInd (mac_mgmt)
=======
  Relative segment, address: CODE 00002152 - 00002157 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrCpy::?relay        00002152        macBuildBeaconNotifyInd (mac_mgmt)
>>>>>>> develop
                                                   macDisassocComplete (mac_mgmt)
                                                   macGetCoordAddress (mac_mgmt)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000230F - 00002314 (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   sAddrCmp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCmp::?relay     0000230F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002315 - 0000231A (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   sAddrCpy
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCpy::?relay     00002315        macApiAssociateReq (mac_device)
=======
  Relative segment, address: CODE 00002158 - 0000215D (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   sAddrCmp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCmp::?relay     00002158 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000215E - 00002163 (0x6 bytes), align: 0
  Segment part 13.            Intra module refs:   sAddrCpy
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sAddrExtCpy::?relay     0000215E        macApiAssociateReq (mac_device)
>>>>>>> develop
                                                   macBuildHeader (mac_mgmt)
                                                   macCommStatusInd (mac_mgmt)
                                                   macRxDisassoc (mac_mgmt)
                                                   rxAddrIsr (mac_rx)

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\zmac.r51
  PROGRAM MODULE, NAME : zmac

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
<<<<<<< HEAD
  Relative segment, address: XDATA 0000EE02 - 0000EE05 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   ZMacScanReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ScanChannels           0000EE02 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EE06 - 0000EE07 (0x2 bytes), align: 0
=======
  Relative segment, address: XDATA 0000ED9D - 0000EDA0 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   ZMacScanReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _ScanChannels           0000ED9D 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000EDA1 - 0000EDA2 (0x2 bytes), align: 0
>>>>>>> develop
  Segment part 8.             Intra module refs:   ZMacReset
                                                   ZMacScanReq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           ZMac_ScanBuf            0000EE06        MAC_CbackEvent (zmac_cb)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00001147 - 00001164 (0x1e bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacInit                00001147        main (ZMain)
=======
           ZMac_ScanBuf            0000EDA1        MAC_CbackEvent (zmac_cb)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000108C - 000010A9 (0x1e bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacInit                0000108C        main (ZMain)
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00001165 - 000011C5 (0x61 bytes), align: 0
  Segment part 11.            Intra module refs:   ZMacInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacReset               00001165 
=======
  Relative segment, address: CODE 000010AA - 0000110A (0x61 bytes), align: 0
  Segment part 11.            Intra module refs:   ZMacInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacReset               000010AA 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000008 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 000011C6 - 000011F3 (0x2e bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacGetReq              000011C6        MT_ProcessSerialCommand (MTEL)
                                                   NLME_GetCoordExtAddr (nwk_util)
=======
  Relative segment, address: CODE 0000110B - 00001138 (0x2e bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacGetReq              0000110B        NLME_GetCoordExtAddr (nwk_util)
>>>>>>> develop
                                                   NLME_GetExtAddr (nwk_util)
                                                   NwkPollReq (nwk)
                                                   Segment part 74 (nwk_util)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   zgInit (ZGlobals)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 000011F4 - 0000121D (0x2a bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSetReq              000011F4        MT_ProcessSerialCommand (MTEL)
                                                   NLME_JoinRequest (NLMEDE)
=======
  Relative segment, address: CODE 00001139 - 00001162 (0x2a bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSetReq              00001139        NLME_JoinRequest (NLMEDE)
>>>>>>> develop
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   nwk_associate_cnf_processing (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 0000121E - 00001245 (0x28 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacAssociateReq        0000121E        NLME_JoinRequest (NLMEDE)
=======
  Relative segment, address: CODE 00001163 - 0000118A (0x28 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacAssociateReq        00001163        NLME_JoinRequest (NLMEDE)
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000008 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00001246 - 00001372 (0x12d bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacScanReq             00001246        Segment part 40 (NLMEDE)
=======
  Relative segment, address: CODE 0000118B - 000012B7 (0x12d bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacScanReq             0000118B        Segment part 40 (NLMEDE)
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 00001373 - 00001389 (0x17 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSyncReq             00001373        NLME_JoinRequest (NLMEDE)
=======
  Relative segment, address: CODE 000012B8 - 000012CE (0x17 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacSyncReq             000012B8        NLME_JoinRequest (NLMEDE)
>>>>>>> develop
                                                   nwk_ScanJoiningOrphan (nwk)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 0000138A - 000013B1 (0x28 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacPollReq             0000138A        NwkPollReq (nwk)
=======
  Relative segment, address: CODE 000012CF - 000012F6 (0x28 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacPollReq             000012CF        NwkPollReq (nwk)
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000008 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
<<<<<<< HEAD
  Relative segment, address: CODE 000013B2 - 00001480 (0xcf bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacDataReq             000013B2        nwk_data_req_send (nwk)
=======
  Relative segment, address: CODE 000012F7 - 000013C5 (0xcf bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZMacDataReq             000012F7        nwk_data_req_send (nwk)
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000010 )
               stack 4 = 00000000 ( 00000001 )

    *************************************************************************

  FILE NAME : C:\Texas Instruments\ZStack-1.4.3-1.2.1\Projects\zstack\Samples\cc2430-zstack-adxl345\CC2430DB\EndDeviceEB\Obj\zmac_cb.r51
  PROGRAM MODULE, NAME : zmac_cb

  SEGMENTS IN THE MODULE
  ======================
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002AA3 - 00002AB3 (0x11 bytes), align: 0
  Segment part 6.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zmacCBSizeTable         00002AA3 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EB71 - 0002EBE3 (0x73 bytes), align: 0
  Segment part 8.             Intra module refs:   getZMacDynamicSize::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getZMacDynamicSize      0002EB71 
=======
  Relative segment, address: CODE 000025C0 - 000025D0 (0x11 bytes), align: 0
  Segment part 6.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zmacCBSizeTable         000025C0 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C4FC - 0002C56E (0x73 bytes), align: 0
  Segment part 8.             Intra module refs:   getZMacDynamicSize::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getZMacDynamicSize      0002C4FC 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000019 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE_C
<<<<<<< HEAD
  Relative segment, address: CODE 00002AB4 - 00002AC4 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zmacCBEventTable        00002AB4 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002EBE4 - 0002F03E (0x45b bytes), align: 0
  Segment part 10.            Intra module refs:   MAC_CbackEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackEvent          0002EBE4 
=======
  Relative segment, address: CODE 000025D1 - 000025E1 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zmacCBEventTable        000025D1 
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002C56F - 0002C9C9 (0x45b bytes), align: 0
  Segment part 10.            Intra module refs:   MAC_CbackEvent::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackEvent          0002C56F 
>>>>>>> develop
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000001C )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 2 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0002F03F - 0002F043 (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_CbackCheckPending::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackCheckPending   0002F03F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000231B - 00002320 (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 0002C9CA - 0002C9CE (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   MAC_CbackCheckPending::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackCheckPending   0002C9CA 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002164 - 00002169 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 9.             Intra module refs:   MAC_CbackEvent
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getZMacDynamicSize::?relay
<<<<<<< HEAD
                                   0000231B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00002321 - 00002326 (0x6 bytes), align: 0
=======
                                   00002164 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000216A - 0000216F (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackEvent::?relay
<<<<<<< HEAD
                                   00002321        Segment part 17 (mac_device)
=======
                                   0000216A        Segment part 17 (mac_device)
>>>>>>> develop
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDataRxInd (mac_data)
                                                   macDisassocComplete (mac_mgmt)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanComplete (mac_scan)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanRxBeacon (mac_scan)
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002327 - 0000232C (0x6 bytes), align: 0
=======
  Relative segment, address: CODE 00002170 - 00002175 (0x6 bytes), align: 0
>>>>>>> develop
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAC_CbackCheckPending::?relay
<<<<<<< HEAD
                                   00002327        macRxCheckPendingCallback (mac_data)
=======
                                   00002170        macRxCheckPendingCallback (mac_data)
>>>>>>> develop

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 4.0 Evaluation version\8051\LIB\CLIB\cl-pli-blxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000E2, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  000000E2        __call_main (CSTARTUP)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000E2 - 000000EA (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   000000E2        __low_level_init (?low_level_init)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000EB - 000000FA (0x10 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          000000EB        AIB_MaxBindingTime (APS)
                                                   APSME_CmdPktHook (APSMEDE)
                                                   APSME_FrameSecApplyExtHook (APSMEDE)
                                                   APSME_FrameSecApplyHook (APSMEDE)
                                                   APSME_FrameSecRemoveHook (APSMEDE)
                                                   APSME_FrameSecSetupHook (APSMEDE)
                                                   APS_Counter (APS)
                                                   APS_TaskID (APS)
                                                   AXD_DstAddr (AXD)
                                                   AXD_Group (AXD)
                                                   AXD_NwkState (AXD)
                                                   AXD_TaskID (AXD)
                                                   AXD_TransID (AXD)
                                                   AXD_epDesc (AXD)
                                                   AddrMgrEntryData (AddrMgr)
                                                   AddrMgrEntryTotal (AddrMgr)
                                                   BUFFER (adxl345)
                                                   BindingTable (nwk_globals)
                                                   HalKeyConfigured (hal_key)
                                                   HalLedState (hal_led)
                                                   HalLedStatusControl (hal_led)
                                                   Hal_KeyIntEnable (hal_key)
                                                   Hal_TaskID (hal_drivers)
                                                   NLME_ScanFields (NLMEDE)
                                                   NWK_TaskID (nwk)
                                                   NwkDescList (nwk)
                                                   OnboardKeyIntEnable (OnBoard)
                                                   OnboardTimerIntEnable (OnBoard)
                                                   SSP_GetMicLenHook (ssp)
                                                   SSP_NwkSecurityHook (ssp)
                                                   Segment part 13 (mac_timer)
                                                   Segment part 13 (nwk_util)
                                                   Segment part 6 (aps_groups)
                                                   Segment part 6 (nwk_util)
                                                   Segment part 6 (reflecttrack)
                                                   Segment part 7 (OSAL)
                                                   Segment part 7 (mac_scan)
                                                   Segment part 8 (OSAL)
                                                   Segment part 9 (OSAL)
                                                   Segment part 9 (reflecttrack)
                                                   ZDAppNwkAddr (ZDApp)
                                                   ZDAppTaskID (ZDApp)
                                                   ZDApp_LeaveCtrl (ZDApp)
                                                   ZDOBuildBuf (ZDObject)
                                                   ZDO_EDBind (ZDObject)
                                                   ZDP_Buf (ZDProfile)
                                                   ZDP_TransID (ZDProfile)
                                                   ZDP_TxOptions (ZDProfile)
                                                   ZMac_ScanBuf (zmac)
                                                   _NIB (nwk)
                                                   _ScanChannels (zmac)
                                                   _theHeap (OSAL_Memory)
                                                   _tmpRejoinState (ZDApp)
                                                   aExtendedAddress (OnBoard)
                                                   apsfProcessAck (APS)
                                                   apsfSendFragmented (APS)
                                                   apsfSendOsalMsg (APS)
                                                   backoffTimerRollover (mac_backoff_timer)
                                                   backoffTimerTrigger (mac_backoff_timer)
                                                   bindAddrMgrLocalLoaded (BindingTable)
                                                   cntIndirectHolding (nwk_bufs)
                                                   compareState (mac_backoff_timer)
                                                   devStartMode (ZDApp)
                                                   dmaCh0 (hal_dma)
                                                   dmaCh1234 (hal_dma)
                                                   epList (AF)
                                                   failF (OSAL_Nv)
                                                   ff1 (OSAL_Memory)
                                                   ff2 (OSAL_Memory)
                                                   findPg (OSAL_Nv)
                                                   flashXdataBuf (OSAL_Nv)
                                                   halAssertHazardLights{7}{8}{18}::escape (hal_assert)
                                                   halKeySavedKeys (hal_key)
                                                   halTimerChannel (hal_timer)
                                                   halTimerRecord (hal_timer)
                                                   macData (mac_data)
                                                   macDataCheckTxTime (mac_data)
                                                   macDevice (mac_device)
                                                   macMain (mac_main)
                                                   macMgmt (mac_mgmt)
                                                   macPanCoordinator (mac_mgmt)
                                                   macPhyChannel (mac_radio)
                                                   macPhyTxPower (mac_radio)
                                                   macPib (mac_pib)
                                                   macPwr (mac_pwr)
                                                   macReset (mac_main)
                                                   macRxActive (mac_rx)
                                                   macRxEnableFlags (mac_rx_onoff)
                                                   macRxFilter (mac_rx)
                                                   macRxOnFlag (mac_rx_onoff)
                                                   macRxOutgoingAckFlag (mac_rx)
                                                   macTaskId (mac_main)
                                                   macTxActive (mac_tx)
                                                   macTxBe (mac_tx)
                                                   macTxCsmaBackoffDelay (mac_tx)
                                                   macTxType (mac_tx)
                                                   maxRssi (mac_mcu)
                                                   nb (mac_tx)
                                                   neighborTable (nwk_globals)
                                                   nsduHandleCounter (nwk_util)
                                                   nwkDataBufQueue (nwk_bufs)
                                                   nwkStatus (ZDApp)
                                                   osal_qHead (OSAL)
                                                   osal_systemClock (OSAL_Timers)
                                                   pAPS_DataConfirmReflect (APS)
                                                   pAPS_DataIndReflect (APS)
                                                   pAPS_GetBind (APS)
                                                   pAPS_UnBind (APS)
                                                   pBindInitNV (BindingTable)
                                                   pBindRestoreFromNV (BindingTable)
                                                   pBindSetDefaultNV (BindingTable)
                                                   pBindWriteNV (BindingTable)
                                                   pFuncRxState (mac_rx)
                                                   pHalKeyProcessFunction (hal_key)
                                                   pMacDataTx (mac_data)
                                                   pNLME_NetworkFormationConfirm (NLMEDE)
                                                   pRxBuf (mac_rx)
                                                   pbindAddEntry (BindingTable)
                                                   pbindNumOfEntries (BindingTable)
                                                   pbindRemoveDev (BindingTable)
                                                   pgLost (OSAL_Nv)
                                                   pgOff (OSAL_Nv)
                                                   pgRes (OSAL_Nv)
                                                   pnwk_ScanJoiningOrphan (NLMEDE)
                                                   pnwk_ScanPANChanSelect (NLMEDE)
                                                   pnwk_ScanPANChanVerify (NLMEDE)
                                                   pnwk_associate_cnf_processing (NLMEDE)
                                                   preBlinkState (hal_led)
                                                   pwrmgr_attribute (OSAL_PwrMgr)
                                                   ready (OSAL_Memory)
                                                   reqChannel (mac_radio)
                                                   reqTxPower (mac_radio)
                                                   retryCnt (ZDApp)
                                                   rxBuf (AXD)
                                                   rxBuf (mac_rx)
                                                   rxFilter (mac_rx)
                                                   rxIsrActiveFlag (mac_rx)
                                                   rxLen (AXD)
                                                   rxNextLen (mac_rx)
                                                   rxPayloadLen (mac_rx)
                                                   rxPromiscuousMode (mac_rx)
                                                   rxResetFlag (mac_rx)
                                                   rxUnreadLen (mac_rx)
                                                   saveExtAddr (nwk_util)
                                                   savedResponseRate (NLMEDE)
                                                   shadowPerof2 (mac_mcu)
                                                   tasksEvents (OSAL_AXD)
                                                   timerActive (OSAL_Timers)
                                                   timerAlignedQ (mac_timer)
                                                   timerHead (OSAL_Timers)
                                                   timerUnalignedQ (mac_timer)
                                                   tmr_count (OSAL_Timers)
                                                   tmr_decr_time (OSAL_Timers)
                                                   txAckReq (mac_tx)
                                                   txRetransmitFlag (mac_tx)
                                                   txSeqn (mac_tx)
                                                   zdoMsgCBs (ZDProfile)
                                                   zgExtendedPANID (ZGlobals)
                                                   zgPreConfigKey (ZGlobals)
                                                   zgSecurityLevel (ZGlobals)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000FB - 00000123 (0x29 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          000000FB        APS_ReflectorType (APS)
                                                   AXD_ClusterList (AXD)
                                                   AXD_SimpleDesc (AXD)
                                                   Segment part 10 (OSAL)
                                                   Segment part 10 (adxl345)
                                                   Segment part 10 (reflecttrack)
                                                   Segment part 11 (mac_timer)
                                                   Segment part 12 (adxl345)
                                                   Segment part 12 (reflecttrack)
<<<<<<< HEAD
                                                   Segment part 13 (ZMain)
                                                   Segment part 14 (adxl345)
                                                   Segment part 15 (ZMain)
                                                   Segment part 16 (ZDObject)
                                                   Segment part 16 (adxl345)
                                                   Segment part 18 (ZDObject)
                                                   Segment part 18 (adxl345)
                                                   Segment part 20 (ZDObject)
                                                   Segment part 6 (AXD)
                                                   Segment part 6 (ZDObject)
                                                   Segment part 6 (nwk)
                                                   Segment part 7 (reflecttrack)
                                                   Segment part 8 (ZDObject)
                                                   Segment part 8 (adxl345)
                                                   Segment part 9 (MTEL)
                                                   Segment part 9 (hal_lcd)
=======
                                                   Segment part 14 (adxl345)
                                                   Segment part 16 (adxl345)
                                                   Segment part 18 (adxl345)
                                                   Segment part 6 (nwk)
                                                   Segment part 7 (reflecttrack)
                                                   Segment part 8 (adxl345)
>>>>>>> develop
                                                   Segment part 9 (mac_timer)
                                                   ZDApp_epDesc (ZDApp)
                                                   ZDO_Config_Node_Descriptor (ZDConfig)
                                                   ZDO_Config_Power_Descriptor (ZDConfig)
                                                   ZDP_TmpBuf (ZDProfile)
                                                   __Constant_0 (OSAL_Timers)
                                                   __Constant_1 (hal_assert)
                                                   __Constant_2710 (OSAL)
                                                   __Constant_30 (mac_coord)
<<<<<<< HEAD
                                                   __Constant_3e8 (MTEL)
                                                   __Constant_4079999a (adxl345)
                                                   __Constant_53544159 (MTEL)
=======
                                                   __Constant_3e8 (OSAL_Timers)
                                                   __Constant_4079999a (adxl345)
>>>>>>> develop
                                                   __Constant_5800 (hal_assert)
                                                   __Constant_5f5e100 (OSAL)
                                                   __Constant_64 (hal_led)
                                                   __Constant_c0000 (mac_backoff_timer)
                                                   continueJoining (ZDApp)
                                                   devState (ZDApp)
                                                   gMIN_TREE_LINK_COST (nwk_globals)
                                                   macActionSet (mac_main)
                                                   macCfg (mac_cfg)
                                                   macDataBeaconRequeue (mac_data)
                                                   macDataCheckSched (mac_data)
                                                   macDataRequeueIndirect (mac_data)
                                                   macDataRxBeaconCritical (mac_data)
                                                   macDataSetSched (mac_data)
                                                   macDataTxBeaconComplete (mac_data)
                                                   macDataTxIndirect (mac_data)
                                                   macSleepState (mac_sleep)
                                                   macStateTbl (mac_main)
                                                   registeredKeysTaskID (OnBoard)
                                                   tasksArr (OSAL_AXD)
                                                   tasksCnt (OSAL_AXD)
                                                   theHeap (OSAL_Memory)
                                                   zdoDiscCounter (ZDApp)
                                                   zgApsDefaultMaxBindingTime (ZGlobals)
                                                   zgApscAckWaitDurationPolled (ZGlobals)
                                                   zgApscMaxFrameRetries (ZGlobals)
                                                   zgBcastDeliveryTime (ZGlobals)
                                                   zgConfigPANID (ZGlobals)
                                                   zgDefaultChannelList (ZGlobals)
                                                   zgDefaultStartingScanDuration (ZGlobals)
                                                   zgIndirectMsgTimeout (ZGlobals)
                                                   zgMaxBcastRetires (ZGlobals)
                                                   zgMaxDataRetries (ZGlobals)
                                                   zgMaxPollFailureRetries (ZGlobals)
                                                   zgPassiveAckTimeout (ZGlobals)
                                                   zgPollRate (ZGlobals)
                                                   zgQueuedPollRate (ZGlobals)
                                                   zgRejoinPollRate (ZGlobals)
                                                   zgResponsePollRate (ZGlobals)
                                                   zgRouteExpiryTime (ZGlobals)
                                                   zgStackProfile (ZGlobals)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000124 - 0000014C (0x29 bytes), align: 0
  Segment part 31.            Intra module refs:   __low_level_init_call
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_I         00000124 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000014D - 00000162 (0x16 bytes), align: 0
  Segment part 32.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              0000014D 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000166 - 0000017A (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X                 00000166        macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000017B - 0000018F (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_X                0000017B        macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000190 - 0000019F (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  00000190        macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   nwk_data_ind_processing (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001A0 - 000001AF (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X                000001A0        HalLedUpdate (hal_led)
                                                   halAssertHazardLights (hal_assert)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_GPTR_LOAD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001B0 - 000001C9 (0x1a bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_GPTR_LOAD            000001B0        osal_memcpy (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_TO_FLT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001CA - 000001CC (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT               000001CA        displayXYZ (adxl345)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001CD - 000001E1 (0x15 bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_TO_FLT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT_REW           000001CD 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001E2 - 000001E4 (0x3 bytes), align: 0
  Segment part 2.             Intra module refs:   ?L_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT_REW          000001E2 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001E5 - 00000241 (0x5d bytes), align: 0
  Segment part 3.             Intra module refs:   ?L_TO_FLT_REW
                                                   ?UL_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT              000001E5 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TO_L

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000242 - 00000275 (0x34 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L               00000242        displayXYZ (adxl345)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000276 - 00000281 (0xc bytes), align: 0
  Segment part 4.             Intra module refs:   ?FLT_TO_L
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000282 - 000002D0 (0x4f bytes), align: 0
  Segment part 5.             Intra module refs:   ?FLT_TO_L

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002D1 - 000002DA (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_REW      000002D1        ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002DB - 000002E4 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1_REW   000002DB        ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002E5 - 000002E7 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_REW       000002E5        ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002E8 - 000002F9 (0x12 bytes), align: 0
  Segment part 1.             Intra module refs:   ?FLT_TEST_INF_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF           000002E8 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002FA - 000002FC (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1_REW    000002FA        ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000002FD - 0000030E (0x12 bytes), align: 0
  Segment part 1.             Intra module refs:   ?FLT_TEST_INF_R1_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1        000002FD 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000030F - 0000031D (0xf bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN           0000030F        ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000031E - 0000032C (0xf bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1        0000031E        ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000032D - 000004AC (0x180 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL                0000032D        displayXYZ (adxl345)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000004AD - 000004AF (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL                  000004AD        HalLedUpdate (hal_led)
                                                   halTimerSetCount (hal_timer)
                                                   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000004B0 - 0000052C (0x7d bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_MUL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL_REW              000004B0 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000052D - 0000059C (0x70 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIV_MOD             0000052D        HalLedUpdate (hal_led)
<<<<<<< HEAD
                                                   MT_ProcessSerialCommand (MTEL)
=======
>>>>>>> develop
                                                   _ltoa (OSAL)
                                                   halTimerSetCount (hal_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NEG

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000059D - 0000059F (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_REW              0000059D        ?L_TO_FLT_REW (?L_TO_FLT)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000005A0 - 000005B0 (0x11 bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_NEG_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG                  000005A0        macBackoffTimerRolloverCallback (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NOT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000005B1 - 000005C0 (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NOT                  000005B1        macScanStartTimer (mac_scan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000005C1 - 000005C5 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           ?UL_SHR                 000005C1        MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
                                                   _ltoa (OSAL)
=======
           ?UL_SHR                 000005C1        _ltoa (OSAL)
>>>>>>> develop
                                                   macApiScanReq (mac_scan)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macScanNextChan (mac_scan)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000005C6 - 000005D9 (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?UL_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000005DA - 000005DF (0x6 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           ?L_SHL                  000005DA        MT_ProcessSerialCommand (MTEL)
                                                   macScanStartTimer (mac_scan)
=======
           ?L_SHL                  000005DA        macScanStartTimer (mac_scan)
>>>>>>> develop
                                                   osal_build_uint32 (OSAL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000005E0 - 000005E4 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_REW              000005E0 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000005E5 - 000005F8 (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?L_SHL
                                                   ?L_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000005F9 - 0000060B (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           ?L_ADD                  000005F9        MT_ProcessSerialCommand (MTEL)
                                                   macTimer (mac_timer)
=======
           ?L_ADD                  000005F9        macTimer (mac_timer)
>>>>>>> develop
                                                   osal_build_uint32 (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000060C - 0000061E (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                0000060C        HalLedUpdate (hal_led)
                                                   macScanStartTimer (mac_scan)
                                                   nwk_data_ind_processing (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000061F - 00000631 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X             0000061F        halAssertHazardLights (hal_assert)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   osalTimerUpdate (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_FROM_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000632 - 00000645 (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X           00000632        macBackoffTimerRolloverCallback (mac_timer)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000646 - 00000658 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X             00000646        macScanStartTimer (mac_scan)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000659 - 00000667 (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                00000659        APSDE_DataIndication (APSMEDE_CB)
                                                   APS_DataIndReflect (APS)
                                                   HalLedUpdate (hal_led)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZMacScanReq (zmac)
                                                   _ltoa (OSAL)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   displayXYZ (adxl345)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSetCount (hal_timer)
                                                   macApiScanReq (mac_scan)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit (OSAL_Timers)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000668 - 00000676 (0xf bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             00000668        APSDE_DataIndication (APSMEDE_CB)
<<<<<<< HEAD
                                                   MT_Reset (MTEL)
=======
>>>>>>> develop
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ZMacScanReq (zmac)
                                                   halAssertHazardLights (hal_assert)
                                                   macApiScanReq (mac_scan)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macScanNextChan (mac_scan)
                                                   macTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxTimestampCallback (mac_tx)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerInit (OSAL_Timers)
                                                   rxStartIsr (mac_rx)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000677 - 00000683 (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   00000677        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000684 - 000006A4 (0x21 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   00000684        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   NLDE_SendMsg (nwk_util)
                                                   _ltoa (OSAL)
                                                   nwk_getNetworkDesc (nwk)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_CODE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000006A5 - 000006C6 (0x22 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_CODE
                                   000006A5        ?PUSH_XSTACK8_C (?PUSH_XSTACK8_C)
                                                   macPibReset (mac_pib)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000006C7 - 00000707 (0x41 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              00000700        macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macFrameDuration (mac_data)
                                                   radioComputeED (mac_radio)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000708 - 00000760 (0x59 bytes), align: 0
  Segment part 1.             Intra module refs:   ?S_DIV_MOD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             00000708        _itoa (OnBoard)
                                                   calcChkB (OSAL_Nv)
                                                   macStartFrameResponseTimer (mac_device)
                                                   writeBuf (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000761 - 00000763 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 00000761        HalAdcRead (hal_adc)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000764 - 00000770 (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?SS_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000771 - 00000773 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 00000771        NLDE_ParseFrameControl (nwk_util)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   initItem (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   osal_nv_write (OSAL_Nv)
                                                   setItem (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordM (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000774 - 0000077F (0xc bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000780 - 00000782 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  00000780        BindWriteNV (BindingTable)
                                                   GetBindingTableEntry (BindingTable)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   bindAddEntry (BindingTable)
                                                   bindFind (BindingTable)
                                                   bindFindEmpty (BindingTable)
                                                   bindFindExisting (BindingTable)
                                                   bindNumOfEntries (BindingTable)
                                                   bindNumReflections (BindingTable)
                                                   bindRemoveDev (BindingTable)
                                                   halAssertHazardLights (hal_assert)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   txCsmaPrep (mac_tx)
                                                   writeWord (OSAL_Nv)
                                                   writeWordM (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000783 - 00000785 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              00000783 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000786 - 00000792 (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000793 - 000007A1 (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          00000793        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSME_BindRequest (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APS_DataIndReflect (APS)
                                                   APS_GetBind (APS)
                                                   APS_ReReflect (APS)
                                                   APS_Reflect (APS)
                                                   APS_ReflectMonitor (APS)
                                                   AXD_HandleKeys (AXD)
                                                   AXD_Init (AXD)
                                                   AXD_ProcessEvent (AXD)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   BindRestoreFromNV (BindingTable)
                                                   BindSetDefaultNV (BindingTable)
                                                   BindWriteNV (BindingTable)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   MAC_CbackEvent (zmac_cb)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_GetCoordShortAddr (nwk_util)
                                                   NLME_GetProtocolVersion (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NwkPollReq (nwk)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_ProcessMsgCBs (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ParseEPListRsp (ZDObject)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_RegisterForZDOMsg (ZDProfile)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_UpdateAddrManager (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacReset (zmac)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   bindAddEntry (BindingTable)
                                                   bindAddrIndexGet (BindingTable)
                                                   bindAddrMgrLocalLoad (BindingTable)
                                                   bindingAddrMgsHelperConvert (BindingTable)
                                                   bindingAddrMgsHelperConvertShort (BindingTable)
                                                   bindingAddrMgsHelperFind (BindingTable)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
                                                   displayXYZ (adxl345)
                                                   erasePage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSetCount (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxAssocRsp (mac_device)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_nv_write (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeIEEE (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007A2 - 000007B4 (0x13 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        000007A2        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSME_BindRequest (APSMEDE)
                                                   APSME_UnBindRequest (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_DataIndReflect (APS)
                                                   APS_ReReflect (APS)
                                                   APS_Reflect (APS)
                                                   APS_ReflectMonitor (APS)
                                                   APS_event_loop (APS)
                                                   AXD_HandleKeys (AXD)
                                                   AXD_Init (AXD)
                                                   AXD_ProcessEvent (AXD)
                                                   AXD_SendTheMessage (AXD)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   BindInitNV (BindingTable)
                                                   BindRestoreFromNV (BindingTable)
                                                   BindSetDefaultNV (BindingTable)
                                                   BindWriteNV (BindingTable)
                                                   HalAdcInit (hal_adc)
                                                   HalAdcRead (hal_adc)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NwkPollReq (nwk)
                                                   Segment part 103 (nwk_util)
                                                   Segment part 15 (AddrMgr)
                                                   Segment part 16 (BindingTable)
                                                   Segment part 23 (BindingTable)
                                                   Segment part 25 (NLMEDE)
                                                   Segment part 265 (APSMEDE)
                                                   Segment part 29 (mac_main)
                                                   Segment part 32 (APSMEDE)
                                                   Segment part 33 (mac_device)
                                                   Segment part 36 (NLMEDE)
                                                   Segment part 38 (AddrMgr)
                                                   Segment part 39 (APS)
                                                   Segment part 40 (APSMEDE)
                                                   Segment part 41 (mac_mgmt)
                                                   Segment part 44 (nwk_util)
                                                   Segment part 68 (nwk)
                                                   Segment part 72 (APSMEDE)
                                                   Segment part 72 (mac_device)
                                                   Segment part 76 (mac_mgmt)
                                                   Segment part 92 (nwk)
                                                   Segment part 93 (nwk_util)
                                                   Segment part 94 (BindingTable)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_ProcessMsgCBs (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ParseEPListRsp (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_RegisterForZDOMsg (ZDProfile)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_UpdateAddrManager (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   ZMacReset (zmac)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   bindAddEntry (BindingTable)
                                                   bindingAddrMgsHelperConvert (BindingTable)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
<<<<<<< HEAD
                                                   debug_str (DebugTrace)
=======
>>>>>>> develop
                                                   displayXYZ (adxl345)
                                                   erasePage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   halTimerSetCount (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macApiAssociateReq (mac_device)
                                                   macAssocDataReq (mac_device)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macDataTxSend (mac_data)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_event_loop (nwk)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   rxAddrIsr (mac_rx)
                                                   rxDiscardIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeIEEE (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgItemInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007B5 - 000007C8 (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     000007B5        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007C9 - 000007D2 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         000007C9        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSME_BindRequest (APSMEDE)
                                                   APSME_UnBindRequest (APSMEDE)
                                                   APS_DataIndReflect (APS)
                                                   APS_GetBind (APS)
                                                   APS_ReReflect (APS)
                                                   APS_Reflect (APS)
                                                   APS_ReflectMonitor (APS)
                                                   APS_UnBind (APS)
                                                   AXD_HandleKeys (AXD)
                                                   AXD_Init (AXD)
                                                   AXD_ProcessEvent (AXD)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   BindRestoreFromNV (BindingTable)
                                                   BindWriteNV (BindingTable)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   MAC_CbackEvent (zmac_cb)
                                                   NLDE_DataIndSend (nwk_util)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NwkPollReq (nwk)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   Segment part 32 (APSMEDE)
                                                   Segment part 94 (BindingTable)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_UpdateAddrManager (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   _ltoa (OSAL)
                                                   afBuildMSGIncoming (AF)
                                                   afIncomingData (AF)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   bindAddEntry (BindingTable)
                                                   bindAddrIndexGet (BindingTable)
                                                   bindAddrMgrLocalLoad (BindingTable)
                                                   bindingAddrMgsHelperConvert (BindingTable)
                                                   bindingAddrMgsHelperConvertShort (BindingTable)
                                                   bindingAddrMgsHelperFind (BindingTable)
                                                   compactPage (OSAL_Nv)
                                                   displayXYZ (adxl345)
                                                   erasePage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   halAssertHazardLights (hal_assert)
                                                   initItem (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAssocDataReq (mac_device)
                                                   macAssociateCnf (mac_device)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macConflictSyncLossInd (mac_mgmt)
                                                   macDisassocComplete (mac_mgmt)
                                                   macEventLoop (mac_main)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macPollCnf (mac_device)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisassoc (mac_mgmt)
                                                   macScanFailedInProgress (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macTimer (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   memset (?memset)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_memcpy (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   rxStartIsr (mac_rx)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   writeBuf (OSAL_Nv)
                                                   writeIEEE (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   writeWordM (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgItemInit (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007D3 - 000007D4 (0x2 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CALL_IND               000007D3        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_FrameSend (APSMEDE)
                                                   APSME_BindRequest (APSMEDE)
                                                   APSME_FrameSecInit (APSMEDE)
                                                   APSME_UnBindRequest (APSMEDE)
                                                   HalKeyPoll (hal_key)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   SSP_GetMicLen (ssp)
                                                   SSP_NwkSecurity (ssp)
                                                   Segment part 226 (APSMEDE)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDP_IncomingData (ZDProfile)
                                                   afFindSimpleDesc (AF)
                                                   afIncomingData (AF)
                                                   apsProcessAck (aps_util)
                                                   halTimerSendCallBack (hal_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macDataTxComplete (mac_data)
                                                   macDataTxEnqueue (mac_data)
                                                   macDataTxSend (mac_data)
                                                   macDataTxTimeAvailable (mac_data)
                                                   macExecute (mac_main)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxThresholdIsr (mac_rx)
                                                   macTxCompleteCallback (mac_data)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwk_event_loop (nwk)
                                                   nwk_scan_cnf_processing (nwk)
                                                   osal_start_system (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?POP_BIT_ISP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007D5 - 000007E7 (0x13 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?POP_BIT_ISP            000007D5        macMcuRfIsr (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000007E8 - 0000084C (0x65 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_ENTER_XDATA     000007E8        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APSDE_FrameAlloc (APSMEDE)
                                                   APSDE_FrameBlkInit (APSMEDE)
                                                   APSDE_FrameHdrInit (APSMEDE)
                                                   APSDE_FrameHdrSet (APSMEDE)
                                                   APSDE_FrameSend (APSMEDE)
                                                   APSDE_ParseMsg (aps_util)
                                                   APSME_BindRequest (APSMEDE)
                                                   APSME_FrameSecInit (APSMEDE)
                                                   APSME_LookupNwkAddr (APSMEDE)
                                                   APSME_UnBindRequest (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_DataIndReflect (APS)
                                                   APS_GetBind (APS)
                                                   APS_ReReflect (APS)
                                                   APS_Reflect (APS)
                                                   APS_ReflectMonitor (APS)
                                                   APS_ReflectorInit (APS)
                                                   APS_UnBind (APS)
                                                   APS_event_loop (APS)
                                                   AXD_HandleKeys (AXD)
                                                   AXD_Init (AXD)
                                                   AXD_ProcessEvent (AXD)
                                                   AXD_ProcessZDOMsgs (AXD)
                                                   AXD_SendTheMessage (AXD)
                                                   AddrMgrEntryAdd (AddrMgr)
                                                   AddrMgrEntryAddRef (AddrMgr)
                                                   AddrMgrEntryGet (AddrMgr)
                                                   AddrMgrEntryLookupExt (AddrMgr)
                                                   AddrMgrEntryLookupNwk (AddrMgr)
                                                   AddrMgrEntrySet (AddrMgr)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   AddrMgrEntryUpdateEx (AddrMgr)
                                                   AddrMgrExtAddrValid (AddrMgr)
                                                   AddrMgrInit (AddrMgr)
                                                   AddrMgrNwkAddrLookup (AddrMgr)
                                                   AddrMgrWriteNVRequest (ZDApp)
                                                   BindInitNV (BindingTable)
                                                   BindRestoreFromNV (BindingTable)
                                                   BindSetDefaultNV (BindingTable)
                                                   BindWriteNV (BindingTable)
                                                   ChkReset (OnBoard)
                                                   GetBindingTableEntry (BindingTable)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalKeyRead (hal_key)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerInterruptEnable (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalTimerStop (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTWrite (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBindingTable (BindingTable)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_McpsDataAlloc (mac_data)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeResetReq (mac_mgmt)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   Multiple_Read_ADXL345 (adxl345)
                                                   NLDE_BuildFrameControl (nwk_util)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReq (NLMEDE)
                                                   NLDE_DataReqAlloc (NLMEDE)
                                                   NLDE_DataReqSend (nwk_util)
                                                   NLDE_FrameDataLoad (APSMEDE)
                                                   NLDE_GetHandle (nwk_util)
                                                   NLDE_ParseFrameControl (nwk_util)
                                                   NLDE_ParseMsg (nwk_util)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLDE_SendMsg (nwk_util)
                                                   NLME_CmdCnf (nwk_util)
                                                   NLME_CmdDataReqAlloc (nwk_util)
                                                   NLME_GetNeighborIndex (nwk_util)
                                                   NLME_GetNeighborLinkInfo (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   NLME_IsAddressBroadcast (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   NLME_LeaveCmdCnf (nwk_util)
                                                   NLME_LeaveCmdProcess (nwk_util)
                                                   NLME_NetworkDiscoveryRequest (NLMEDE)
                                                   NLME_OrphanJoinRequest (NLMEDE)
                                                   NLME_ReJoinRequest (NLMEDE)
                                                   NLME_RejoinRspCmdProcess (nwk_util)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_TimerCallBack (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   RTG_UpdateNeighborEntry (nwk_util)
                                                   ReadI2CByte_1 (adxl345)
                                                   Sendack (adxl345)
                                                   Single_Write_ADXL345 (adxl345)
                                                   WriteI2CByte_1 (adxl345)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_LeaveReset (ZDApp)
                                                   ZDApp_LeaveUpdate (ZDApp)
                                                   ZDApp_NetworkInit (ZDApp)
                                                   ZDApp_NodeProfileSync (ZDApp)
                                                   ZDApp_ProcessMsgCBs (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_ResetTimerStart (ZDApp)
                                                   ZDApp_SecInit (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_ConvertOTAClusters (ZDObject)
                                                   ZDO_JoinConfirmCB (ZDApp)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ParseAddrRsp (ZDObject)
                                                   ZDO_ParseBindUnbindReq (ZDObject)
                                                   ZDO_ParseEPListRsp (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_RegisterForZDOMsg (ZDProfile)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_SyncIndicationCB (ZDApp)
                                                   ZDO_UpdateAddrManager (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   afBuildMSGIncoming (AF)
                                                   afCopyAddress (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afEndPoints (AF)
                                                   afFindEndPointDesc (AF)
                                                   afFindSimpleDesc (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsAckFindMatchCB (aps_util)
                                                   apsGenerateAck (aps_util)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   aps_FindGroup (aps_groups)
                                                   aps_FindGroupForEndpoint (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   aps_RemoveGroup (aps_groups)
                                                   bindAddClusterIdToList (BindingTable)
                                                   bindAddEntry (BindingTable)
                                                   bindAddrMgrLocalLoad (BindingTable)
                                                   bindFind (BindingTable)
                                                   bindFindEmpty (BindingTable)
                                                   bindFindExisting (BindingTable)
                                                   bindIsClusterIDinList (BindingTable)
                                                   bindNumOfEntries (BindingTable)
                                                   bindNumReflections (BindingTable)
                                                   bindRemoveClusterIdFromList (BindingTable)
                                                   bindRemoveDev (BindingTable)
                                                   bindingAddrMgsHelperConvert (BindingTable)
                                                   calcChkB (OSAL_Nv)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
<<<<<<< HEAD
                                                   debug_str (DebugTrace)
=======
>>>>>>> develop
                                                   displayXYZ (adxl345)
                                                   erasePage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHazardLights (hal_assert)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halTimerSendCallBack (hal_timer)
                                                   halTimerSetCount (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macAllocTxBuffer (mac_data)
                                                   macApiAssociateReq (mac_device)
                                                   macApiDisassociateReq (mac_mgmt)
                                                   macApiPending (mac_mgmt)
                                                   macApiPollReq (mac_device)
                                                   macApiScanReq (mac_scan)
                                                   macAssocDataReqComplete (mac_device)
                                                   macAssocDataRxInd (mac_device)
                                                   macAssocFailed (mac_device)
                                                   macAssocFrameResponseTimeout (mac_device)
                                                   macAssocRxDisassoc (mac_device)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macBackoffTimerTriggerCallback (mac_timer)
                                                   macBuildBeaconNotifyInd (mac_mgmt)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macBuildHeader (mac_mgmt)
                                                   macCbackForEvent (mac_main)
                                                   macCommStatusInd (mac_mgmt)
                                                   macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macDataTxEnqueue (mac_data)
                                                   macDataTxSend (mac_data)
                                                   macEventLoop (mac_main)
                                                   macExecute (mac_main)
                                                   macMainReset (mac_main)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteRam (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macPollDataReqComplete (mac_device)
                                                   macPollDataRxInd (mac_device)
                                                   macPollFrameResponseTimeout (mac_device)
                                                   macPollRxAssocRsp (mac_device)
                                                   macPollRxDisassoc (mac_device)
                                                   macRadioComputeLQI (mac_radio)
                                                   macRadioEnergyDetectStop (mac_radio)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioSetIEEEAddr (mac_radio)
                                                   macRadioSetPanCoordinator (mac_radio)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRxAssocRsp (mac_device)
                                                   macRxBeacon (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxCoordRealign (mac_device)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxHardDisable (mac_rx_onoff)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macRxOnRequest (mac_rx_onoff)
                                                   macRxPromiscuousMode (mac_rx)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macScanCnfInit (mac_scan)
                                                   macScanNextChan (mac_scan)
                                                   macScanRxBeacon (mac_scan)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimer (mac_timer)
                                                   macTimerAddTimer (mac_timer)
                                                   macTimerCancel (mac_timer)
                                                   macTimerRecalcUnaligned (mac_timer)
                                                   macTimerRemoveTimer (mac_timer)
                                                   macTimerUpdateBackoffTimer (mac_timer)
                                                   macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxDoneCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   memset (?memset)
                                                   nwkBuildDataCnf (nwk)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwkDB_DeleteRecAll (nwk_bufs)
                                                   nwkDB_FindMatch (nwk_bufs)
                                                   nwkDB_FindNextType (nwk_bufs)
                                                   nwkDB_RemoveFromList (nwk_bufs)
                                                   nwkDB_UserDataLoad (nwk_util)
                                                   nwkNeighborClearEntry (nwk_util)
                                                   nwkNeighborInitTable (nwk_util)
                                                   nwk_BeaconFromNative (nwk)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   nwk_MacDataBuffersDealloc (nwk_bufs)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_SendNextDataBuf (nwk_bufs)
                                                   nwk_associate_cnf_processing (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_data_req_send (nwk)
                                                   nwk_desc_list_free (nwk)
                                                   nwk_event_loop (nwk)
                                                   nwk_getNetworkDesc (nwk)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalFindTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_AXD)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_ExtAddrEqual (OSAL)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_build_uint32 (OSAL)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_init (OSAL_Memory)
                                                   osal_memcpy (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_deallocate (OSAL)
                                                   osal_msg_dequeue (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_max (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_init (OSAL_Nv)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_set_event (OSAL)
                                                   osal_start_system (OSAL)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_strlen (OSAL)
                                                   osal_timer_activate (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   reflectTrack_AddNewEntry (reflecttrack)
                                                   reflectTrack_FindHandle (reflecttrack)
                                                   reflectTrack_GetNewEntry (reflecttrack)
                                                   reflectTrack_RemoveEntry (reflecttrack)
                                                   reflectTrack_UpdateOption (reflecttrack)
                                                   reflectTracking_GetMaxIndirectAdjusted (reflecttrack)
                                                   reflectTracking_GetMaxSimultaneousAdjusted (reflecttrack)
                                                   rxAddrIsr (mac_rx)
                                                   rxCB_Loopback (AXD)
                                                   rxFcsIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrCmp (saddr)
                                                   sAddrCpy (saddr)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   strcat (?strcat)
                                                   strcpy (?strcpy)
                                                   txComplete (mac_tx)
                                                   txCsmaPrep (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeIEEE (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   writeWordM (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgItemInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000084D - 000008AB (0x5f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       0000084D        ZMacAssociateReq (zmac)
                                                   ZMacDataReq (zmac)
                                                   ZMacGetReq (zmac)
                                                   ZMacInit (zmac)
                                                   ZMacPollReq (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSetReq (zmac)
                                                   ZMacSyncReq (zmac)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_ram_init (ZMain)
                                                   zmain_vdd_check (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008AC - 000008EC (0x41 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_LEAVE_XDATA     000008AC        AF_DataRequest (AF)
                                                   APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_ParseMsg (aps_util)
                                                   APS_ReReflect (APS)
                                                   AXD_HandleKeys (AXD)
                                                   AXD_Init (AXD)
                                                   AXD_ProcessEvent (AXD)
                                                   AXD_ProcessZDOMsgs (AXD)
                                                   AXD_SendTheMessage (AXD)
                                                   AddrMgrWriteNVRequest (ZDApp)
                                                   ChkReset (OnBoard)
                                                   HalAdcRead (hal_adc)
                                                   HalKeyConfig (hal_key)
                                                   HalKeyPoll (hal_key)
                                                   HalKeyRead (hal_key)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   HalLedBlink (hal_led)
                                                   HalLedSet (hal_led)
                                                   HalLedUpdate (hal_led)
                                                   HalTimerConfig (hal_timer)
                                                   HalTimerInterruptEnable (hal_timer)
                                                   HalTimerStart (hal_timer)
                                                   HalTimerStop (hal_timer)
                                                   HalUARTOpen (hal_uart)
                                                   HalUARTRead (hal_uart)
                                                   HalUARTWrite (hal_uart)
                                                   Hal_ProcessEvent (hal_drivers)
                                                   InitBoard (OnBoard)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   Multiple_Read_ADXL345 (adxl345)
                                                   NLDE_DataCnf (NLMEDE_CB)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_ParseMsg2 (nwk_util)
                                                   NLME_JoinRequest (NLMEDE)
                                                   OnBoard_KeyCallback (OnBoard)
                                                   OnBoard_SendKeys (OnBoard)
                                                   Onboard_TimerCallBack (OnBoard)
                                                   Onboard_rand (OnBoard)
                                                   ReadI2CByte_1 (adxl345)
                                                   Segment part 103 (nwk_util)
                                                   Segment part 11 (aps_groups)
                                                   Segment part 12 (nwk_bufs)
                                                   Segment part 14 (mac_scan)
                                                   Segment part 145 (nwk_util)
                                                   Segment part 15 (AddrMgr)
                                                   Segment part 16 (BindingTable)
                                                   Segment part 17 (nwk_bufs)
                                                   Segment part 19 (mac_scan)
                                                   Segment part 20 (aps_util)
                                                   Segment part 21 (APS)
                                                   Segment part 21 (aps_groups)
                                                   Segment part 23 (BindingTable)
                                                   Segment part 23 (nwk_util)
                                                   Segment part 24 (mac_main)
                                                   Segment part 24 (mac_timer)
                                                   Segment part 25 (NLMEDE)
                                                   Segment part 26 (AddrMgr)
                                                   Segment part 265 (APSMEDE)
                                                   Segment part 27 (BindingTable)
                                                   Segment part 27 (mac_mgmt)
                                                   Segment part 29 (mac_main)
                                                   Segment part 30 (AddrMgr)
                                                   Segment part 32 (APSMEDE)
                                                   Segment part 32 (mac_data)
                                                   Segment part 33 (BindingTable)
                                                   Segment part 36 (APS)
                                                   Segment part 36 (BindingTable)
                                                   Segment part 36 (NLMEDE)
                                                   Segment part 38 (AddrMgr)
                                                   Segment part 39 (APS)
                                                   Segment part 40 (APSMEDE)
                                                   Segment part 41 (mac_mgmt)
                                                   Segment part 44 (mac_device)
                                                   Segment part 44 (nwk_util)
                                                   Segment part 47 (mac_timer)
                                                   Segment part 47 (reflecttrack)
                                                   Segment part 50 (mac_data)
                                                   Segment part 52 (nwk)
                                                   Segment part 54 (mac_timer)
                                                   Segment part 54 (nwk_bufs)
                                                   Segment part 68 (nwk)
                                                   Segment part 72 (APSMEDE)
                                                   Segment part 74 (AddrMgr)
                                                   Segment part 92 (nwk)
                                                   Segment part 99 (nwk)
                                                   Sendack (adxl345)
                                                   Single_Write_ADXL345 (adxl345)
                                                   WriteI2CByte_1 (adxl345)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_Init (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDApp_LeaveReset (ZDApp)
                                                   ZDApp_LeaveUpdate (ZDApp)
                                                   ZDApp_NetworkInit (ZDApp)
                                                   ZDApp_NodeProfileSync (ZDApp)
                                                   ZDApp_ProcessMsgCBs (ZDApp)
                                                   ZDApp_ProcessNetworkJoin (ZDApp)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDApp_ResetTimerStart (ZDApp)
                                                   ZDApp_SecInit (ZDApp)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDApp_event_loop (ZDApp)
                                                   ZDOInitDevice (ZDApp)
                                                   ZDO_AnyClusterMatches (ZDObject)
                                                   ZDO_ConvertOTAClusters (ZDObject)
                                                   ZDO_JoinConfirmCB (ZDApp)
                                                   ZDO_LeaveCnf (ZDApp)
                                                   ZDO_LeaveInd (ZDApp)
                                                   ZDO_NetworkDiscoveryConfirmCB (ZDApp)
                                                   ZDO_ParseAddrRsp (ZDObject)
                                                   ZDO_ParseBindUnbindReq (ZDObject)
                                                   ZDO_ParseEPListRsp (ZDObject)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDO_ProcessSimpleDescReq (ZDObject)
                                                   ZDO_RegisterForZDOMsg (ZDProfile)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDO_StartDevice (ZDObject)
                                                   ZDO_SyncIndicationCB (ZDApp)
                                                   ZDO_UpdateAddrManager (ZDObject)
                                                   ZDO_UpdateNwkStatus (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_IncomingData (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   _itoa (OnBoard)
                                                   _ltoa (OSAL)
                                                   afBuildMSGIncoming (AF)
                                                   afCopyAddress (AF)
                                                   afDataConfirm (AF)
                                                   afDataReqMTU (AF)
                                                   afEndPoints (AF)
                                                   afFindEndPointDesc (AF)
                                                   afFindSimpleDesc (AF)
                                                   afIncomingData (AF)
                                                   afRegister (AF)
                                                   afRegisterExtended (AF)
                                                   apsProcessAck (aps_util)
                                                   aps_AddGroup (aps_groups)
                                                   bindRemoveDev (BindingTable)
                                                   calcChkB (OSAL_Nv)
                                                   calcChkF (OSAL_Nv)
                                                   compactPage (OSAL_Nv)
<<<<<<< HEAD
                                                   debug_str (DebugTrace)
=======
>>>>>>> develop
                                                   displayXYZ (adxl345)
                                                   erasePage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   findItem (OSAL_Nv)
                                                   halAssertHazardLights (hal_assert)
                                                   halProcessKeyInterrupt (hal_key)
                                                   halTimerSendCallBack (hal_timer)
                                                   halTimerSetCount (hal_timer)
                                                   initItem (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   initPage (OSAL_Nv)
                                                   macBackoffTimerCancelTrigger (mac_backoff_timer)
                                                   macBackoffTimerCapture (mac_backoff_timer)
                                                   macBackoffTimerCompareIsr (mac_backoff_timer)
                                                   macBackoffTimerCount (mac_backoff_timer)
                                                   macBackoffTimerInit (mac_backoff_timer)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBackoffTimerSetRollover (mac_backoff_timer)
                                                   macBackoffTimerSetTrigger (mac_backoff_timer)
                                                   macCspTxGoCsma (mac_csp_tx)
                                                   macCspTxGoSlotted (mac_csp_tx)
                                                   macCspTxRequestAckTimeoutCallback (mac_csp_tx)
                                                   macMcuAndT2PEROF2 (mac_mcu)
                                                   macMcuOrT2PEROF2 (mac_mcu)
                                                   macMcuOverflowCapture (mac_mcu)
                                                   macMcuOverflowCount (mac_mcu)
                                                   macMcuOverflowSetCompare (mac_mcu)
                                                   macMcuOverflowSetCount (mac_mcu)
                                                   macMemReadRxFifo (mac_mem)
                                                   macMemWriteRam (mac_mem)
                                                   macMemWriteTxFifo (mac_mem)
                                                   macRadioComputeLQI (mac_radio)
                                                   macRadioEnergyDetectStop (mac_radio)
                                                   macRadioSetChannel (mac_radio)
                                                   macRadioSetIEEEAddr (mac_radio)
                                                   macRadioSetPanCoordinator (mac_radio)
                                                   macRadioSetTxPower (mac_radio)
                                                   macRadioStartScan (mac_radio)
                                                   macRadioUpdateChannel (mac_radio)
                                                   macRxCompleteCallback (mac_data)
                                                   macRxDisable (mac_rx_onoff)
                                                   macRxDisassoc (mac_mgmt)
                                                   macRxEnable (mac_rx_onoff)
                                                   macRxHardDisable (mac_rx_onoff)
                                                   macRxOffRequest (mac_rx_onoff)
                                                   macRxOnRequest (mac_rx_onoff)
                                                   macRxPromiscuousMode (mac_rx)
                                                   macRxSoftEnable (mac_rx_onoff)
                                                   macScanRxCoordRealign (mac_scan)
                                                   macScanStartTimer (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   macSetEvent (mac_main)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
                                                   macTimerAddTimer (mac_timer)
                                                   macTxAckNotReceivedCallback (mac_tx)
                                                   macTxAckReceivedCallback (mac_tx)
                                                   macTxDoneCallback (mac_tx)
                                                   macTxFrame (mac_tx)
                                                   macTxStartQueuedFrame (mac_tx)
                                                   macTxTimestampCallback (mac_tx)
                                                   memset (?memset)
                                                   nwkBuildDataCnf (nwk)
                                                   nwkDB_Add (nwk_bufs)
                                                   nwkDB_CreateHdr (nwk_bufs)
                                                   nwk_data_ind_processing (nwk)
                                                   osalAddTimer (OSAL_Timers)
                                                   osalDeleteTimer (OSAL_Timers)
                                                   osalFindTimer (OSAL_Timers)
                                                   osalInitTasks (OSAL_AXD)
                                                   osalTimerInit (OSAL_Timers)
                                                   osalTimerUpdate (OSAL_Timers)
                                                   osal_ExtAddrEqual (OSAL)
                                                   osal_GetSystemClock (OSAL_Timers)
                                                   osal_build_uint32 (OSAL)
                                                   osal_cpyExtAddr (OSAL)
                                                   osal_get_timeoutEx (OSAL_Timers)
                                                   osal_mem_alloc (OSAL_Memory)
                                                   osal_mem_free (OSAL_Memory)
                                                   osal_mem_init (OSAL_Memory)
                                                   osal_memcpy (OSAL)
                                                   osal_memset (OSAL)
                                                   osal_msg_allocate (OSAL)
                                                   osal_msg_deallocate (OSAL)
                                                   osal_msg_dequeue (OSAL)
                                                   osal_msg_enqueue (OSAL)
                                                   osal_msg_enqueue_max (OSAL)
                                                   osal_msg_extract (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_msg_send (OSAL)
                                                   osal_nv_init (OSAL_Nv)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   osal_set_event (OSAL)
                                                   osal_start_timerEx (OSAL_Timers)
                                                   osal_stop_timerEx (OSAL_Timers)
                                                   osal_strlen (OSAL)
                                                   osal_timer_activate (OSAL_Timers)
                                                   osal_timer_hw_setup (OSAL_Timers)
                                                   reflectTrack_AddNewEntry (reflecttrack)
                                                   reflectTrack_GetNewEntry (reflecttrack)
                                                   rxAddrIsr (mac_rx)
                                                   rxCB_Loopback (AXD)
                                                   rxFcsIsr (mac_rx)
                                                   rxStartIsr (mac_rx)
                                                   sAddrCmp (saddr)
                                                   sAddrCpy (saddr)
                                                   sAddrExtCmp (saddr)
                                                   sAddrExtCpy (saddr)
                                                   setItem (OSAL_Nv)
                                                   setPageUse (OSAL_Nv)
                                                   strcat (?strcat)
                                                   strcpy (?strcpy)
                                                   txComplete (mac_tx)
                                                   txCsmaPrep (mac_tx)
                                                   writeBuf (OSAL_Nv)
                                                   writeIEEE (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
                                                   writeWord (OSAL_Nv)
                                                   writeWordH (OSAL_Nv)
                                                   writeWordM (OSAL_Nv)
                                                   xferBuf (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgInit (ZGlobals)
                                                   zgItemInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008ED - 00000927 (0x3b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       000008ED        ZMacAssociateReq (zmac)
                                                   ZMacDataReq (zmac)
                                                   ZMacGetReq (zmac)
                                                   ZMacInit (zmac)
                                                   ZMacPollReq (zmac)
                                                   ZMacReset (zmac)
                                                   ZMacScanReq (zmac)
                                                   ZMacSetReq (zmac)
                                                   ZMacSyncReq (zmac)
                                                   zmain_ext_addr (ZMain)
                                                   zmain_ram_init (ZMain)
                                                   zmain_vdd_check (ZMain)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000928 - 0000097F (0x58 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    00000928        halKeyPort0Isr (hal_key)
                                                   halKeyPort1Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halTimer1Isr (hal_timer)
                                                   halTimer3Isr (hal_timer)
                                                   halTimer4Isr (hal_timer)
                                                   macMcuRfIsr (mac_mcu)
                                                   macMcuTimer2Isr (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000980 - 000009D0 (0x51 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    00000980        halKeyPort0Isr (hal_key)
                                                   halKeyPort1Isr (hal_key)
                                                   halKeyPort2Isr (hal_key)
                                                   halTimer1Isr (hal_timer)
                                                   halTimer3Isr (hal_timer)
                                                   halTimer4Isr (hal_timer)
                                                   macMcuRfIsr (mac_mcu)
                                                   macMcuTimer2Isr (mac_mcu)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000009D1 - 000009D4 (0x4 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     000009D1        APS_DataIndReflect (APS)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   afIncomingData (AF)
                                                   macScanStartTimer (mac_scan)
                                                   macStartFrameResponseTimer (mac_device)
                                                   macStartResponseTimer (mac_device)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009D5 - 000009D8 (0x4 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_THREE    000009D5        APSDE_DataIndication (APSMEDE_CB)
                                                   APSDE_DataReq (APSMEDE)
                                                   APS_CmdInd (APS)
                                                   APS_DataIndReflect (APS)
                                                   APS_Reflect (APS)
                                                   BindWriteNV (BindingTable)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeGetReq (mac_pib)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLDE_BuildMsg (nwk_util)
                                                   NLME_GetRequest (NLMEDE)
                                                   ZDApp_SendMsg (ZDApp)
                                                   ZDO_ParseEPListRsp (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_SendMsgCBs (ZDProfile)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZMacDataReq (zmac)
                                                   afBuildMSGIncoming (AF)
                                                   aps_AddGroup (aps_groups)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   bindAddEntry (BindingTable)
                                                   macScanRxBeacon (mac_scan)
                                                   macSendDataMsg (mac_main)
                                                   macSendMsg (mac_main)
                                                   nwk_BeaconFromNative (nwk)
                                                   osal_cpyExtAddr (OSAL)
                                                   sAddrExtCpy (saddr)
                                                   zgInit (ZGlobals)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009D9 - 000009DC (0x4 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      000009D9        APSME_BindRequest (APSMEDE)
                                                   APS_ReReflect (APS)
                                                   AXD_HandleKeys (AXD)
                                                   AXD_SendTheMessage (AXD)
                                                   AddrMgrEntryUpdate (AddrMgr)
                                                   BindInitNV (BindingTable)
                                                   BindRestoreFromNV (BindingTable)
                                                   BindSetDefaultNV (BindingTable)
                                                   BindWriteNV (BindingTable)
                                                   HalLcdWriteStringValue (hal_lcd)
                                                   InitBoard (OnBoard)
                                                   NLDE_DataReqSend (nwk_util)
                                                   ZDApp_InMsgCB (ZDApp)
                                                   ZDApp_LeaveCtrlInit (ZDApp)
                                                   ZDApp_LeaveCtrlSet (ZDApp)
                                                   ZDApp_LeaveCtrlStartup (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   ZDO_ProcessNodeDescReq (ZDObject)
                                                   ZDO_ProcessPowerDescReq (ZDObject)
                                                   ZDP_EPRsp (ZDProfile)
                                                   ZDP_EndDeviceBindReq (ZDProfile)
                                                   ZDP_GenericRsp (ZDProfile)
                                                   ZDP_MatchDescReq (ZDProfile)
                                                   ZDP_NodeDescMsg (ZDProfile)
                                                   ZDP_NwkAddrReq (ZDProfile)
                                                   ZDP_PowerDescMsg (ZDProfile)
                                                   ZDP_SendData (ZDProfile)
                                                   ZDP_SimpleDescMsg (ZDProfile)
                                                   aps_GroupsWriteNV (aps_groups)
                                                   compactPage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macDataTxSend (mac_data)
                                                   macScanNextChan (mac_scan)
                                                   osal_memset (OSAL)
                                                   osal_msg_receive (OSAL)
                                                   osal_nv_item_init (OSAL_Nv)
                                                   osal_nv_read (OSAL_Nv)
                                                   osal_nv_write (OSAL_Nv)
                                                   zdpProcessAddrReq (ZDProfile)
                                                   zgItemInit (ZGlobals)
                                                   zgReadStartupOptions (ZGlobals)
                                                   zgWriteStartupOptions (ZGlobals)
                                                   zmain_ext_addr (ZMain)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009DD - 000009DE (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_ONE      000009DD        APSME_UnBindRequest (APSMEDE)
                                                   APS_DataIndReflect (APS)
                                                   APS_event_loop (APS)
                                                   AXD_HandleKeys (AXD)
                                                   AXD_SendTheMessage (AXD)
                                                   NLDE_DataIndication (NLMEDE_CB)
                                                   NLDE_DataReqSend (nwk_util)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   ZDO_ProcessActiveEPReq (ZDObject)
                                                   ZDO_ProcessBindUnbindReq (ZDObject)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   afIncomingData (AF)
                                                   displayXYZ (adxl345)
                                                   erasePage (OSAL_Nv)
                                                   fillAndSend (ZDProfile)
                                                   initItem (OSAL_Nv)
                                                   initNV (OSAL_Nv)
                                                   nwk_ScanJoiningOrphan (nwk)
                                                   nwk_beacon_notify_ind_processing (nwk)
                                                   nwk_data_cnf_processing (nwk)
                                                   nwk_data_ind_processing (nwk)
                                                   nwk_event_loop (nwk)
                                                   writeBuf (OSAL_Nv)
                                                   writeIEEE (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009DF - 000009EB (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_FOUR
                                                   ?PUSH_XSTACK_I_ONE
                                                   ?PUSH_XSTACK_I_THREE
                                                   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          000009DF 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000009EC - 000009EF (0x4 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    000009EC        APS_event_loop (APS)
                                                   NLDE_DataIndSend (nwk_util)
                                                   nwk_data_ind_processing (nwk)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009F0 - 000009F3 (0x4 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     000009F0        APS_DataIndReflect (APS)
<<<<<<< HEAD
                                                   MT_ProcessDebugStr (MTEL)
                                                   MT_ProcessGetDeviceInfo (MTEL)
                                                   MT_ProcessGetNvInfo (MTEL)
                                                   MT_ProcessSerialCommand (MTEL)
=======
>>>>>>> develop
                                                   NLDE_DataReqSend (nwk_util)
                                                   ZDO_ProcessMatchDescReq (ZDObject)
                                                   afIncomingData (AF)
                                                   initItem (OSAL_Nv)
                                                   macApiAssociateReq (mac_device)
                                                   macApiPollReq (mac_device)
                                                   macAssocDataReq (mac_device)
                                                   macBackoffTimerRolloverCallback (mac_timer)
                                                   macBuildDataFrame (mac_data)
                                                   macBuildDisassociateReq (mac_mgmt)
                                                   macRxBeacon (mac_mgmt)
                                                   nwk_MacDataBuffersAdd (nwk_bufs)
                                                   osal_nv_write (OSAL_Nv)
                                                   writeItem (OSAL_Nv)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009F4 - 00000A17 (0x24 bytes), align: 0
  Segment part 5.             Intra module refs:   ?PUSH_XSTACK8_X_FOUR
                                                   ?PUSH_XSTACK8_X_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         000009F4 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_C

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A18 - 00000A1B (0x4 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C_TWO     00000A18        BindRestoreFromNV (BindingTable)
                                                   BindWriteNV (BindingTable)
                                                   zgInit (ZGlobals)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A1C - 00000A3F (0x24 bytes), align: 0
  Segment part 5.             Intra module refs:   ?PUSH_XSTACK8_C_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_C         00000A1C 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A40 - 00000A75 (0x36 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE        00000A40        APS_event_loop (APS)
                                                   HalAdcRead (hal_adc)
                                                   HalTimerStop (hal_timer)
                                                   getZMacDynamicSize (zmac_cb)
                                                   halTimerRemap (hal_timer)
                                                   halTimerSetChannelMode (hal_timer)
                                                   halTimerSetOpMode (hal_timer)
                                                   halTimerSetPrescale (hal_timer)
                                                   macBuildCommonReq (mac_mgmt)
                                                   macRxCompleteCallback (mac_data)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A76 - 00000ABB (0x46 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
<<<<<<< HEAD
           ?US_SWITCH_DENSE        00000A76        MT_ProcessSerialCommand (MTEL)
                                                   NLME_IsAddressBroadcast (nwk_util)
=======
           ?US_SWITCH_DENSE        00000A76        NLME_IsAddressBroadcast (nwk_util)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000ABC - 00000AE5 (0x2a bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_SPARSE       00000ABC        AXD_ProcessEvent (AXD)
                                                   HalLedSet (hal_led)
                                                   HalTimerInterruptEnable (hal_timer)
                                                   MAC_CbackEvent (zmac_cb)
                                                   MAC_MlmeSetReq (mac_pib)
                                                   NLME_GetRequest (NLMEDE)
                                                   ZDApp_ProcessOSALMsg (ZDApp)
                                                   macCommStatusInd (mac_mgmt)
                                                   nwk_event_loop (nwk)
                                                   nwk_scan_cnf_processing (nwk)
           ?UC_SWITCH_SPARSE_LEAVE
                                   00000AD9        ?UC_JMP_IF_IN_RANGE (?UC_JMP_IF_IN_RANGE)
                                                   ?UC_JMP_IF_VALUE (?UC_JMP_IF_VALUE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000AE6 - 00000B04 (0x1f bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_IN_RANGE     00000AE6        Segment part 0 (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B05 - 00000B1A (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_VALUE        00000B05        Segment part 0 (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B1B - 00000B66 (0x4c bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_SPARSE       00000B1B        AXD_ProcessZDOMsgs (AXD)
                                                   ZDApp_ProcessMsgCBs (ZDApp)
           ?US_SWITCH_SPARSE_LEAVE
                                   00000B57        ?US_JMP_IF_IN_RANGE (?US_JMP_IF_IN_RANGE)
                                                   ?US_JMP_IF_VALUE (?US_JMP_IF_VALUE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B67 - 00000BA5 (0x3f bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_IN_RANGE     00000B67        Segment part 0 (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000BA6 - 00000BD0 (0x2b bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_JMP_IF_VALUE        00000BA6        Segment part 0 (?US_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B35B - 0003B389 (0x2f bytes), align: 0
  Segment part 6.             Intra module refs:   memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  0003B35B 
=======
  Relative segment, address: CODE 00038A7F - 00038AAD (0x2f bytes), align: 0
  Segment part 6.             Intra module refs:   memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  00038A7F 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000002 ( 00000009 )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000232D - 00002332 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset::?relay          0000232D        osal_memset (OSAL)
=======
  Relative segment, address: CODE 00002176 - 0000217B (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset::?relay          00002176        osal_memset (OSAL)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcat

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B24E - 0003B297 (0x4a bytes), align: 0
  Segment part 6.             Intra module refs:   strcat::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat                  0003B24E 
=======
  Relative segment, address: CODE 00038972 - 000389BB (0x4a bytes), align: 0
  Segment part 6.             Intra module refs:   strcat::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat                  00038972 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002333 - 00002338 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat::?relay          00002333        _ltoa (OSAL)
=======
  Relative segment, address: CODE 0000217C - 00002181 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcat::?relay          0000217C        _ltoa (OSAL)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 3 (was BANKED_CODE)
<<<<<<< HEAD
  Relative segment, address: CODE 0003B31F - 0003B35A (0x3c bytes), align: 0
  Segment part 6.             Intra module refs:   strcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy                  0003B31F 
=======
  Relative segment, address: CODE 00038A43 - 00038A7E (0x3c bytes), align: 0
  Segment part 6.             Intra module refs:   strcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy                  00038A43 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 0000000B )
               stack 4 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 00002339 - 0000233E (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy::?relay          00002339        _ltoa (OSAL)
=======
  Relative segment, address: CODE 00002182 - 00002187 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy::?relay          00002182        _ltoa (OSAL)
>>>>>>> develop

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<<<<<<< HEAD
<BANKED_CODE> 2 (was BANKED_CODE)
  Relative segment, address: CODE 0002FFDD - 0002FFFA (0x1e bytes), align: 0
  Segment part 6.             Intra module refs:   strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  0002FFDD 
=======
<BANKED_CODE> 3 (was BANKED_CODE)
  Relative segment, address: CODE 00038AAE - 00038ACB (0x1e bytes), align: 0
  Segment part 6.             Intra module refs:   strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  00038AAE 
>>>>>>> develop
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000000 )
               stack 3 = 00000000 ( 00000000 )
               stack 4 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
<<<<<<< HEAD
  Relative segment, address: CODE 0000233F - 00002344 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen::?relay          0000233F        _ltoa (OSAL)
=======
  Relative segment, address: CODE 00002188 - 0000218D (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen::?relay          00002188        _ltoa (OSAL)
>>>>>>> develop
                                                   osal_strlen (OSAL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000163 - 00000165 (0x3 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        00000163        __low_level_init_call (?cmain)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

<<<<<<< HEAD
Module                      CODE      DATA         XDATA      IDATA    BIT
------                      ----      ----         -----      -----    ---
                           (Rel)  (Rel)  (Abs)  (Rel)  (Abs)  (Rel)  (Rel)
?ADD_XSTACK_DISP8             20
?ALLOC_XSTACK8                15
?BANKED_CODE_SUPPORT          71
?BANKED_ENTER_XDATA          101
?BANKED_LEAVE_XDATA           65
?CALL_IND                      2
?C_GPTR_LOAD                  26
?DEALLOC_XSTACK8              19
?FLT_MUL                     384
?FLT_TEST_INF                 21
?FLT_TEST_INF_R1              21
?FLT_TEST_NAN                 15
?FLT_TEST_NAN_R1              15
?FLT_TEST_ZERO                10
?FLT_TEST_ZERO_R1             10
?FLT_TO_L                    143
?FUNC_ENTER_XDATA             95
?FUNC_LEAVE_XDATA             59
?INTERRUPT_ENTER_XSP          88
?INTERRUPT_LEAVE_XSP          81
?L_ADD                        19
?L_ADD_TO_X                   19
?L_ADD_X                      19
?L_AND_TO_X                   19
?L_EQ_X                       21
?L_MOV_TO_X                   15
?L_MOV_X                      15
?L_MUL                       128
?L_NEG                        20
?L_NOT                        16
?L_SHL                        31
?L_SUB_FROM_X                 20
?L_TO_FLT                    120
?MOVE_LONG8_XDATA_CODE        34
?MOVE_LONG8_XDATA_IDATA       13
?MOVE_LONG8_XDATA_XDATA       33
?POP_BIT_ISP                  19
?PUSH_XSTACK8_C               40
?PUSH_XSTACK8_X               44
?PUSH_XSTACK_I                27
?SL_GT_X                      21
?SS_SHR                       16
?S_DIV_MOD                   154
?S_SHL                        19
?UC_JMP_IF_IN_RANGE           31
?UC_JMP_IF_VALUE              22
?UC_SWITCH_DENSE              54
?UC_SWITCH_SPARSE             42
?UL_DIV_MOD                  112
?UL_GT                        16
?UL_GT_X                      16
?UL_SHR                       25
?US_JMP_IF_IN_RANGE           63
?US_JMP_IF_VALUE              43
?US_SHR                       15
?US_SWITCH_DENSE              70
?US_SWITCH_SPARSE             76
?XSTACK_DISP8                 10
?cexit                         5
?cmain                       129
?low_level_init                3
?memset                       53
?strcat                       80
?strcpy                       66
?strlen                       36
AF                         3 332                    2
APS                        3 054                   19
APSMEDE                    3 120                   10
APSMEDE_CB                   570
AXD                        1 372                  134
AddrMgr                    1 785                    4
BindingTable               3 225                   15
CSTARTUP                      16
  + common                     3
DebugTrace                   155
MTEL                       5 679                   45      8
  + shared                                   2      4
NLMEDE                     1 498                   14
NLMEDE_CB                    890
OSAL                       3 234                   42
OSAL_AXD                     154                   17
OSAL_Memory                  646                1 671
OSAL_Nv                    6 599             3     33
OSAL_PwrMgr                   33                    7
OSAL_Timers                1 371                   13
  + shared                                          4
OnBoard                      692                   11
  + shared                                   1
ReadAXD                        9
SPIMgr                       765                    9
VIRTUAL_REGISTERS                     2                                  8
ZDApp                      3 355                   24
ZDConfig                      12                   12
ZDObject                   5 193                  119
ZDProfile                  5 432                   86
ZDSecMgr                      40
ZGlobals                     735                   53
ZMain                        821             1     31
  + shared                                   5
adxl345                    1 533                   42
aps_groups                   763                    2
aps_util                   1 250
hal_adc                      478             5
  + shared                                   2
hal_aes                       97
hal_assert                   473                    5
  + shared                                   3      4
hal_dma                       25             4     40
hal_drivers                  253                    1
hal_key                      843             3      5
  + shared                   126             4
=======
Module                     CODE      DATA      XDATA  IDATA    BIT
------                     ----      ----      -----  -----    ---
                          (Rel)  (Rel)  (Abs)  (Rel)  (Rel)  (Rel)
?ADD_XSTACK_DISP8            20
?ALLOC_XSTACK8               15
?BANKED_CODE_SUPPORT         71
?BANKED_ENTER_XDATA         101
?BANKED_LEAVE_XDATA          65
?CALL_IND                     2
?C_GPTR_LOAD                 26
?DEALLOC_XSTACK8             19
?FLT_MUL                    384
?FLT_TEST_INF                21
?FLT_TEST_INF_R1             21
?FLT_TEST_NAN                15
?FLT_TEST_NAN_R1             15
?FLT_TEST_ZERO               10
?FLT_TEST_ZERO_R1            10
?FLT_TO_L                   143
?FUNC_ENTER_XDATA            95
?FUNC_LEAVE_XDATA            59
?INTERRUPT_ENTER_XSP         88
?INTERRUPT_LEAVE_XSP         81
?L_ADD                       19
?L_ADD_TO_X                  19
?L_ADD_X                     19
?L_AND_TO_X                  19
?L_EQ_X                      21
?L_MOV_TO_X                  15
?L_MOV_X                     15
?L_MUL                      128
?L_NEG                       20
?L_NOT                       16
?L_SHL                       31
?L_SUB_FROM_X                20
?L_TO_FLT                   120
?MOVE_LONG8_XDATA_CODE       34
?MOVE_LONG8_XDATA_IDATA      13
?MOVE_LONG8_XDATA_XDATA      33
?POP_BIT_ISP                 19
?PUSH_XSTACK8_C              40
?PUSH_XSTACK8_X              44
?PUSH_XSTACK_I               27
?SL_GT_X                     21
?SS_SHR                      16
?S_DIV_MOD                  154
?S_SHL                       19
?UC_JMP_IF_IN_RANGE          31
?UC_JMP_IF_VALUE             22
?UC_SWITCH_DENSE             54
?UC_SWITCH_SPARSE            42
?UL_DIV_MOD                 112
?UL_GT                       16
?UL_GT_X                     16
?UL_SHR                      25
?US_JMP_IF_IN_RANGE          63
?US_JMP_IF_VALUE             43
?US_SHR                      15
?US_SWITCH_DENSE             70
?US_SWITCH_SPARSE            76
?XSTACK_DISP8                10
?cexit                        5
?cmain                      129
?low_level_init               3
?memset                      53
?strcat                      80
?strcpy                      66
?strlen                      36
AF                        3 332                    2
APS                       3 054                   19
APSMEDE                   3 120                   10
APSMEDE_CB                  570
AXD                       1 359                   56
AddrMgr                   1 785                    4
BindingTable              3 225                   15
CSTARTUP                     16
  + common                    3
NLMEDE                    1 498                   14
NLMEDE_CB                   890
OSAL                      3 234                   42
  + shared                                  1
OSAL_AXD                    146                   15
OSAL_Memory                 646                1 671
OSAL_Nv                   6 484             3     33
OSAL_PwrMgr                  33                    7
OSAL_Timers               1 375                   17
  + shared                                         4
OnBoard                     689                   11
  + shared                                  1
ReadAXD                       9
VIRTUAL_REGISTERS                    2                           8
ZDApp                     3 355             1     24
ZDConfig                     12                   12
ZDObject                  5 088                   54
ZDProfile                 5 432                   86
ZDSecMgr                     40
ZGlobals                    735                   53
ZMain                       603             1
  + shared                                  5
adxl345                   1 533                   42
aps_groups                  763                    2
aps_util                  1 250
hal_adc                     478             6
  + shared                                  1
hal_aes                      97
hal_assert                  473                    5
  + shared                                  3      4
hal_dma                      25             4     40
hal_drivers                 247                    1
hal_key                     843             4      5
  + shared                  126             3
>>>>>>> develop
  + common
hal_lcd                     249
hal_led                   1 436                   39
  + shared                                         4
hal_sleep                    29
  + shared                   46             1
  + common
<<<<<<< HEAD
hal_timer                  2 749            11     60
  + common                   102
hal_uart                   3 575             7      3
  + shared                                   2
mac_backoff_timer            689                   13
  + shared                                   3
mac_cfg                        5                    5
mac_coord                      4
  + shared                                          4
mac_csp_tx                   747             1
  + shared                                   4
mac_data                   2 123                   27
mac_device                 1 810                   20
mac_low_level                 77
mac_main                   1 663                   48
mac_mcu                    1 086            11      2
  + common                   134
mac_mem                      152             1
mac_mgmt                   2 921                    2
mac_pib                      846                   59
mac_pwr                       31                    1
mac_radio                    794                    4
mac_radio_defs                26
mac_rx                     2 596                   18
mac_rx_onoff                 418                    2
mac_scan                   1 470                   28
mac_sleep                     77                    1
mac_timer                  1 044                   14
mac_tx                     1 143                    8
nwk                        3 951                  107
nwk_bufs                   1 688                    3
nwk_globals                  503                  282
nwk_util                   4 199                   11
osal_nv_util                 287
reflecttrack                 730                    6
saddr                        404
ssp                           88                    4
zmac                         826                    6
zmac_cb                    1 287
N/A (command line)                   16           768           192
N/A (alignment)
----------               -------     --     --  -----      -    ---      -
Total:                   106 016     18     76  4 046      8    192      8
  + common                   134
=======
hal_timer                 2 749            11     60
  + common                  102
hal_uart                    863
mac_backoff_timer           689                   13
  + shared                                  3
mac_cfg                       5                    5
mac_coord                     4
  + shared                                         4
mac_csp_tx                  747             1
  + shared                                  4
mac_data                  2 123                   27
mac_device                1 810                   20
mac_low_level                77
mac_main                  1 663                   48
mac_mcu                   1 086            11      2
  + common                  134
mac_mem                     152             1
mac_mgmt                  2 921                    2
mac_pib                     846                   59
mac_pwr                      31                    1
mac_radio                   794                    4
mac_radio_defs               26
mac_rx                    2 596                   18
mac_rx_onoff                418                    2
mac_scan                  1 470                   28
mac_sleep                    77                    1
mac_timer                 1 044                   14
mac_tx                    1 143                    8
nwk                       3 951                  107
nwk_bufs                  1 688                    3
nwk_globals                 264                  205
nwk_util                  4 199                   11
osal_nv_util                287
reflecttrack                730                    6
saddr                       404
ssp                          88                    4
zmac                        826                    6
zmac_cb                   1 287
N/A (command line)                  16           768    192
N/A (alignment)
----------               ------     --     --  -----    ---      -
Total:                   94 321     18     65  3 717    192      8
  + common                  134
>>>>>>> develop


                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 00000165          E0   rel    0
RCODE                CODE          00000166 - 00000BD0         A6B   rel    0
<<<<<<< HEAD
NEAR_CODE            CODE          00000BD1 - 00001480         8B0   rel    0
BANK_RELAYS          CODE          00001481 - 00002344         EC4   rel    0
PDATA_ID             CODE               00002345                     dse    0
BDATA_ID             CODE               00002345                     dse    0
BIT_ID               CODE               00002345                     dse    0
IDATA_ID             CODE               00002345                     dse    0
IXDATA_ID            CODE               00002345                     dse    0
DATA_ID              CODE               00002345                     dse    0
XDATA_ID             CODE          00002345 - 00002512         1CE   rel    0
CODE_C               CODE          00002513 - 00002AC4         5B2   rel    0
<BANKED_CODE> 1      CODE          00014001 - 0001FFFF        BFFF   rel    0
<BANKED_CODE> 2      CODE          00028000 - 0002FFFA        7FFB   rel    0
<BANKED_CODE> 3      CODE          00038000 - 0003B3E6        33E7   rel    0
=======
NEAR_CODE            CODE          00000BD1 - 000013C5         7F5   rel    0
BANK_RELAYS          CODE          000013C6 - 0000218D         DC8   rel    0
PDATA_ID             CODE               0000218E                     dse    0
BIT_ID               CODE               0000218E                     dse    0
BDATA_ID             CODE               0000218E                     dse    0
IDATA_ID             CODE               0000218E                     dse    0
IXDATA_ID            CODE               0000218E                     dse    0
DATA_ID              CODE               0000218E                     dse    0
XDATA_ID             CODE          0000218E - 0000226F          E2   rel    0
CODE_C               CODE          00002270 - 000025E1         372   rel    0
<BANKED_CODE> 1      CODE          00014001 - 0001FFFF        BFFF   rel    0
<BANKED_CODE> 2      CODE          00028000 - 0002FFFF        8000   rel    0
<BANKED_CODE> 3      CODE          00038000 - 00038B15         B16   rel    0
>>>>>>> develop
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 0000000F           8   rel    0
PSP                  DATA               00000010                     dse    0
XSP                  DATA          00000010 - 00000011           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
SFR_AN               DATA          00000080 - 00000081           2   rel    0
                     DATA          00000088 - 00000089           2 
                     DATA          0000008C - 0000008C           1 
                     DATA          0000008F - 00000091           3 
                     DATA          00000094 - 00000094           1 
                     DATA          0000009A - 0000009E           5 
                     DATA          000000A0 - 000000A9           A 
                     DATA          000000AB - 000000AB           1 
                     DATA          000000AD - 000000AE           2 
                     DATA          000000B4 - 000000B6           3 
                     DATA          000000B8 - 000000BE           7 
                     DATA          000000C0 - 000000C0           1 
                     DATA          000000C3 - 000000C3           1 
                     DATA          000000C6 - 000000C6           1 
                     DATA          000000C9 - 000000C9           1 
                     DATA          000000CB - 000000CC           2 
                     DATA          000000CE - 000000CE           1 
                     DATA          000000D2 - 000000D5           4 
                     DATA          000000D8 - 000000D9           2 
                     DATA          000000E1 - 000000E1           1 
                     DATA          000000E4 - 000000E9           6 
                     DATA          000000EB - 000000EC           2 
                     DATA          000000EE - 000000EE           1 
                     DATA          000000F2 - 000000F3           2 
                     DATA          000000FD - 000000FF           3 
<<<<<<< HEAD
XDATA_AN             XDATA         0000E000 - 0000E007           8   rel    0
XSTACK               XDATA         0000E008 - 0000E307         300   rel    0
IXDATA_I             XDATA              0000E308                     dse    0
XDATA_N              XDATA              0000E308                     dse    0
XDATA_Z              XDATA         0000E308 - 0000EE07         B00   rel    0
XDATA_I              XDATA         0000EE08 - 0000EFD5         1CE   rel    0
=======
XSTACK               XDATA         0000E000 - 0000E2FF         300   rel    0
IXDATA_I             XDATA              0000E300                     dse    0
XDATA_N              XDATA              0000E300                     dse    0
XDATA_Z              XDATA         0000E300 - 0000EDA2         AA3   rel    0
XDATA_I              XDATA         0000EDA3 - 0000EE84          E2   rel    0
>>>>>>> develop
ISTACK               IDATA         00000040 - 000000FF          C0   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

<<<<<<< HEAD
 106 150 bytes of CODE  memory
      18 bytes of DATA  memory (+ 76 absolute )
   4 046 bytes of XDATA memory (+  8 absolute )
     192 bytes of IDATA memory
       8 bits  of BIT   memory
=======
 94 455 bytes of CODE  memory
     18 bytes of DATA  memory (+ 65 absolute )
  3 717 bytes of XDATA memory
    192 bytes of IDATA memory
      8 bits  of BIT   memory
>>>>>>> develop

Errors: none
Warnings: none

